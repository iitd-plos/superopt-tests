=SpecFuncIOSpecs
=FunctionName: sum_list
=EntryPreconds
=pred 0
=Comment
pointer-implements-inductive-list
=LhsExpr
1 : $spec-arg-0 : IND[vec, SUM[UNIT, PROD[BV:32, DECL[vec]]]]
2 : $llvm-arg-0 : BV:32
3 : $llvm-md : ARRAY[BV:32 -> BV:8]
4 : $llvm-ma : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-top : MEMLABEL
6 : 1 : INT
7 : 0 : BOOL
8 : 0 : BV:32
9 : 1 : BV:32
10 : Lambda0 : BV:32
11 : Lambda1 : BV:32
12 : unit : UNIT
13 : Indxform0 : BV:32
14 : 4 : BV:32
15 : 16 : BV:32
16 : 3 : BV:32
17 : eq(10, 8) : BOOL
18 : ite(17, 8, 9) : BV:32
19 : bvmul(14, 11) : BV:32
20 : bvadd(10, 19) : BV:32
21 : 4 : INT
22 : select(3, 4, 5, 20, 21, 7) : BV:32
23 : prod(22, 13) : PROD[BV:32, BV:32]
24 : sum(18, 12, 23) : SUM[UNIT, PROD[BV:32, BV:32]]
25 : lambda(10, 11, 24) : FUNCTION[BV:32, BV:32 -> SUM[UNIT, PROD[BV:32, BV:32]]]
26 : eq(11, 16) : BOOL
27 : bvadd(10, 15) : BV:32
28 : select(3, 4, 5, 27, 21, 7) : BV:32
29 : ite(26, 28, 10) : BV:32
30 : lambda(10, 11, 29) : FUNCTION[BV:32, BV:32 -> BV:32]
31 : bvadd(11, 9) : BV:32
32 : bvurem(31, 14) : BV:32
33 : lambda(10, 11, 32) : FUNCTION[BV:32, BV:32 -> BV:32]
34 : 2 : INT
35 : ind(34, 6, 2, 8, 13, 30, 33, 25) : IND[vec, SUM[UNIT, PROD[BV:32, DECL[vec]]]]
36 : eq(1, 35) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=EntryPreconds done
=ExitAsserts
=pred 0
=Comment
equal-ret
=LhsExpr
1 : $spec-ret : BV:32
2 : $llvm-ret : BV:32
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=ExitAsserts done
=SpecFuncIOSpecs done
