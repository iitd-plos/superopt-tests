=SpecFuncIOSpecs
=FunctionName: sum_tree
=EntryPreconds
=pred 0
=Comment
pointer-implements-inductive-tree
=LhsExpr
1 : $spec-arg-0 : IND[Tree, SUM[UNIT, PROD[BV:32, DECL[Tree], DECL[Tree]]]]
2 : $llvm-arg-0 : BV:32
3 : $llvm-arg-1 : BV:32
4 : $llvm-arg-2 : BV:32
5 : memlabel-top : MEMLABEL
6 : 4 : INT
7 : 0 : BOOL
8 : 0 : BV:32
9 : 1 : BV:32
10 : Lambda0 : BV:32
11 : bvuge(10, 3) : BOOL
12 : ite(11, 8, 9) : BV:32
13 : unit : UNIT
14 : Indxform0 : BV:32
15 : Indxform1 : BV:32
16 : 4 : BV:32
17 : bvmul(16, 10) : BV:32
18 : bvadd(2, 17) : BV:32
19 : $llvm-md : ARRAY[BV:32 -> BV:8]
20 : $llvm-ma : ARRAY[BV:32 -> MEMLABEL]
21 : select(19, 20, 5, 18, 6, 7) : BV:32
22 : prod(21, 14, 15) : PROD[BV:32, BV:32, BV:32]
23 : sum(12, 13, 22) : SUM[UNIT, PROD[BV:32, BV:32, BV:32]]
24 : lambda(10, 23) : FUNCTION[BV:32 -> SUM[UNIT, PROD[BV:32, BV:32, BV:32]]]
25 : Lambda1 : BV:32
26 : 2 : BV:32
27 : bvmul(25, 26) : BV:32
28 : bvadd(27, 9) : BV:32
29 : lambda(25, 28) : FUNCTION[BV:32 -> BV:32]
30 : Lambda2 : BV:32
31 : bvmul(30, 26) : BV:32
32 : bvadd(31, 26) : BV:32
33 : lambda(30, 32) : FUNCTION[BV:32 -> BV:32]
34 : 1 : INT
35 : 2 : INT
36 : ind(34, 35, 4, 14, 29, 15, 33, 24) : IND[Tree, SUM[UNIT, PROD[BV:32, DECL[Tree], DECL[Tree]]]]
37 : eq(1, 36) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=EntryPreconds done
=ExitAsserts
=pred 0
=Comment
equal-ret
=LhsExpr
1 : $spec-ret : BV:32
2 : $llvm-ret : BV:32
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=ExitAsserts done
=SpecFuncIOSpecs done
