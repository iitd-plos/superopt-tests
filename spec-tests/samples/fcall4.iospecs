=SpecFuncIOSpecs
=FunctionName: foo
=EntryPreconds
=pred 0
=Comment
pointer-implements-2d-map-arg0
=LhsExpr
1 : $spec-arg-0 : MAP[BV:32 -> MAP[BV:32 -> BV:32]]
2 : $llvm-arg-0 : BV:32
3 : Lambda0 : BV:32
4 : Lambda1 : BV:32
5 : 0 : BV:32
6 : $llvm-arg-1 : BV:32
7 : $llvm-arg-2 : BV:32
8 : $llvm-md : ARRAY[BV:32 -> BV:8]
9 : $llvm-ma : ARRAY[BV:32 -> MEMLABEL]
10 : 4 : INT
11 : 0 : BOOL
12 : Lambda2 : BV:32
13 : bvule(5, 3) : BOOL
14 : bvult(3, 6) : BOOL
15 : and(13, 14) : BOOL
16 : lambda(3, 15) : FUNCTION[BV:32 -> BOOL]
17 : Lambda3 : BV:32
18 : bvule(5, 4) : BOOL
19 : bvult(4, 7) : BOOL
20 : and(18, 19) : BOOL
21 : lambda(4, 20) : FUNCTION[BV:32 -> BOOL]
22 : memlabel-top : MEMLABEL
23 : 4 : BV:32
24 : bvmul(23, 17) : BV:32
25 : bvadd(2, 24) : BV:32
26 : select(8, 9, 22, 25, 10, 11) : BV:32
27 : bvmul(23, 12) : BV:32
28 : bvadd(26, 27) : BV:32
29 : select(8, 9, 22, 28, 10, 11) : BV:32
30 : lambda(12, 29) : FUNCTION[BV:32 -> BV:32]
31 : map(21, 30) : MAP[BV:32 -> BV:32]
32 : lambda(17, 31) : FUNCTION[BV:32 -> MAP[BV:32 -> BV:32]]
33 : map(16, 32) : MAP[BV:32 -> MAP[BV:32 -> BV:32]]
34 : eq(1, 33) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pred 1
=Comment
equal-arg1
=LhsExpr
1 : $spec-arg-1 : BV:32
2 : $llvm-arg-1 : BV:32
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pred 2
=Comment
equal-arg2
=LhsExpr
1 : $spec-arg-2 : BV:32
2 : $llvm-arg-2 : BV:32
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=EntryPreconds done
=ExitAsserts
=pred 0
=Comment
equal-ret
=LhsExpr
1 : $spec-ret : BV:32
2 : $llvm-ret : BV:32
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=ExitAsserts done
=FunctionName: bar
=EntryPreconds
=pred 0
=Comment
pointer-implements-2d-map-arg0
=LhsExpr
1 : $spec-arg-0 : MAP[BV:32 -> MAP[BV:32 -> BV:32]]
2 : $llvm-arg-0 : BV:32
3 : Lambda0 : BV:32
4 : Lambda1 : BV:32
5 : 0 : BV:32
6 : $llvm-arg-2 : BV:32
7 : $llvm-arg-3 : BV:32
8 : $llvm-md : ARRAY[BV:32 -> BV:8]
9 : $llvm-ma : ARRAY[BV:32 -> MEMLABEL]
10 : 4 : INT
11 : 0 : BOOL
12 : Lambda2 : BV:32
13 : bvule(5, 3) : BOOL
14 : bvult(3, 6) : BOOL
15 : and(13, 14) : BOOL
16 : lambda(3, 15) : FUNCTION[BV:32 -> BOOL]
17 : Lambda3 : BV:32
18 : bvule(5, 4) : BOOL
19 : bvult(4, 7) : BOOL
20 : and(18, 19) : BOOL
21 : lambda(4, 20) : FUNCTION[BV:32 -> BOOL]
22 : memlabel-top : MEMLABEL
23 : 4 : BV:32
24 : bvmul(23, 17) : BV:32
25 : bvadd(2, 24) : BV:32
26 : select(8, 9, 22, 25, 10, 11) : BV:32
27 : bvmul(23, 12) : BV:32
28 : bvadd(26, 27) : BV:32
29 : select(8, 9, 22, 28, 10, 11) : BV:32
30 : lambda(12, 29) : FUNCTION[BV:32 -> BV:32]
31 : map(21, 30) : MAP[BV:32 -> BV:32]
32 : lambda(17, 31) : FUNCTION[BV:32 -> MAP[BV:32 -> BV:32]]
33 : map(16, 32) : MAP[BV:32 -> MAP[BV:32 -> BV:32]]
34 : eq(1, 33) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pred 1
=Comment
pointer-implements-2d-map-arg1
=LhsExpr
1 : $spec-arg-1 : MAP[BV:32 -> MAP[BV:32 -> BV:32]]
2 : $llvm-arg-1 : BV:32
3 : Lambda0 : BV:32
4 : Lambda1 : BV:32
5 : 0 : BV:32
6 : $llvm-arg-2 : BV:32
7 : $llvm-arg-3 : BV:32
8 : $llvm-md : ARRAY[BV:32 -> BV:8]
9 : $llvm-ma : ARRAY[BV:32 -> MEMLABEL]
10 : 4 : INT
11 : 0 : BOOL
12 : Lambda2 : BV:32
13 : bvule(5, 3) : BOOL
14 : bvult(3, 6) : BOOL
15 : and(13, 14) : BOOL
16 : lambda(3, 15) : FUNCTION[BV:32 -> BOOL]
17 : Lambda3 : BV:32
18 : bvule(5, 4) : BOOL
19 : bvult(4, 7) : BOOL
20 : and(18, 19) : BOOL
21 : lambda(4, 20) : FUNCTION[BV:32 -> BOOL]
22 : memlabel-top : MEMLABEL
23 : 4 : BV:32
24 : bvmul(23, 17) : BV:32
25 : bvadd(2, 24) : BV:32
26 : select(8, 9, 22, 25, 10, 11) : BV:32
27 : bvmul(23, 12) : BV:32
28 : bvadd(26, 27) : BV:32
29 : select(8, 9, 22, 28, 10, 11) : BV:32
30 : lambda(12, 29) : FUNCTION[BV:32 -> BV:32]
31 : map(21, 30) : MAP[BV:32 -> BV:32]
32 : lambda(17, 31) : FUNCTION[BV:32 -> MAP[BV:32 -> BV:32]]
33 : map(16, 32) : MAP[BV:32 -> MAP[BV:32 -> BV:32]]
34 : eq(1, 33) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pred 2
=Comment
equal-arg2
=LhsExpr
1 : $spec-arg-2 : BV:32
2 : $llvm-arg-2 : BV:32
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pred 3
=Comment
equal-arg3
=LhsExpr
1 : $spec-arg-3 : BV:32
2 : $llvm-arg-3 : BV:32
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=EntryPreconds done
=ExitAsserts
=pred 0
=Comment
equal-ret
=LhsExpr
1 : $spec-ret : BV:32
2 : $llvm-ret : BV:32
13 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=ExitAsserts done
=SpecFuncIOSpecs done
