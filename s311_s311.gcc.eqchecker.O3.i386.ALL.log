<MSG>Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function s311</MSG>
<MSG>Converting C source code to LLVM IR bitcode...</MSG>
<MSG>Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>Converting assembly code to object file...</MSG>
<MSG>Harvesting object code to obtain harvested assembly...</MSG>
<MSG>Converting harvested assembly to Transfer Function Graph (TFG)...</MSG>
<MSG>Searching for equivalence at unroll factor 4</MSG>
<MSG>Computing equivalence for function: s311...</MSG>
<MSG>Computing equivalence of the two TFGs (LLVM IR and x86 assembly)...</MSG>
<MSG>Chose product-TFG  from a frontier of size 1...</MSG>
<MSG>Created 12 possibilities in group A...</MSG>
<MSG>Chose product-TFG A9 from a frontier of size 12...</MSG>
<MSG>product-TFG A9 created 12 possibilities in group A9.B...</MSG>
<MSG>Chose product-TFG A9.B12 from a frontier of size 23...</MSG>
<MSG>product-TFG A9.B12 created 1 possibilities in group A9.B12.C...</MSG>
<MSG>Chose product-TFG A9.B12.C1 from a frontier of size 23...</MSG>
<MSG>Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>Checking equivalence proof...</MSG>
<MSG>Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
<MSG>Checking equivalence proof with relocatable memlabels...</MSG>
<MSG>Forcing use of abstract memlabel assertions...</MSG>
<MSG>Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
<MSG>Equivalence check passed on product CFG with relocatable memlabels...</MSG>
<MSG>Check passed on product-CFG...</MSG>
<MSG>Safety check passed on product-CFG...</MSG>
<MSG>DST Memlabel check passed on product-CFG...</MSG>
PASS equivalence check for function s311. 15.08s, query:smt.: 9.03775s (num_starts 181), decide_hoare_triple.ce.: 11.9373s (num_starts 382), decide_hoare_triple_helper.: 10.79s (num_starts 500)
Time taken for equivalence check.: 14.9035s (num_starts 1)
Equivalence proof found. The programs are equivalent.
