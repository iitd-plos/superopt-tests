=FunctionName: s112
=result: 1
=corr_graph s112
=src_tfg
=TFG_LLVM llvm.s112:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.s112.0 : memlabel-mem-symbol.1.0
=memlabel_map.1
mlvar.llvm.s112.1 : memlabel-mem-symbol.2.0
=memlabel_map.2
mlvar.llvm.s112.2 : memlabel-mem-symbol.1.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !32

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100003=>Lfor.body%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100004=>Lfor.body%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100005=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%3%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100004=>Lfor.body%3%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100005=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%4%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100003=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%7%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100003=>Lfor.body%7%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100004=>Lfor.body%7%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100005=>Lfor.body%8%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%1=>Lfor.body%9%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%1=>Lfor.body%9%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100003=>Lfor.body%9%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : bvadd(3, 6) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvadd(11, 15) : BV:32
17 : store(1, 2, 7, 16, 9, 10) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%1%100003
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100003=>Lfor.body%1%100004
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100004=>Lfor.body%1%100005
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100005=>Lfor.body%2%1
=src.llvm-%arrayidx
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%3%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%3%100004
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100004=>Lfor.body%3%100005
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100005=>Lfor.body%4%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%4%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100003=>Lfor.body%5%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%6%1
=src.llvm-%add
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%7%1
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%7%100003
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100003=>Lfor.body%7%100004
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100004=>Lfor.body%7%100005
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100005=>Lfor.body%8%1
=src.llvm-%arrayidx3
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%1=>Lfor.body%9%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%1=>Lfor.body%9%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100003=>Lfor.body%9%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%dec : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 8
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 9
1 : 0 : BV:32
2 : 4 : BV:64
3 : input.src.llvm-%i.0 : BV:32
4 : 1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 32 : INT
7 : bvsign_ext(5, 6) : BV:64
8 : bvmul(2, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 6) : BV:32
11 : eq(1, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 10
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : bvadd(2, 4) : BV:32
7 : isgepoffset(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 assume# 0
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100004=>Lfor.body%3%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100004=>Lfor.body%3%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100005=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100005=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 assume# 0
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%add2 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%7%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%7%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100005=>Lfor.body%8%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100005=>Lfor.body%8%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 assume# 0
1 : input.src.llvm-%arrayidx3 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1027
1 : 31998 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1028
1 : 31998 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1028
1 : 31998 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1027
1 : 31998 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1019
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1024
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1025
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1027
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1028
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1034
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : bvadd(3, 6) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvadd(11, 15) : BV:32
17 : store(1, 2, 7, 16, 9, 10) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1024
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 for loc_id 1022
1 : symbol.1 : BV:32
2 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 for loc_id 1011
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005 for loc_id 1006
1 : symbol.2 : BV:32
2 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1 for loc_id 1012
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1 for loc_id 1009
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 for loc_id 1010
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1016
1 : 4 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1019
1 : 4 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005 for loc_id 1017
1 : symbol.1 : BV:32
2 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1 for loc_id 1013
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 for loc_id 1034
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx3 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1026
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1029
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1025
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1028
1 : input.src.llvm-%dec : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1027
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.s112
=Loc 1001 in llvm.s112.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.s112.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.s112.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset : BV:32
=Loc 1005 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset : BV:32
=Loc 1006 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset : BV:32
=Loc 1007 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset : BV:32
=Loc 1008 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset : BV:32
=Loc 1009 in llvm.s112.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1010 in llvm.s112.
LLVMVAR
src.llvm-%add2
1 : input.src.llvm-%add2 : BV:32
=Loc 1011 in llvm.s112.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1012 in llvm.s112.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1013 in llvm.s112.
LLVMVAR
src.llvm-%arrayidx3
1 : input.src.llvm-%arrayidx3 : BV:32
=Loc 1014 in llvm.s112.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1015 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset : BV:32
=Loc 1016 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset : BV:32
=Loc 1017 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : BV:32
=Loc 1018 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset : BV:32
=Loc 1019 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset : BV:32
=Loc 1020 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset : BV:32
=Loc 1021 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset : BV:32
=Loc 1022 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset : BV:32
=Loc 1023 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset : BV:32
=Loc 1024 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset : BV:32
=Loc 1025 in llvm.s112.
LLVMVAR
src.llvm-%dec
1 : input.src.llvm-%dec : BV:32
=Loc 1026 in llvm.s112.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1027 in llvm.s112.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1028 in llvm.s112.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1029 in llvm.s112.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1030 in llvm.s112.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1031 in llvm.s112.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1032 in llvm.s112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1033 in llvm.s112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1034 in llvm.s112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1035 in llvm.s112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0

=Alias analysis results in llvm.s112
=Alias analysis result in llvm.s112 at L0%0%1
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at E0%0%1
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1029 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr

=Liveness in llvm.s112
=live locs at L0%0%1
1032, 1034, 1035
=live locs at Lfor.cond%1%0
1027, 1032, 1034, 1035
=live locs at Lfor.cond%2%1
1014, 1027, 1032, 1034, 1035
=live locs at Lfor.body%1%1
1027, 1032, 1034, 1035
=live locs at Lfor.end%1%1
1032, 1034, 1035
=live locs at E0%0%1
1032, 1034, 1035

=Available expressions in llvm.s112
=available expressions at L0%0%1 in llvm.s112
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.s112
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.s112
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17401 : bvsge(17400, 17389) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.s112
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17401 : bvsge(17400, 17389) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.s112
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17401 : bvsge(17400, 17389) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.s112
=avail_exprs begin
=loc 1001
=from_expr
17518 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17401 : bvsge(17400, 17389) : BOOL
=loc 1029
=from_expr
17525 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.s112
=sprel_map at L0%0%1 in llvm.s112
=sprel_map at Lfor.cond%1%0 in llvm.s112
=sprel_map at Lfor.cond%2%1 in llvm.s112
=sprel_map at Lfor.body%1%1 in llvm.s112
=sprel_map at Lfor.end%1%1 in llvm.s112
=sprel_map at E0%0%1 in llvm.s112
=loc 1001
17389 : 0 : BV:32
=loc 1029
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 9 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 9 at column 27)
=pc
Lfor.cond%2%1
=linename
(line 9 at column 3)
=pc
Lfor.body%1%1
=linename
(line 10 at column 13)
=pc
Lfor.body%2%1
=linename
(line 10 at column 13)
=pc
Lfor.body%3%1
=linename
(line 10 at column 20)
=pc
Lfor.body%4%1
=linename
(line 10 at column 20)
=pc
Lfor.body%5%1
=linename
(line 10 at column 18)
=pc
Lfor.body%6%1
=linename
(line 10 at column 7)
=pc
Lfor.body%7%1
=linename
(line 10 at column 4)
=pc
Lfor.body%8%1
=linename
line 10
=pc
Lfor.body%9%1
=linename
line 11
=pc
Lfor.end%1%1
=linename
line 12
=pc
Lfor.inc%1%1
=linename
(line 9 at column 34)
=pc
Lfor.inc%2%1
=linename
line 9
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 27
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 13
=pc
Lfor.body%2%1
=column_name
 at column 13
=pc
Lfor.body%3%1
=column_name
 at column 20
=pc
Lfor.body%4%1
=column_name
 at column 20
=pc
Lfor.body%5%1
=column_name
 at column 18
=pc
Lfor.body%6%1
=column_name
 at column 7
=pc
Lfor.body%7%1
=column_name
 at column 4
=pc
Lfor.body%8%1
=column_name
 at column 11
=pc
Lfor.body%9%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 34
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 9
=pc
Lfor.cond%1%1
=line_and_column
line 9
=pc
Lfor.cond%2%1
=line_and_column
line 9
=pc
Lfor.body%1%1
=line_and_column
line 10
=pc
Lfor.body%2%1
=line_and_column
line 10
=pc
Lfor.body%3%1
=line_and_column
line 10
=pc
Lfor.body%4%1
=line_and_column
line 10
=pc
Lfor.body%5%1
=line_and_column
line 10
=pc
Lfor.body%6%1
=line_and_column
line 10
=pc
Lfor.body%7%1
=line_and_column
line 10
=pc
Lfor.body%8%1
=line_and_column
line 10
=pc
Lfor.body%9%1
=line_and_column
line 11
=pc
Lfor.end%1%1
=line_and_column
line 12
=pc
Lfor.inc%1%1
=line_and_column
line 9
=pc
Lfor.inc%2%1
=line_and_column
line 9
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%i.0.phi.tmpvar : 31998
input.src.llvm-%i.0 : i
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset : (@b + bvmul(i, 4))
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset : (@a + bvmul(i, 4))
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%arrayidx : (@a + bvmul(i, 4))
input.src.llvm-%arrayidx1 : (@b + bvmul(i, 4))
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset : 0
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset : 0
input.llvm-%ret-reg : 0
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset : 0
input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset : 0
input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset : bvmul(4, (i + 1))
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset : 0
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%cmp : (i&gt;=<sub>s</sub>0)
input.src.llvm-%arrayidx3 : (@a + bvmul(4, (i + 1)))
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%add2 : (i + 1)
input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset : 0
input.src.llvm-%add : (input.src.llvm-%0 + input.src.llvm-%1)
input.src.llvm-%dec : i
input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : (@a + bvmul(4, (i + 1)))
input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset : bvmul(4, (i + 1))
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L1%1%0 L10%1%1 L11%1%0 E0%0%1
=Edges:
L10%1%1 => L1%1%0
L10%1%1 => L11%1%0
L0%0%1 => L1%1%0
L1%1%0 => L10%1%1
L11%1%0 => E0%0%1
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L1%1%0
=L1%1%0 assume predicate_set done
=L1%1%0 assert predicate_set done
=Node assumes and asserts: L10%1%1
=L10%1%1 assume predicate_set done
=L10%1%1 assert predicate_set done
=Node assumes and asserts: L11%1%0
=L11%1%0 assume predicate_set done
=L11%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.2
mlvar.dst.10 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.3
mlvar.dst.11 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.4
mlvar.dst.12 : memlabel-mem-esp
=memlabel_map.5
mlvar.dst.13 : memlabel-mem-esp
=memlabel_map.6
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.7
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.8
mlvar.dst.4 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.9
mlvar.dst.5 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.10
mlvar.dst.6 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.11
mlvar.dst.7 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.12
mlvar.dst.8 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.13
mlvar.dst.9 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=Edge: L10%1%1 => L1%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L10%1%1 => L11%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L1%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)

=Edge: L1%1%0 => L10%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)

=Edge: L11%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.5
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.11 : MEMLABEL
45 : mlvar.dst.9 : MEMLABEL
46 : select(43, 45, 22, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : select(43, 48, 3, 16, 17) : BV:32
50 : bvzero_ext(49, 19) : BV:33
51 : bvadd(47, 50) : BV:33
52 : bvextract(51, 5, 6) : BV:32
53 : store(43, 44, 38, 52, 16, 17) : ARRAY[BV:32 -> BV:8]
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.11 : MEMLABEL
45 : mlvar.dst.9 : MEMLABEL
46 : select(43, 45, 22, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : select(43, 48, 3, 16, 17) : BV:32
50 : bvzero_ext(49, 19) : BV:33
51 : bvadd(47, 50) : BV:33
52 : bvextract(51, 5, 6) : BV:32
53 : store(43, 44, 38, 52, 16, 17) : ARRAY[BV:32 -> BV:8]
54 : mlvar.dst.12 : MEMLABEL
55 : input.dst.exreg.0.4 : BV:32
56 : select(53, 54, 55, 16, 17) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 1 : BV:64
9 : 0 : INT
10 : bvextract(8, 2, 9) : BV:32
11 : bvmul(7, 10) : BV:32
12 : 8 : BV:64
13 : bvextract(12, 2, 9) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(5, 6, 14, 15, 16) : BV:32
18 : bvzero_ext(17, 3) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.2 : BV:32
21 : bvmul(20, 10) : BV:32
22 : bvadd(21, 13) : BV:32
23 : select(5, 19, 22, 15, 16) : BV:32
24 : bvzero_ext(23, 3) : BV:33
25 : bvadd(18, 24) : BV:33
26 : 32 : INT
27 : bvextract(25, 26, 26) : BV:1
28 : 1 : BV:1
29 : eq(27, 28) : BOOL
30 : 0 : BV:1
31 : ite(29, 28, 30) : BV:1
32 : bvconcat(4, 31) : BV:32
33 : 5 : INT
34 : bvextract(32, 2, 33) : BV:27
35 : bvextract(25, 2, 9) : BV:32
36 : bvextract(35, 15, 15) : BV:1
37 : eq(36, 28) : BOOL
38 : bvextract(18, 15, 15) : BV:1
39 : eq(38, 28) : BOOL
40 : xor(37, 39) : BOOL
41 : ite(40, 28, 30) : BV:1
42 : 3 : INT
43 : bvextract(32, 42, 9) : BV:4
44 : bvconcat(41, 43) : BV:5
45 : bvconcat(34, 44) : BV:32
46 : 12 : INT
47 : bvextract(45, 2, 46) : BV:20
48 : bvextract(18, 2, 2) : BV:1
49 : eq(48, 28) : BOOL
50 : bvextract(24, 2, 2) : BV:1
51 : eq(50, 28) : BOOL
52 : iff(49, 51) : BOOL
53 : bvextract(18, 2, 9) : BV:32
54 : bvextract(24, 2, 9) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvextract(55, 2, 2) : BV:1
57 : eq(56, 28) : BOOL
58 : xor(49, 57) : BOOL
59 : and(52, 58) : BOOL
60 : ite(59, 28, 30) : BV:1
61 : 10 : INT
62 : bvextract(45, 61, 9) : BV:11
63 : bvconcat(60, 62) : BV:12
64 : bvconcat(47, 63) : BV:32
65 : 8 : INT
66 : bvextract(64, 2, 65) : BV:24
67 : ite(57, 28, 30) : BV:1
68 : 6 : INT
69 : bvextract(64, 68, 9) : BV:7
70 : bvconcat(67, 69) : BV:8
71 : bvconcat(66, 70) : BV:32
72 : 7 : INT
73 : bvextract(71, 2, 72) : BV:25
74 : 0 : BV:32
75 : eq(35, 74) : BOOL
76 : ite(75, 28, 30) : BV:1
77 : bvextract(71, 33, 9) : BV:6
78 : bvconcat(76, 77) : BV:7
79 : bvconcat(73, 78) : BV:32
80 : bvextract(79, 2, 42) : BV:29
81 : bvextract(79, 3, 9) : BV:2
82 : bvconcat(30, 81) : BV:3
83 : bvconcat(80, 82) : BV:32
84 : 11 : INT
85 : bvextract(83, 2, 84) : BV:21
86 : bvextract(1, 61, 61) : BV:1
87 : eq(86, 28) : BOOL
88 : ite(87, 28, 30) : BV:1
89 : 9 : INT
90 : bvextract(83, 89, 9) : BV:10
91 : bvconcat(88, 90) : BV:11
92 : bvconcat(85, 91) : BV:32
93 : bvextract(92, 2, 3) : BV:31
94 : mlvar.dst.5 : MEMLABEL
95 : 12 : BV:64
96 : bvextract(95, 2, 9) : BV:32
97 : bvadd(11, 96) : BV:32
98 : store(5, 94, 97, 35, 15, 16) : ARRAY[BV:32 -> BV:8]
99 : mlvar.dst.6 : MEMLABEL
100 : 4 : BV:64
101 : bvextract(100, 2, 9) : BV:32
102 : bvadd(21, 101) : BV:32
103 : select(98, 99, 102, 15, 16) : BV:32
104 : bvzero_ext(103, 3) : BV:33
105 : mlvar.dst.7 : MEMLABEL
106 : bvadd(11, 101) : BV:32
107 : select(98, 105, 106, 15, 16) : BV:32
108 : bvzero_ext(107, 3) : BV:33
109 : bvadd(104, 108) : BV:33
110 : bvextract(109, 26, 26) : BV:1
111 : eq(110, 28) : BOOL
112 : ite(111, 28, 30) : BV:1
113 : bvconcat(93, 112) : BV:32
114 : bvextract(113, 2, 33) : BV:27
115 : bvextract(109, 2, 9) : BV:32
116 : bvextract(115, 15, 15) : BV:1
117 : eq(116, 28) : BOOL
118 : bvextract(104, 15, 15) : BV:1
119 : eq(118, 28) : BOOL
120 : xor(117, 119) : BOOL
121 : ite(120, 28, 30) : BV:1
122 : bvextract(113, 42, 9) : BV:4
123 : bvconcat(121, 122) : BV:5
124 : bvconcat(114, 123) : BV:32
125 : bvextract(124, 2, 46) : BV:20
126 : bvextract(104, 2, 2) : BV:1
127 : eq(126, 28) : BOOL
128 : bvextract(108, 2, 2) : BV:1
129 : eq(128, 28) : BOOL
130 : iff(127, 129) : BOOL
131 : bvextract(104, 2, 9) : BV:32
132 : bvextract(108, 2, 9) : BV:32
133 : bvadd(131, 132) : BV:32
134 : bvextract(133, 2, 2) : BV:1
135 : eq(134, 28) : BOOL
136 : xor(127, 135) : BOOL
137 : and(130, 136) : BOOL
138 : ite(137, 28, 30) : BV:1
139 : bvextract(124, 61, 9) : BV:11
140 : bvconcat(138, 139) : BV:12
141 : bvconcat(125, 140) : BV:32
142 : bvextract(141, 2, 65) : BV:24
143 : ite(135, 28, 30) : BV:1
144 : bvextract(141, 68, 9) : BV:7
145 : bvconcat(143, 144) : BV:8
146 : bvconcat(142, 145) : BV:32
147 : bvextract(146, 2, 72) : BV:25
148 : eq(115, 74) : BOOL
149 : ite(148, 28, 30) : BV:1
150 : bvextract(146, 33, 9) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(147, 151) : BV:32
153 : bvextract(152, 2, 42) : BV:29
154 : bvextract(152, 3, 9) : BV:2
155 : bvconcat(30, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 84) : BV:21
158 : bvextract(92, 61, 61) : BV:1
159 : eq(158, 28) : BOOL
160 : ite(159, 28, 30) : BV:1
161 : bvextract(156, 89, 9) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
164 : bvextract(163, 2, 3) : BV:31
165 : mlvar.dst.8 : MEMLABEL
166 : store(98, 165, 14, 115, 15, 16) : ARRAY[BV:32 -> BV:8]
167 : mlvar.dst.9 : MEMLABEL
168 : select(166, 167, 20, 15, 16) : BV:32
169 : bvzero_ext(168, 3) : BV:33
170 : mlvar.dst.10 : MEMLABEL
171 : select(166, 170, 7, 15, 16) : BV:32
172 : bvzero_ext(171, 3) : BV:33
173 : bvadd(169, 172) : BV:33
174 : bvextract(173, 26, 26) : BV:1
175 : eq(174, 28) : BOOL
176 : ite(175, 28, 30) : BV:1
177 : bvconcat(164, 176) : BV:32
178 : bvextract(177, 2, 33) : BV:27
179 : bvextract(173, 2, 9) : BV:32
180 : bvextract(179, 15, 15) : BV:1
181 : eq(180, 28) : BOOL
182 : bvextract(169, 15, 15) : BV:1
183 : eq(182, 28) : BOOL
184 : xor(181, 183) : BOOL
185 : ite(184, 28, 30) : BV:1
186 : bvextract(177, 42, 9) : BV:4
187 : bvconcat(185, 186) : BV:5
188 : bvconcat(178, 187) : BV:32
189 : bvextract(188, 2, 46) : BV:20
190 : bvextract(169, 2, 2) : BV:1
191 : eq(190, 28) : BOOL
192 : bvextract(172, 2, 2) : BV:1
193 : eq(192, 28) : BOOL
194 : iff(191, 193) : BOOL
195 : bvextract(169, 2, 9) : BV:32
196 : bvextract(172, 2, 9) : BV:32
197 : bvadd(195, 196) : BV:32
198 : bvextract(197, 2, 2) : BV:1
199 : eq(198, 28) : BOOL
200 : xor(191, 199) : BOOL
201 : and(194, 200) : BOOL
202 : ite(201, 28, 30) : BV:1
203 : bvextract(188, 61, 9) : BV:11
204 : bvconcat(202, 203) : BV:12
205 : bvconcat(189, 204) : BV:32
206 : bvextract(205, 2, 65) : BV:24
207 : ite(199, 28, 30) : BV:1
208 : bvextract(205, 68, 9) : BV:7
209 : bvconcat(207, 208) : BV:8
210 : bvconcat(206, 209) : BV:32
211 : bvextract(210, 2, 72) : BV:25
212 : eq(179, 74) : BOOL
213 : ite(212, 28, 30) : BV:1
214 : bvextract(210, 33, 9) : BV:6
215 : bvconcat(213, 214) : BV:7
216 : bvconcat(211, 215) : BV:32
217 : bvextract(216, 2, 42) : BV:29
218 : bvextract(216, 3, 9) : BV:2
219 : bvconcat(30, 218) : BV:3
220 : bvconcat(217, 219) : BV:32
221 : bvextract(220, 2, 84) : BV:21
222 : bvextract(163, 61, 61) : BV:1
223 : eq(222, 28) : BOOL
224 : ite(223, 28, 30) : BV:1
225 : bvextract(220, 89, 9) : BV:10
226 : bvconcat(224, 225) : BV:11
227 : bvconcat(221, 226) : BV:32
228 : bvextract(227, 2, 3) : BV:31
229 : bvconcat(228, 30) : BV:32
230 : bvextract(229, 2, 33) : BV:27
231 : bvextract(229, 42, 9) : BV:4
232 : bvconcat(30, 231) : BV:5
233 : bvconcat(230, 232) : BV:32
234 : bvextract(233, 2, 46) : BV:20
235 : bvextract(233, 61, 9) : BV:11
236 : bvconcat(30, 235) : BV:12
237 : bvconcat(234, 236) : BV:32
238 : bvextract(237, 2, 65) : BV:24
239 : bvxor(179, 179) : BV:32
240 : bvsign(239) : BV:1
241 : eq(240, 28) : BOOL
242 : ite(241, 28, 30) : BV:1
243 : bvextract(237, 68, 9) : BV:7
244 : bvconcat(242, 243) : BV:8
245 : bvconcat(238, 244) : BV:32
246 : bvextract(245, 2, 72) : BV:25
247 : eq(239, 74) : BOOL
248 : ite(247, 28, 30) : BV:1
249 : bvextract(245, 33, 9) : BV:6
250 : bvconcat(248, 249) : BV:7
251 : bvconcat(246, 250) : BV:32
252 : bvextract(251, 2, 42) : BV:29
253 : bvextract(251, 3, 9) : BV:2
254 : bvconcat(30, 253) : BV:3
255 : bvconcat(252, 254) : BV:32
256 : bvextract(255, 2, 84) : BV:21
257 : bvextract(227, 61, 61) : BV:1
258 : eq(257, 28) : BOOL
259 : ite(258, 28, 30) : BV:1
260 : bvextract(255, 89, 9) : BV:10
261 : bvconcat(259, 260) : BV:11
262 : bvconcat(256, 261) : BV:32
=dst.exreg.7.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : 1 : BV:1
56 : 0 : BV:1
57 : ite(54, 55, 56) : BV:1
=dst.exreg.8.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : not(54) : BOOL
56 : 1 : BV:1
57 : 0 : BV:1
58 : ite(55, 56, 57) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : bvsign(52) : BV:1
54 : 1 : BV:1
55 : eq(53, 54) : BOOL
56 : 0 : BV:1
57 : ite(55, 54, 56) : BV:1
=dst.exreg.11.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : not(54) : BOOL
56 : 1 : BV:1
57 : 0 : BV:1
58 : ite(55, 56, 57) : BV:1
=dst.exreg.12.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : not(54) : BOOL
56 : bvsign(52) : BV:1
57 : 1 : BV:1
58 : eq(56, 57) : BOOL
59 : not(58) : BOOL
60 : and(55, 59) : BOOL
61 : 0 : BV:1
62 : ite(60, 57, 61) : BV:1
=dst.exreg.13.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : 1 : BV:1
56 : 0 : BV:1
57 : ite(54, 55, 56) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
=dst.exreg.14.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : bvsign(52) : BV:1
56 : 1 : BV:1
57 : eq(55, 56) : BOOL
58 : or(54, 57) : BOOL
59 : 0 : BV:1
60 : ite(58, 56, 59) : BV:1
=dst.exreg.16.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : bvsign(52) : BV:1
54 : 1 : BV:1
55 : eq(53, 54) : BOOL
56 : not(55) : BOOL
57 : 0 : BV:1
58 : ite(56, 54, 57) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*((te_comment_not_implemented*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented)))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>L1%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>L11%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%0=>L11%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%1=>L12%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L12%1%1=>L13%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L13%1%1=>L14%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L14%1%1=>L15%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L15%1%1=>L16%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L16%1%1=>L17%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L17%1%1=>L18%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L18%1%1=>L19%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L19%1%1=>L20%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L20%1%1=>L21%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L21%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L1%1%0
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%0
=dst.exreg.0.0
1 : 127980 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L1%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L10%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4294967292 { -4 } : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 : BV:1
12 : eq(11, 9) : BOOL
13 : 4294967284 { -12 } : BV:32
14 : bvadd(6, 13) : BV:32
15 : bvextract(14, 2, 2) : BV:1
16 : eq(11, 15) : BOOL
17 : xor(12, 16) : BOOL
18 : and(10, 17) : BOOL
19 : ite(18, 11, 5) : BV:1
20 : 10 : INT
21 : bvextract(1, 20, 20) : BV:1
22 : eq(11, 21) : BOOL
23 : ite(22, 11, 5) : BV:1
24 : 9 : INT
25 : 8 : INT
26 : bvextract(1, 24, 25) : BV:2
27 : ite(16, 11, 5) : BV:1
28 : 12 : BV:32
29 : eq(6, 28) : BOOL
30 : ite(29, 11, 5) : BV:1
31 : 5 : INT
32 : bvextract(1, 31, 31) : BV:1
33 : 4 : INT
34 : bvextract(14, 33, 33) : BV:1
35 : eq(11, 34) : BOOL
36 : bvextract(8, 33, 33) : BV:1
37 : eq(11, 36) : BOOL
38 : xor(35, 37) : BOOL
39 : ite(38, 11, 5) : BV:1
40 : 3 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : 1 : INT
43 : bvextract(1, 42, 42) : BV:1
44 : 4294967292 { -4 } : BV:32
45 : bvuge(8, 44) : BOOL
46 : not(45) : BOOL
47 : ite(46, 11, 5) : BV:1
48 : bvconcat(4, 19, 23, 26, 27, 30, 32, 39, 41, 5, 43, 47) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 12 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 12 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4294967292 { -4 } : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967284 { -12 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : 4294967280 { -16 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvextract(10, 5, 5) : BV:1
12 : eq(8, 11) : BOOL
13 : eq(1, 11) : BOOL
14 : xor(13, 7) : BOOL
15 : and(12, 14) : BOOL
16 : iff(7, 15) : BOOL
17 : not(16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 12 : BV:32
3 : eq(1, 2) : BOOL
4 : 4294967280 { -16 } : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4294967292 { -4 } : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967284 { -12 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : 4294967280 { -16 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvextract(10, 5, 5) : BV:1
12 : eq(8, 11) : BOOL
13 : eq(1, 11) : BOOL
14 : xor(13, 7) : BOOL
15 : and(12, 14) : BOOL
16 : iff(7, 15) : BOOL
17 : 12 : BV:32
18 : eq(2, 17) : BOOL
19 : andnot2(16, 18) : BOOL
20 : ite(19, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 12 : BV:32
3 : eq(1, 2) : BOOL
4 : 4294967280 { -16 } : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4294967292 { -4 } : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvadd(9, 12) : BV:32
14 : 8 : BV:32
15 : bvadd(3, 4, 14) : BV:32
16 : select(1, 2, 15, 7, 8) : BV:32
17 : bvadd(10, 4, 14) : BV:32
18 : select(1, 2, 17, 7, 8) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 4 : BV:32
21 : bvadd(3, 20, 4) : BV:32
22 : select(1, 2, 21, 7, 8) : BV:32
23 : bvadd(10, 20, 4) : BV:32
24 : select(1, 2, 23, 7, 8) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 4) : BV:32
27 : select(1, 2, 26, 7, 8) : BV:32
28 : bvadd(10, 4) : BV:32
29 : select(1, 2, 28, 7, 8) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(13, 19, 25, 30) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : 4 : BV:32
10 : bvadd(3, 9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : 8 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 6, 7) : BV:32
15 : 12 : BV:32
16 : bvadd(3, 4, 15) : BV:32
17 : select(1, 2, 16, 6, 7) : BV:32
18 : bvconcat(8, 11, 14, 17) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967284 { -12 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : 4294967280 { -16 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvextract(10, 5, 5) : BV:1
12 : eq(8, 11) : BOOL
13 : eq(1, 11) : BOOL
14 : xor(13, 7) : BOOL
15 : and(12, 14) : BOOL
16 : iff(7, 15) : BOOL
17 : not(16) : BOOL
18 : 12 : BV:32
19 : eq(2, 18) : BOOL
20 : or(17, 19) : BOOL
21 : ite(20, 1, 8) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967284 { -12 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : 4294967280 { -16 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvextract(10, 5, 5) : BV:1
12 : eq(8, 11) : BOOL
13 : eq(1, 11) : BOOL
14 : xor(13, 7) : BOOL
15 : and(12, 14) : BOOL
16 : iff(7, 15) : BOOL
17 : ite(16, 1, 8) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%1
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { -16 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.2 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 63 : INT
6 : 32 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 127 : INT
12 : 96 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvconcat(4, 7, 10, 13) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.2.1
1 : input.dst.exreg.2.3 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 63 : INT
6 : 32 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 127 : INT
12 : 96 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvconcat(4, 7, 10, 13) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.0 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(1, 18, 19) : BV:32
21 : bvextract(5, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 63 : INT
6 : 32 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 127 : INT
12 : 96 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvconcat(4, 7, 10, 13) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L9%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L10%1%1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 4 : BV:32
12 : bvadd(11, 6) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967292 { -4 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvuge(6, 26) : BOOL
43 : not(42) : BOOL
44 : ite(43, 9, 5) : BV:1
45 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 44) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : 4 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(3, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : 4 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(3, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967292 { -4 } : BV:32
16 : eq(3, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4 : BV:32
6 : bvadd(5, 1) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : 4 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(3, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>L1%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>L11%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%0=>L11%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%0=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 8 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 6) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 4 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 16) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : select(1, 2, 3, 8, 9) : BV:32
24 : select(22, 2, 11, 8, 9) : BV:32
25 : bvadd(23, 24) : BV:32
26 : store(22, 2, 17, 25, 8, 9) : ARRAY[BV:32 -> BV:8]
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%1=>L12%1%1
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L12%1%1=>L13%1%1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 8 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.2 : BV:32
12 : 8 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 8 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 8 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L13%1%1=>L14%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L14%1%1=>L15%1%1
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L15%1%1=>L16%1%1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 4 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : 4 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 4 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : 4 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L16%1%1=>L17%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L17%1%1=>L18%1%1
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L18%1%1=>L19%1%1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(5, 6, 7, 8, 9) : BV:32
11 : bvconcat(2, 10) : BV:33
12 : bvadd(4, 11) : BV:33
13 : 32 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : not(15) : BOOL
17 : ite(16, 1, 2) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(9, 10, 11, 12, 13) : BV:32
15 : bvextract(14, 2, 2) : BV:1
16 : eq(5, 15) : BOOL
17 : iff(8, 16) : BOOL
18 : bvadd(6, 14) : BV:32
19 : bvextract(18, 2, 2) : BV:1
20 : eq(5, 19) : BOOL
21 : xor(8, 20) : BOOL
22 : and(17, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 5, 23) : BV:1
25 : 10 : INT
26 : bvextract(1, 25, 25) : BV:1
27 : eq(5, 26) : BOOL
28 : ite(27, 5, 23) : BV:1
29 : 9 : INT
30 : 8 : INT
31 : bvextract(1, 29, 30) : BV:2
32 : ite(20, 5, 23) : BV:1
33 : 4294967295 { -1 } : BV:32
34 : bvmul(33, 14) : BV:32
35 : eq(6, 34) : BOOL
36 : ite(35, 5, 23) : BV:1
37 : 5 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : bvextract(18, 12, 12) : BV:1
40 : eq(5, 39) : BOOL
41 : bvextract(6, 12, 12) : BV:1
42 : eq(5, 41) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 5, 23) : BV:1
45 : 3 : INT
46 : bvextract(1, 45, 45) : BV:1
47 : 1 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : bvconcat(23, 6) : BV:33
50 : bvconcat(23, 14) : BV:33
51 : bvadd(49, 50) : BV:33
52 : 32 : INT
53 : bvextract(51, 52, 52) : BV:1
54 : eq(5, 53) : BOOL
55 : ite(54, 5, 23) : BV:1
56 : bvconcat(4, 24, 28, 31, 32, 36, 38, 44, 46, 23, 48, 55) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvmul(2, 8) : BV:32
10 : eq(1, 9) : BOOL
11 : 1 : BV:1
12 : 0 : BV:1
13 : ite(10, 11, 12) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvmul(2, 8) : BV:32
10 : eq(1, 9) : BOOL
11 : not(10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(5, 6, 7, 8, 9) : BV:32
11 : bvconcat(2, 10) : BV:33
12 : bvadd(4, 11) : BV:33
13 : 32 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : ite(15, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvadd(2, 8) : BV:32
10 : 31 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : eq(1, 11) : BOOL
13 : bvextract(2, 10, 10) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(8, 10, 10) : BV:1
16 : eq(1, 15) : BOOL
17 : iff(14, 16) : BOOL
18 : xor(14, 12) : BOOL
19 : and(17, 18) : BOOL
20 : iff(12, 19) : BOOL
21 : not(20) : BOOL
22 : 0 : BV:1
23 : ite(21, 1, 22) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvmul(2, 8) : BV:32
10 : eq(1, 9) : BOOL
11 : 1 : BV:1
12 : 0 : BV:1
13 : bvconcat(12, 1) : BV:33
14 : bvconcat(12, 8) : BV:33
15 : bvadd(13, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(11, 17) : BOOL
19 : not(18) : BOOL
20 : andnot1(10, 19) : BOOL
21 : ite(20, 11, 12) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvadd(2, 8) : BV:32
10 : 31 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : eq(1, 11) : BOOL
13 : bvextract(2, 10, 10) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(8, 10, 10) : BV:1
16 : eq(1, 15) : BOOL
17 : iff(14, 16) : BOOL
18 : xor(14, 12) : BOOL
19 : and(17, 18) : BOOL
20 : iff(12, 19) : BOOL
21 : 4294967295 { -1 } : BV:32
22 : bvmul(21, 8) : BV:32
23 : eq(2, 22) : BOOL
24 : andnot2(20, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 1, 25) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvmul(2, 8) : BV:32
10 : eq(1, 9) : BOOL
11 : 1 : BV:1
12 : 0 : BV:1
13 : bvconcat(12, 1) : BV:33
14 : bvconcat(12, 8) : BV:33
15 : bvadd(13, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(11, 17) : BOOL
19 : or(10, 18) : BOOL
20 : ite(19, 11, 12) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvadd(2, 8) : BV:32
10 : 31 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : eq(1, 11) : BOOL
13 : bvextract(2, 10, 10) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(8, 10, 10) : BV:1
16 : eq(1, 15) : BOOL
17 : iff(14, 16) : BOOL
18 : xor(14, 12) : BOOL
19 : and(17, 18) : BOOL
20 : iff(12, 19) : BOOL
21 : not(20) : BOOL
22 : 4294967295 { -1 } : BV:32
23 : bvmul(22, 8) : BV:32
24 : eq(2, 23) : BOOL
25 : or(21, 24) : BOOL
26 : 0 : BV:1
27 : ite(25, 1, 26) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvadd(2, 8) : BV:32
10 : 31 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : eq(1, 11) : BOOL
13 : bvextract(2, 10, 10) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(8, 10, 10) : BV:1
16 : eq(1, 15) : BOOL
17 : iff(14, 16) : BOOL
18 : xor(14, 12) : BOOL
19 : and(17, 18) : BOOL
20 : iff(12, 19) : BOOL
21 : 0 : BV:1
22 : ite(20, 1, 21) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L19%1%1=>L20%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L20%1%1=>L21%1%1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L21%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%0
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%0 done
=graph_with_simplified_assets.simplified_assumes at L11%1%0=>L11%1%1
=graph_with_simplified_assets.simplified_assumes at L11%1%0=>L11%1%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L11%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>L13%1%1
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>L13%1%1 done
=graph_with_simplified_assets.simplified_assumes at L13%1%1=>L14%1%1
=graph_with_simplified_assets.simplified_assumes at L13%1%1=>L14%1%1 done
=graph_with_simplified_assets.simplified_assumes at L14%1%1=>L15%1%1
=graph_with_simplified_assets.simplified_assumes at L14%1%1=>L15%1%1 done
=graph_with_simplified_assets.simplified_assumes at L15%1%1=>L16%1%1
=graph_with_simplified_assets.simplified_assumes at L15%1%1=>L16%1%1 done
=graph_with_simplified_assets.simplified_assumes at L16%1%1=>L17%1%1
=graph_with_simplified_assets.simplified_assumes at L16%1%1=>L17%1%1 done
=graph_with_simplified_assets.simplified_assumes at L17%1%1=>L18%1%1
=graph_with_simplified_assets.simplified_assumes at L17%1%1=>L18%1%1 done
=graph_with_simplified_assets.simplified_assumes at L18%1%1=>L19%1%1
=graph_with_simplified_assets.simplified_assumes at L18%1%1=>L19%1%1 done
=graph_with_simplified_assets.simplified_assumes at L19%1%1=>L20%1%1
=graph_with_simplified_assets.simplified_assumes at L19%1%1=>L20%1%1 done
=graph_with_simplified_assets.simplified_assumes at L20%1%1=>L21%1%1
=graph_with_simplified_assets.simplified_assumes at L20%1%1=>L21%1%1 done
=graph_with_simplified_assets.simplified_assumes at L21%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L21%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1020
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1041
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 0
1 : 127980 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1020
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1041
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 0
1 : 127980 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967284 { -12 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : 4294967280 { -16 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvextract(10, 5, 5) : BV:1
12 : eq(8, 11) : BOOL
13 : eq(1, 11) : BOOL
14 : xor(13, 7) : BOOL
15 : and(12, 14) : BOOL
16 : iff(7, 15) : BOOL
17 : not(16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 12 : BV:32
3 : eq(1, 2) : BOOL
4 : 4294967280 { -16 } : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4294967292 { -4 } : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967284 { -12 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : 4294967280 { -16 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvextract(10, 5, 5) : BV:1
12 : eq(8, 11) : BOOL
13 : eq(1, 11) : BOOL
14 : xor(13, 7) : BOOL
15 : and(12, 14) : BOOL
16 : iff(7, 15) : BOOL
17 : 12 : BV:32
18 : eq(2, 17) : BOOL
19 : andnot2(16, 18) : BOOL
20 : ite(19, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 12 : BV:32
3 : eq(1, 2) : BOOL
4 : 4294967280 { -16 } : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4294967292 { -4 } : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967284 { -12 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : 4294967280 { -16 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvextract(10, 5, 5) : BV:1
12 : eq(8, 11) : BOOL
13 : eq(1, 11) : BOOL
14 : xor(13, 7) : BOOL
15 : and(12, 14) : BOOL
16 : iff(7, 15) : BOOL
17 : not(16) : BOOL
18 : 12 : BV:32
19 : eq(2, 18) : BOOL
20 : or(17, 19) : BOOL
21 : ite(20, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4294967292 { -4 } : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967284 { -12 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : 4294967280 { -16 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvextract(10, 5, 5) : BV:1
12 : eq(8, 11) : BOOL
13 : eq(1, 11) : BOOL
14 : xor(13, 7) : BOOL
15 : and(12, 14) : BOOL
16 : iff(7, 15) : BOOL
17 : ite(16, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvadd(9, 12) : BV:32
14 : 8 : BV:32
15 : bvadd(3, 4, 14) : BV:32
16 : select(1, 2, 15, 7, 8) : BV:32
17 : bvadd(10, 4, 14) : BV:32
18 : select(1, 2, 17, 7, 8) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 4 : BV:32
21 : bvadd(3, 20, 4) : BV:32
22 : select(1, 2, 21, 7, 8) : BV:32
23 : bvadd(10, 20, 4) : BV:32
24 : select(1, 2, 23, 7, 8) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 4) : BV:32
27 : select(1, 2, 26, 7, 8) : BV:32
28 : bvadd(10, 4) : BV:32
29 : select(1, 2, 28, 7, 8) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(13, 19, 25, 30) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1009
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : 4 : BV:32
10 : bvadd(3, 9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : 8 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 6, 7) : BV:32
15 : 12 : BV:32
16 : bvadd(3, 4, 15) : BV:32
17 : select(1, 2, 16, 6, 7) : BV:32
18 : bvconcat(8, 11, 14, 17) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1010
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1011
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1014
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 : BV:1
12 : eq(11, 9) : BOOL
13 : 4294967284 { -12 } : BV:32
14 : bvadd(6, 13) : BV:32
15 : bvextract(14, 2, 2) : BV:1
16 : eq(11, 15) : BOOL
17 : xor(12, 16) : BOOL
18 : and(10, 17) : BOOL
19 : ite(18, 11, 5) : BV:1
20 : 10 : INT
21 : bvextract(1, 20, 20) : BV:1
22 : eq(11, 21) : BOOL
23 : ite(22, 11, 5) : BV:1
24 : 9 : INT
25 : 8 : INT
26 : bvextract(1, 24, 25) : BV:2
27 : ite(16, 11, 5) : BV:1
28 : 12 : BV:32
29 : eq(6, 28) : BOOL
30 : ite(29, 11, 5) : BV:1
31 : 5 : INT
32 : bvextract(1, 31, 31) : BV:1
33 : 4 : INT
34 : bvextract(14, 33, 33) : BV:1
35 : eq(11, 34) : BOOL
36 : bvextract(8, 33, 33) : BV:1
37 : eq(11, 36) : BOOL
38 : xor(35, 37) : BOOL
39 : ite(38, 11, 5) : BV:1
40 : 3 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : 1 : INT
43 : bvextract(1, 42, 42) : BV:1
44 : 4294967292 { -4 } : BV:32
45 : bvuge(8, 44) : BOOL
46 : not(45) : BOOL
47 : ite(46, 11, 5) : BV:1
48 : bvconcat(4, 19, 23, 26, 27, 30, 32, 39, 41, 5, 43, 47) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 12 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 12 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1017
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4294967292 { -4 } : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : memlabel-mem-heap : MEMLABEL
35 : memmask(33, 34) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : memlabel-mem-symbol.1.0 : MEMLABEL
35 : memmask(33, 34) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : memlabel-mem-symbol.2.0 : MEMLABEL
35 : memmask(33, 34) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1036
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : bvadd(3, 4) : BV:32
35 : select(33, 2, 34, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : bvadd(12, 4) : BV:32
35 : select(33, 2, 34, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : bvadd(3, 7) : BV:32
35 : select(33, 2, 34, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : bvadd(12, 16) : BV:32
35 : select(33, 2, 34, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : bvadd(3, 16) : BV:32
35 : select(33, 2, 34, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : select(33, 2, 12, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 for loc_id 1043
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 5, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 5, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(3, 5, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 5, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : select(1, 2, 6, 9, 10) : BV:32
23 : bvadd(12, 4, 5) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 5) : BV:32
27 : select(1, 2, 26, 9, 10) : BV:32
28 : bvadd(12, 5) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(15, 21, 25, 30) : BV:128
32 : 16 : INT
33 : store(1, 2, 6, 31, 32, 10) : ARRAY[BV:32 -> BV:8]
34 : select(33, 2, 3, 9, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1010
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1011
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1014
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { -16 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1017
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1008
1 : input.dst.exreg.2.2 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 63 : INT
6 : 32 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 127 : INT
12 : 96 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvconcat(4, 7, 10, 13) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1009
1 : input.dst.exreg.2.3 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 63 : INT
6 : 32 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 127 : INT
12 : 96 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvconcat(4, 7, 10, 13) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1008
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.0 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(1, 18, 19) : BV:32
21 : bvextract(5, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 63 : INT
6 : 32 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 127 : INT
12 : 96 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvconcat(4, 7, 10, 13) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1036
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 4 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.2 : BV:32
12 : 4 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : select(10, 2, 13, 14, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 12 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.2 : BV:32
12 : 8 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : select(10, 2, 13, 14, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 8 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.2 : BV:32
12 : 4 : INT
13 : select(10, 2, 11, 12, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1043
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 20 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 4 : INT
12 : select(10, 2, 3, 11, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1001
1 : 1 : BV:1
2 : 4 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(3, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1003
1 : 1 : BV:1
2 : 4 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(3, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967292 { -4 } : BV:32
16 : eq(3, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4 : BV:32
6 : bvadd(5, 1) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1007
1 : 1 : BV:1
2 : 4 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(3, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1014
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 4 : BV:32
12 : bvadd(11, 6) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967292 { -4 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvuge(6, 26) : BOOL
43 : not(42) : BOOL
44 : ite(43, 9, 5) : BV:1
45 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 44) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1017
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1021
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1022
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1023
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1024
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1025
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1026
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1027
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1028
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1029
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1030
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 for loc_id 1031
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1021
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1022
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1023
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1024
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1025
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1026
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1027
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1028
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1029
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1030
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 for loc_id 1031
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>L11%1%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>L11%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1014
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1015
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1017
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1018
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1019
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1021
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1022
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1024
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1025
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1026
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1027
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1028
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 8 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 6) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 4 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 16) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : select(1, 2, 3, 8, 9) : BV:32
24 : select(22, 2, 11, 8, 9) : BV:32
25 : bvadd(23, 24) : BV:32
26 : store(22, 2, 17, 25, 8, 9) : ARRAY[BV:32 -> BV:8]
27 : memlabel-mem-heap : MEMLABEL
28 : memmask(26, 27) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 8 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 6) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 4 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 16) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : select(1, 2, 3, 8, 9) : BV:32
24 : select(22, 2, 11, 8, 9) : BV:32
25 : bvadd(23, 24) : BV:32
26 : store(22, 2, 17, 25, 8, 9) : ARRAY[BV:32 -> BV:8]
27 : memlabel-mem-symbol.1.0 : MEMLABEL
28 : memmask(26, 27) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 8 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 6) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 4 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 16) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : select(1, 2, 3, 8, 9) : BV:32
24 : select(22, 2, 11, 8, 9) : BV:32
25 : bvadd(23, 24) : BV:32
26 : store(22, 2, 17, 25, 8, 9) : ARRAY[BV:32 -> BV:8]
27 : memlabel-mem-symbol.2.0 : MEMLABEL
28 : memmask(26, 27) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1036
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 7) : BV:32
9 : 8 : BV:32
10 : bvadd(3, 9) : BV:32
11 : select(1, 2, 10, 4, 5) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 9) : BV:32
14 : select(1, 2, 13, 4, 5) : BV:32
15 : bvadd(11, 14) : BV:32
16 : store(1, 2, 8, 15, 4, 5) : ARRAY[BV:32 -> BV:8]
17 : 4 : BV:32
18 : bvadd(3, 17) : BV:32
19 : select(1, 2, 18, 4, 5) : BV:32
20 : bvadd(12, 17) : BV:32
21 : select(16, 2, 20, 4, 5) : BV:32
22 : bvadd(19, 21) : BV:32
23 : store(16, 2, 10, 22, 4, 5) : ARRAY[BV:32 -> BV:8]
24 : select(23, 2, 12, 4, 5) : BV:32
25 : bvadd(6, 24) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 8 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 6) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 4 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 16) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : select(1, 2, 3, 8, 9) : BV:32
24 : select(22, 2, 11, 8, 9) : BV:32
25 : bvadd(23, 24) : BV:32
26 : store(22, 2, 17, 25, 8, 9) : ARRAY[BV:32 -> BV:8]
27 : select(26, 2, 19, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : dst_symbol_addr.2 : BV:32
10 : bvadd(9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 8 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 6) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 4 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 16) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : select(1, 2, 3, 8, 9) : BV:32
24 : select(22, 2, 11, 8, 9) : BV:32
25 : bvadd(23, 24) : BV:32
26 : store(22, 2, 17, 25, 8, 9) : ARRAY[BV:32 -> BV:8]
27 : select(26, 2, 12, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : 12 : BV:32
10 : bvadd(3, 9) : BV:32
11 : 8 : BV:32
12 : bvadd(3, 11) : BV:32
13 : select(1, 2, 12, 6, 7) : BV:32
14 : dst_symbol_addr.2 : BV:32
15 : bvadd(14, 11) : BV:32
16 : select(1, 2, 15, 6, 7) : BV:32
17 : bvadd(13, 16) : BV:32
18 : store(1, 2, 10, 17, 6, 7) : ARRAY[BV:32 -> BV:8]
19 : bvadd(14, 4) : BV:32
20 : select(18, 2, 19, 6, 7) : BV:32
21 : bvadd(8, 20) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 8 : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : dst_symbol_addr.2 : BV:32
12 : bvadd(11, 6) : BV:32
13 : select(1, 2, 12, 8, 9) : BV:32
14 : bvadd(10, 13) : BV:32
15 : store(1, 2, 5, 14, 8, 9) : ARRAY[BV:32 -> BV:8]
16 : 4 : BV:32
17 : bvadd(3, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvadd(11, 16) : BV:32
20 : select(15, 2, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(15, 2, 7, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : select(1, 2, 3, 8, 9) : BV:32
24 : select(22, 2, 11, 8, 9) : BV:32
25 : bvadd(23, 24) : BV:32
26 : store(22, 2, 17, 25, 8, 9) : ARRAY[BV:32 -> BV:8]
27 : select(26, 2, 11, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 8 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 8 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1014
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.2 : BV:32
12 : 8 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.2 : BV:32
6 : 8 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1017
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 8 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 4 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1038
1 : input.dst.exreg.0.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 8 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : select(9, 2, 10, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : 4 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 4 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1014
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : 4 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1017
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 4 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 4 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4) : BV:32
12 : select(9, 2, 11, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1040
1 : input.dst.exreg.0.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : select(9, 2, 10, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvadd(2, 8) : BV:32
10 : 31 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : eq(1, 11) : BOOL
13 : bvextract(2, 10, 10) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(8, 10, 10) : BV:1
16 : eq(1, 15) : BOOL
17 : iff(14, 16) : BOOL
18 : xor(14, 12) : BOOL
19 : and(17, 18) : BOOL
20 : iff(12, 19) : BOOL
21 : not(20) : BOOL
22 : 0 : BV:1
23 : ite(21, 1, 22) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvmul(2, 8) : BV:32
10 : eq(1, 9) : BOOL
11 : 1 : BV:1
12 : 0 : BV:1
13 : bvconcat(12, 1) : BV:33
14 : bvconcat(12, 8) : BV:33
15 : bvadd(13, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(11, 17) : BOOL
19 : not(18) : BOOL
20 : andnot1(10, 19) : BOOL
21 : ite(20, 11, 12) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvadd(2, 8) : BV:32
10 : 31 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : eq(1, 11) : BOOL
13 : bvextract(2, 10, 10) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(8, 10, 10) : BV:1
16 : eq(1, 15) : BOOL
17 : iff(14, 16) : BOOL
18 : xor(14, 12) : BOOL
19 : and(17, 18) : BOOL
20 : iff(12, 19) : BOOL
21 : 4294967295 { -1 } : BV:32
22 : bvmul(21, 8) : BV:32
23 : eq(2, 22) : BOOL
24 : andnot2(20, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 1, 25) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvmul(2, 8) : BV:32
10 : eq(1, 9) : BOOL
11 : 1 : BV:1
12 : 0 : BV:1
13 : bvconcat(12, 1) : BV:33
14 : bvconcat(12, 8) : BV:33
15 : bvadd(13, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(11, 17) : BOOL
19 : or(10, 18) : BOOL
20 : ite(19, 11, 12) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvadd(2, 8) : BV:32
10 : 31 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : eq(1, 11) : BOOL
13 : bvextract(2, 10, 10) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(8, 10, 10) : BV:1
16 : eq(1, 15) : BOOL
17 : iff(14, 16) : BOOL
18 : xor(14, 12) : BOOL
19 : and(17, 18) : BOOL
20 : iff(12, 19) : BOOL
21 : not(20) : BOOL
22 : 4294967295 { -1 } : BV:32
23 : bvmul(22, 8) : BV:32
24 : eq(2, 23) : BOOL
25 : or(21, 24) : BOOL
26 : 0 : BV:1
27 : ite(25, 1, 26) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(5, 6, 7, 8, 9) : BV:32
11 : bvconcat(2, 10) : BV:33
12 : bvadd(4, 11) : BV:33
13 : 32 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : not(15) : BOOL
17 : ite(16, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvadd(2, 8) : BV:32
10 : 31 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : eq(1, 11) : BOOL
13 : bvextract(2, 10, 10) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(8, 10, 10) : BV:1
16 : eq(1, 15) : BOOL
17 : iff(14, 16) : BOOL
18 : xor(14, 12) : BOOL
19 : and(17, 18) : BOOL
20 : iff(12, 19) : BOOL
21 : 0 : BV:1
22 : ite(20, 1, 21) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1014
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(9, 10, 11, 12, 13) : BV:32
15 : bvextract(14, 2, 2) : BV:1
16 : eq(5, 15) : BOOL
17 : iff(8, 16) : BOOL
18 : bvadd(6, 14) : BV:32
19 : bvextract(18, 2, 2) : BV:1
20 : eq(5, 19) : BOOL
21 : xor(8, 20) : BOOL
22 : and(17, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 5, 23) : BV:1
25 : 10 : INT
26 : bvextract(1, 25, 25) : BV:1
27 : eq(5, 26) : BOOL
28 : ite(27, 5, 23) : BV:1
29 : 9 : INT
30 : 8 : INT
31 : bvextract(1, 29, 30) : BV:2
32 : ite(20, 5, 23) : BV:1
33 : 4294967295 { -1 } : BV:32
34 : bvmul(33, 14) : BV:32
35 : eq(6, 34) : BOOL
36 : ite(35, 5, 23) : BV:1
37 : 5 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : bvextract(18, 12, 12) : BV:1
40 : eq(5, 39) : BOOL
41 : bvextract(6, 12, 12) : BV:1
42 : eq(5, 41) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 5, 23) : BV:1
45 : 3 : INT
46 : bvextract(1, 45, 45) : BV:1
47 : 1 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : bvconcat(23, 6) : BV:33
50 : bvconcat(23, 14) : BV:33
51 : bvadd(49, 50) : BV:33
52 : 32 : INT
53 : bvextract(51, 52, 52) : BV:1
54 : eq(5, 53) : BOOL
55 : ite(54, 5, 23) : BV:1
56 : bvconcat(4, 24, 28, 31, 32, 36, 38, 44, 46, 23, 48, 55) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvmul(2, 8) : BV:32
10 : eq(1, 9) : BOOL
11 : 1 : BV:1
12 : 0 : BV:1
13 : ite(10, 11, 12) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(3, 4, 5, 6, 7) : BV:32
9 : bvmul(2, 8) : BV:32
10 : eq(1, 9) : BOOL
11 : not(10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1017
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(5, 6, 7, 8, 9) : BV:32
11 : bvconcat(2, 10) : BV:33
12 : bvadd(4, 11) : BV:33
13 : 32 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : ite(15, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 for loc_id 1021
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 for loc_id 1036
1 : input.dst.exreg.0.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4) : BV:32
12 : select(9, 2, 11, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : 8 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.2 : BV:32
11 : select(9, 2, 10, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>L20%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1014
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1015
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 for loc_id 1017
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L20%1%1=>L21%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1018
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1019
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1021
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1022
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1024
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1025
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1026
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1027
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 for loc_id 1028
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L21%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=Loc 1010 in dst.
REGMEM
dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=Loc 1011 in dst.
REGMEM
dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=Loc 1012 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1013 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1014 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1015 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1016 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1017 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1018 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1019 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1020 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:32
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1027 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1028 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1029 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1030 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1031 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1032 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1033 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1034 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1035 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1036 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1037 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1038 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
2 : 12 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1039 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1040 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1041 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false
=Loc 1042 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 1043 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.1 : BV:32
=nbytes
4
=bigendian
false
=Loc 1044 in dst.
REGMEM
econd
1 : input.econd : BOOL

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.2.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1030 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1031 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 4), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 4), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 12), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 8), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 8), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1041 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1043 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1044 (input.econd)
nullptr
=Alias analysis result in dst at L1%1%0
=Alias analysis result in dst at L1%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1011 (input.dst.exreg.2.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1012 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1013 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1014 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1015 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1016 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1017 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1018 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1019 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1020 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 1021 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1022 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1023 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1024 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1025 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1026 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1027 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1028 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1029 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1030 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1031 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 4), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 4), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 12), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 8), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 8), 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1041 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1043 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 4, false))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1044 (input.econd)
nullptr
=Alias analysis result in dst at L10%1%1
=Alias analysis result in dst at L10%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L10%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1011 (input.dst.exreg.2.3)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1012 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1013 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1014 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1015 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1016 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1017 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1018 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1019 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1020 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L10%1%1 for loc 1021 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1022 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1023 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1024 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1025 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1026 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1027 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1028 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1029 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1030 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1031 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 4), 4, false))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 4), 4, false))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 12), 4, false))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 8), 4, false))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 8), 4, false))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1041 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%1 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1043 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 4, false))
nullptr
=Alias analysis result in dst at L10%1%1 for loc 1044 (input.econd)
nullptr
=Alias analysis result in dst at L11%1%0
=Alias analysis result in dst at L11%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L11%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1011 (input.dst.exreg.2.3)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1012 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1013 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1014 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1015 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1016 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1017 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1018 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1019 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1020 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L11%1%0 for loc 1021 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1022 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1023 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1024 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1025 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1026 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1027 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1028 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1029 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1030 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1031 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 4), 4, false))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 4), 4, false))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 12), 4, false))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 8), 4, false))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 8), 4, false))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1041 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1043 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 4, false))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1044 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.2.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1030 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1031 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 4), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 4), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 12), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.2, 8), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, bvadd(dst_symbol_addr.1, 8), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1041 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1042 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1043 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-heap, dst_symbol_addr.1, 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1044 (input.econd)
nullptr

=Liveness in dst
=live locs at L0%0%1
1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043
=live locs at L1%1%0
0, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043
=live locs at L10%1%1
0, 1016, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043
=live locs at L11%1%0
1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043
=live locs at E0%0%1
0, 1018, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L1%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1020
17386 : input_stack_pointer_const : BV:32
=loc 1041
17387 : retaddr_const : BV:32
=sprel_map at L10%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1020
17386 : input_stack_pointer_const : BV:32
=loc 1041
17387 : retaddr_const : BV:32
=sprel_map at L11%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1020
17386 : input_stack_pointer_const : BV:32
=loc 1041
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17422 : 4 : BV:32
18347 : bvadd(17386, 17422) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17657 : 0 : BV:1
=loc 1002
17657 : 0 : BV:1
=loc 1003
17657 : 0 : BV:1
=loc 1004
17629 : 1 : BV:1
=loc 1005
17629 : 1 : BV:1
=loc 1006
17629 : 1 : BV:1
=loc 1007
17629 : 1 : BV:1
=loc 1015
17629 : 1 : BV:1
=loc 1016
17657 : 0 : BV:1
=loc 1017
17657 : 0 : BV:1
=loc 1018
17387 : retaddr_const : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
17422 : 4 : BV:32
18347 : bvadd(17386, 17422) : BV:32
=loc 1020
17386 : input_stack_pointer_const : BV:32
=loc 1041
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename s112_s112.gcc.eqchecker.O3.i386.ALL.proof
=function_name s112
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: movl $0x1f3ec,%exvr0.0d #
.i1: movdqu %exvr5.3w:C_SYMBOL0(%exvr0.0d),%exvr2.2 #
.i2: movdqu %exvr5.3w:C_SYMBOL1(%exvr0.0d),%exvr2.3 #
.i3: subl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i4: pshufd $0x1b,%exvr2.2,%exvr2.0 #
.i5: pshufd $0x1b,%exvr2.3,%exvr2.1 #
.i6: paddd %exvr2.1,%exvr2.0 #
.i7: pshufd $0x1b,%exvr2.0,%exvr2.0 #
.i8: movaps %exvr2.0,%exvr5.3w:C_SYMBOL0*1+20/umask/32(%exvr0.0d) #
.i9: cmpl $0xfffffffc,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i10: jne .i1 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i11: movl %exvr5.3w:C_SYMBOL0*1+8/umask/32,%exvr0.0d #
.i12: addl %exvr5.3w:C_SYMBOL1*1+8/umask/32,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i13: movl %exvr0.0d,%exvr5.3w:C_SYMBOL0*1+12/umask/32 #
.i14: movl %exvr5.3w:C_SYMBOL1*1+4/umask/32,%exvr0.0d #
.i15: addl %exvr5.3w:C_SYMBOL0*1+4/umask/32,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i16: movl %exvr0.0d,%exvr5.3w:C_SYMBOL0*1+8/umask/32 #
.i17: movl %exvr5.3w:C_SYMBOL1,%exvr0.0d #
.i18: addl %exvr5.3w:C_SYMBOL0,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i19: movl %exvr0.0d,%exvr5.3w:C_SYMBOL0*1+4/umask/32 #
.i20: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i21: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0x9
3 : 0x10
4 : 0x18
5 : 0x20
6 : 0x23
7 : 0x28
8 : 0x2d
9 : 0x31
10 : 0x36
11 : 0x3d
12 : 0x40
13 : 0x42
14 : 0x47
15 : 0x4d
16 : 0x52
17 : 0x57
18 : 0x5d
19 : 0x62
20 : 0x67
21 : 0x6d
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.1 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(86, 10) : BOOL
91 : eq(80, 1) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.1 : BV:32
113 : eq(86, 112) : BOOL
114 : dst_symbol_addr.2 : BV:32
115 : eq(80, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 3222678528 { -1072288768 } : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 3236314128 { -1058653168 } : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.1 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.2 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 3221762044 { -1073205252 } : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 5) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 3236442127 { -1058525169 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.1.0_begin : BV:32
26 : eq(25, 2) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.1.0_end : BV:32
29 : 3222806527 { -1072160769 } : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 12845056 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 3221762047 { -1073205249 } : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 3208916992 { -1086050304 } : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L1%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L1%1%0
=Lfor.body%1%1_L1%1%0 assume predicate_set done
=Lfor.body%1%1_L1%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.2
mlvar.dst.10 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.3
mlvar.dst.11 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.4
mlvar.dst.12 : memlabel-mem-esp
=memlabel_map.5
mlvar.dst.13 : memlabel-mem-esp
=memlabel_map.6
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.7
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.8
mlvar.dst.4 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.9
mlvar.dst.5 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.10
mlvar.dst.6 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.11
mlvar.dst.7 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.12
mlvar.dst.8 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.13
mlvar.dst.9 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.14
mlvar.llvm.s112.0 : memlabel-mem-symbol.1.0
=memlabel_map.15
mlvar.llvm.s112.1 : memlabel-mem-symbol.2.0
=memlabel_map.16
mlvar.llvm.s112.2 : memlabel-mem-symbol.1.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !32
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*((L10%1%1=>L11%1%0)*(L11%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L11%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L11%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.5
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.11 : MEMLABEL
45 : mlvar.dst.9 : MEMLABEL
46 : select(43, 45, 22, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : select(43, 48, 3, 16, 17) : BV:32
50 : bvzero_ext(49, 19) : BV:33
51 : bvadd(47, 50) : BV:33
52 : bvextract(51, 5, 6) : BV:32
53 : store(43, 44, 38, 52, 16, 17) : ARRAY[BV:32 -> BV:8]
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.11 : MEMLABEL
45 : mlvar.dst.9 : MEMLABEL
46 : select(43, 45, 22, 16, 17) : BV:32
47 : bvzero_ext(46, 19) : BV:33
48 : mlvar.dst.10 : MEMLABEL
49 : select(43, 48, 3, 16, 17) : BV:32
50 : bvzero_ext(49, 19) : BV:33
51 : bvadd(47, 50) : BV:33
52 : bvextract(51, 5, 6) : BV:32
53 : store(43, 44, 38, 52, 16, 17) : ARRAY[BV:32 -> BV:8]
54 : mlvar.dst.12 : MEMLABEL
55 : input.dst.exreg.0.4 : BV:32
56 : select(53, 54, 55, 16, 17) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : 1 : BV:64
9 : 0 : INT
10 : bvextract(8, 2, 9) : BV:32
11 : bvmul(7, 10) : BV:32
12 : 8 : BV:64
13 : bvextract(12, 2, 9) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(5, 6, 14, 15, 16) : BV:32
18 : bvzero_ext(17, 3) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.2 : BV:32
21 : bvmul(20, 10) : BV:32
22 : bvadd(21, 13) : BV:32
23 : select(5, 19, 22, 15, 16) : BV:32
24 : bvzero_ext(23, 3) : BV:33
25 : bvadd(18, 24) : BV:33
26 : 32 : INT
27 : bvextract(25, 26, 26) : BV:1
28 : 1 : BV:1
29 : eq(27, 28) : BOOL
30 : 0 : BV:1
31 : ite(29, 28, 30) : BV:1
32 : bvconcat(4, 31) : BV:32
33 : 5 : INT
34 : bvextract(32, 2, 33) : BV:27
35 : bvextract(25, 2, 9) : BV:32
36 : bvextract(35, 15, 15) : BV:1
37 : eq(36, 28) : BOOL
38 : bvextract(18, 15, 15) : BV:1
39 : eq(38, 28) : BOOL
40 : xor(37, 39) : BOOL
41 : ite(40, 28, 30) : BV:1
42 : 3 : INT
43 : bvextract(32, 42, 9) : BV:4
44 : bvconcat(41, 43) : BV:5
45 : bvconcat(34, 44) : BV:32
46 : 12 : INT
47 : bvextract(45, 2, 46) : BV:20
48 : bvextract(18, 2, 2) : BV:1
49 : eq(48, 28) : BOOL
50 : bvextract(24, 2, 2) : BV:1
51 : eq(50, 28) : BOOL
52 : iff(49, 51) : BOOL
53 : bvextract(18, 2, 9) : BV:32
54 : bvextract(24, 2, 9) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvextract(55, 2, 2) : BV:1
57 : eq(56, 28) : BOOL
58 : xor(49, 57) : BOOL
59 : and(52, 58) : BOOL
60 : ite(59, 28, 30) : BV:1
61 : 10 : INT
62 : bvextract(45, 61, 9) : BV:11
63 : bvconcat(60, 62) : BV:12
64 : bvconcat(47, 63) : BV:32
65 : 8 : INT
66 : bvextract(64, 2, 65) : BV:24
67 : ite(57, 28, 30) : BV:1
68 : 6 : INT
69 : bvextract(64, 68, 9) : BV:7
70 : bvconcat(67, 69) : BV:8
71 : bvconcat(66, 70) : BV:32
72 : 7 : INT
73 : bvextract(71, 2, 72) : BV:25
74 : 0 : BV:32
75 : eq(35, 74) : BOOL
76 : ite(75, 28, 30) : BV:1
77 : bvextract(71, 33, 9) : BV:6
78 : bvconcat(76, 77) : BV:7
79 : bvconcat(73, 78) : BV:32
80 : bvextract(79, 2, 42) : BV:29
81 : bvextract(79, 3, 9) : BV:2
82 : bvconcat(30, 81) : BV:3
83 : bvconcat(80, 82) : BV:32
84 : 11 : INT
85 : bvextract(83, 2, 84) : BV:21
86 : bvextract(1, 61, 61) : BV:1
87 : eq(86, 28) : BOOL
88 : ite(87, 28, 30) : BV:1
89 : 9 : INT
90 : bvextract(83, 89, 9) : BV:10
91 : bvconcat(88, 90) : BV:11
92 : bvconcat(85, 91) : BV:32
93 : bvextract(92, 2, 3) : BV:31
94 : mlvar.dst.5 : MEMLABEL
95 : 12 : BV:64
96 : bvextract(95, 2, 9) : BV:32
97 : bvadd(11, 96) : BV:32
98 : store(5, 94, 97, 35, 15, 16) : ARRAY[BV:32 -> BV:8]
99 : mlvar.dst.6 : MEMLABEL
100 : 4 : BV:64
101 : bvextract(100, 2, 9) : BV:32
102 : bvadd(21, 101) : BV:32
103 : select(98, 99, 102, 15, 16) : BV:32
104 : bvzero_ext(103, 3) : BV:33
105 : mlvar.dst.7 : MEMLABEL
106 : bvadd(11, 101) : BV:32
107 : select(98, 105, 106, 15, 16) : BV:32
108 : bvzero_ext(107, 3) : BV:33
109 : bvadd(104, 108) : BV:33
110 : bvextract(109, 26, 26) : BV:1
111 : eq(110, 28) : BOOL
112 : ite(111, 28, 30) : BV:1
113 : bvconcat(93, 112) : BV:32
114 : bvextract(113, 2, 33) : BV:27
115 : bvextract(109, 2, 9) : BV:32
116 : bvextract(115, 15, 15) : BV:1
117 : eq(116, 28) : BOOL
118 : bvextract(104, 15, 15) : BV:1
119 : eq(118, 28) : BOOL
120 : xor(117, 119) : BOOL
121 : ite(120, 28, 30) : BV:1
122 : bvextract(113, 42, 9) : BV:4
123 : bvconcat(121, 122) : BV:5
124 : bvconcat(114, 123) : BV:32
125 : bvextract(124, 2, 46) : BV:20
126 : bvextract(104, 2, 2) : BV:1
127 : eq(126, 28) : BOOL
128 : bvextract(108, 2, 2) : BV:1
129 : eq(128, 28) : BOOL
130 : iff(127, 129) : BOOL
131 : bvextract(104, 2, 9) : BV:32
132 : bvextract(108, 2, 9) : BV:32
133 : bvadd(131, 132) : BV:32
134 : bvextract(133, 2, 2) : BV:1
135 : eq(134, 28) : BOOL
136 : xor(127, 135) : BOOL
137 : and(130, 136) : BOOL
138 : ite(137, 28, 30) : BV:1
139 : bvextract(124, 61, 9) : BV:11
140 : bvconcat(138, 139) : BV:12
141 : bvconcat(125, 140) : BV:32
142 : bvextract(141, 2, 65) : BV:24
143 : ite(135, 28, 30) : BV:1
144 : bvextract(141, 68, 9) : BV:7
145 : bvconcat(143, 144) : BV:8
146 : bvconcat(142, 145) : BV:32
147 : bvextract(146, 2, 72) : BV:25
148 : eq(115, 74) : BOOL
149 : ite(148, 28, 30) : BV:1
150 : bvextract(146, 33, 9) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(147, 151) : BV:32
153 : bvextract(152, 2, 42) : BV:29
154 : bvextract(152, 3, 9) : BV:2
155 : bvconcat(30, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 84) : BV:21
158 : bvextract(92, 61, 61) : BV:1
159 : eq(158, 28) : BOOL
160 : ite(159, 28, 30) : BV:1
161 : bvextract(156, 89, 9) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
164 : bvextract(163, 2, 3) : BV:31
165 : mlvar.dst.8 : MEMLABEL
166 : store(98, 165, 14, 115, 15, 16) : ARRAY[BV:32 -> BV:8]
167 : mlvar.dst.9 : MEMLABEL
168 : select(166, 167, 20, 15, 16) : BV:32
169 : bvzero_ext(168, 3) : BV:33
170 : mlvar.dst.10 : MEMLABEL
171 : select(166, 170, 7, 15, 16) : BV:32
172 : bvzero_ext(171, 3) : BV:33
173 : bvadd(169, 172) : BV:33
174 : bvextract(173, 26, 26) : BV:1
175 : eq(174, 28) : BOOL
176 : ite(175, 28, 30) : BV:1
177 : bvconcat(164, 176) : BV:32
178 : bvextract(177, 2, 33) : BV:27
179 : bvextract(173, 2, 9) : BV:32
180 : bvextract(179, 15, 15) : BV:1
181 : eq(180, 28) : BOOL
182 : bvextract(169, 15, 15) : BV:1
183 : eq(182, 28) : BOOL
184 : xor(181, 183) : BOOL
185 : ite(184, 28, 30) : BV:1
186 : bvextract(177, 42, 9) : BV:4
187 : bvconcat(185, 186) : BV:5
188 : bvconcat(178, 187) : BV:32
189 : bvextract(188, 2, 46) : BV:20
190 : bvextract(169, 2, 2) : BV:1
191 : eq(190, 28) : BOOL
192 : bvextract(172, 2, 2) : BV:1
193 : eq(192, 28) : BOOL
194 : iff(191, 193) : BOOL
195 : bvextract(169, 2, 9) : BV:32
196 : bvextract(172, 2, 9) : BV:32
197 : bvadd(195, 196) : BV:32
198 : bvextract(197, 2, 2) : BV:1
199 : eq(198, 28) : BOOL
200 : xor(191, 199) : BOOL
201 : and(194, 200) : BOOL
202 : ite(201, 28, 30) : BV:1
203 : bvextract(188, 61, 9) : BV:11
204 : bvconcat(202, 203) : BV:12
205 : bvconcat(189, 204) : BV:32
206 : bvextract(205, 2, 65) : BV:24
207 : ite(199, 28, 30) : BV:1
208 : bvextract(205, 68, 9) : BV:7
209 : bvconcat(207, 208) : BV:8
210 : bvconcat(206, 209) : BV:32
211 : bvextract(210, 2, 72) : BV:25
212 : eq(179, 74) : BOOL
213 : ite(212, 28, 30) : BV:1
214 : bvextract(210, 33, 9) : BV:6
215 : bvconcat(213, 214) : BV:7
216 : bvconcat(211, 215) : BV:32
217 : bvextract(216, 2, 42) : BV:29
218 : bvextract(216, 3, 9) : BV:2
219 : bvconcat(30, 218) : BV:3
220 : bvconcat(217, 219) : BV:32
221 : bvextract(220, 2, 84) : BV:21
222 : bvextract(163, 61, 61) : BV:1
223 : eq(222, 28) : BOOL
224 : ite(223, 28, 30) : BV:1
225 : bvextract(220, 89, 9) : BV:10
226 : bvconcat(224, 225) : BV:11
227 : bvconcat(221, 226) : BV:32
228 : bvextract(227, 2, 3) : BV:31
229 : bvconcat(228, 30) : BV:32
230 : bvextract(229, 2, 33) : BV:27
231 : bvextract(229, 42, 9) : BV:4
232 : bvconcat(30, 231) : BV:5
233 : bvconcat(230, 232) : BV:32
234 : bvextract(233, 2, 46) : BV:20
235 : bvextract(233, 61, 9) : BV:11
236 : bvconcat(30, 235) : BV:12
237 : bvconcat(234, 236) : BV:32
238 : bvextract(237, 2, 65) : BV:24
239 : bvxor(179, 179) : BV:32
240 : bvsign(239) : BV:1
241 : eq(240, 28) : BOOL
242 : ite(241, 28, 30) : BV:1
243 : bvextract(237, 68, 9) : BV:7
244 : bvconcat(242, 243) : BV:8
245 : bvconcat(238, 244) : BV:32
246 : bvextract(245, 2, 72) : BV:25
247 : eq(239, 74) : BOOL
248 : ite(247, 28, 30) : BV:1
249 : bvextract(245, 33, 9) : BV:6
250 : bvconcat(248, 249) : BV:7
251 : bvconcat(246, 250) : BV:32
252 : bvextract(251, 2, 42) : BV:29
253 : bvextract(251, 3, 9) : BV:2
254 : bvconcat(30, 253) : BV:3
255 : bvconcat(252, 254) : BV:32
256 : bvextract(255, 2, 84) : BV:21
257 : bvextract(227, 61, 61) : BV:1
258 : eq(257, 28) : BOOL
259 : ite(258, 28, 30) : BV:1
260 : bvextract(255, 89, 9) : BV:10
261 : bvconcat(259, 260) : BV:11
262 : bvconcat(256, 261) : BV:32
=dst.exreg.7.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : 1 : BV:1
56 : 0 : BV:1
57 : ite(54, 55, 56) : BV:1
=dst.exreg.8.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : not(54) : BOOL
56 : 1 : BV:1
57 : 0 : BV:1
58 : ite(55, 56, 57) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : bvsign(52) : BV:1
54 : 1 : BV:1
55 : eq(53, 54) : BOOL
56 : 0 : BV:1
57 : ite(55, 54, 56) : BV:1
=dst.exreg.11.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : not(54) : BOOL
56 : 1 : BV:1
57 : 0 : BV:1
58 : ite(55, 56, 57) : BV:1
=dst.exreg.12.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : not(54) : BOOL
56 : bvsign(52) : BV:1
57 : 1 : BV:1
58 : eq(56, 57) : BOOL
59 : not(58) : BOOL
60 : and(55, 59) : BOOL
61 : 0 : BV:1
62 : ite(60, 57, 61) : BV:1
=dst.exreg.13.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : 1 : BV:1
56 : 0 : BV:1
57 : ite(54, 55, 56) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
=dst.exreg.14.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : 0 : BV:32
54 : eq(52, 53) : BOOL
55 : bvsign(52) : BV:1
56 : 1 : BV:1
57 : eq(55, 56) : BOOL
58 : or(54, 57) : BOOL
59 : 0 : BV:1
60 : ite(58, 56, 59) : BV:1
=dst.exreg.16.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 12 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.3 : MEMLABEL
13 : 8 : BV:64
14 : bvextract(13, 5, 6) : BV:32
15 : bvadd(8, 14) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.2 : BV:32
23 : bvmul(22, 7) : BV:32
24 : bvadd(23, 14) : BV:32
25 : select(1, 21, 24, 16, 17) : BV:32
26 : bvzero_ext(25, 19) : BV:33
27 : bvadd(20, 26) : BV:33
28 : bvextract(27, 5, 6) : BV:32
29 : store(1, 2, 11, 28, 16, 17) : ARRAY[BV:32 -> BV:8]
30 : mlvar.dst.8 : MEMLABEL
31 : mlvar.dst.6 : MEMLABEL
32 : 4 : BV:64
33 : bvextract(32, 5, 6) : BV:32
34 : bvadd(23, 33) : BV:32
35 : select(29, 31, 34, 16, 17) : BV:32
36 : bvzero_ext(35, 19) : BV:33
37 : mlvar.dst.7 : MEMLABEL
38 : bvadd(8, 33) : BV:32
39 : select(29, 37, 38, 16, 17) : BV:32
40 : bvzero_ext(39, 19) : BV:33
41 : bvadd(36, 40) : BV:33
42 : bvextract(41, 5, 6) : BV:32
43 : store(29, 30, 15, 42, 16, 17) : ARRAY[BV:32 -> BV:8]
44 : mlvar.dst.9 : MEMLABEL
45 : select(43, 44, 22, 16, 17) : BV:32
46 : bvzero_ext(45, 19) : BV:33
47 : mlvar.dst.10 : MEMLABEL
48 : select(43, 47, 3, 16, 17) : BV:32
49 : bvzero_ext(48, 19) : BV:33
50 : bvadd(46, 49) : BV:33
51 : bvextract(50, 5, 6) : BV:32
52 : bvxor(51, 51) : BV:32
53 : bvsign(52) : BV:1
54 : 1 : BV:1
55 : eq(53, 54) : BOOL
56 : not(55) : BOOL
57 : 0 : BV:1
58 : ite(56, 54, 57) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*((te_comment_not_implemented*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented)))
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in s112

=Alias analysis results in s112
=Alias analysis result in s112 at L0%0%1_L0%0%1
=Alias analysis result in s112 at Lfor.body%1%1_L1%1%0
=Alias analysis result in s112 at E0%0%1_E0%0%1

=Liveness in s112
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L1%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in s112

=sprel_maps in s112
=sprel_map at L0%0%1_L0%0%1 in s112
=sprel_map at Lfor.body%1%1_L1%1%0 in s112
=sprel_map at E0%0%1_E0%0%1 in s112
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.1 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(86, 10) : BOOL
91 : eq(80, 1) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.1 : BV:32
113 : eq(86, 112) : BOOL
114 : dst_symbol_addr.2 : BV:32
115 : eq(80, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 3222678528 { -1072288768 } : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 3236314128 { -1058653168 } : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.1 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.2 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 3221762044 { -1073205252 } : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 5) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 3236442127 { -1058525169 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.1.0_begin : BV:32
26 : eq(25, 2) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.1.0_end : BV:32
29 : 3222806527 { -1072160769 } : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 12845056 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 3221762047 { -1073205249 } : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 3208916992 { -1086050304 } : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 255 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 255 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442115 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442115 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442115 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1850952926
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442115 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442115 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442115 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1850952926
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
265961920
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
265961920
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
982936784
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
982936784
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1676902021
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1676902021
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 107)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 107)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3000298498
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 107)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 107)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3000298498
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 207093793 : BV:32
=unaliased_memslot.0
1 : 2955452416 { -1339514880 } : BV:32
=unaliased_memslot.2
1 : 1350828290 : BV:32
=unaliased_memslot.3
1 : 1006776388 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
677870460
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 207093793 : BV:32
=unaliased_memslot.0
1 : 2955452416 { -1339514880 } : BV:32
=unaliased_memslot.2
1 : 1350828290 : BV:32
=unaliased_memslot.3
1 : 1006776388 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
677870460
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
932026304
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
932026304
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
496060028
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
496060028
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 65 : BV:32
=unaliased_memslot.5
1 : 6058192 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
847228023
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 65 : BV:32
=unaliased_memslot.5
1 : 6058192 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
847228023
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1516266761
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1516266761
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 8388608 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1866000081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 8388608 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1866000081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 205586877 : BV:32
=unaliased_memslot.8
1 : 8192 : BV:32
=unaliased_memslot.7
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.6
1 : 2951752 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
126107205
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 205586877 : BV:32
=unaliased_memslot.8
1 : 8192 : BV:32
=unaliased_memslot.7
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.6
1 : 2951752 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
126107205
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
159473059
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
159473059
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4194304 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1376035217
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4194304 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1376035217
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 32 : BV:32
=unaliased_memslot.5
1 : 18436 : BV:32
=unaliased_memslot.8
1 : 13620736 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1605539862
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 32 : BV:32
=unaliased_memslot.5
1 : 18436 : BV:32
=unaliased_memslot.8
1 : 13620736 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1605539862
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1021784812
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1021784812
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1048576 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
586235379
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1048576 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
586235379
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 270850 : BV:32
=unaliased_memslot.0
1 : 512 : BV:32
=unaliased_memslot.2
1 : 917504 : BV:32
=unaliased_memslot.3
1 : 16 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 88076 : BV:32
=unaliased_memslot.8
1 : 4610 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1260596963
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 270850 : BV:32
=unaliased_memslot.0
1 : 512 : BV:32
=unaliased_memslot.2
1 : 917504 : BV:32
=unaliased_memslot.3
1 : 16 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 88076 : BV:32
=unaliased_memslot.8
1 : 4610 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1260596963
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1048575 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
362575055
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1048575 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
362575055
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 524288 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1255387090
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 524288 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1255387090
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 3 : BV:8
=unaliased_memslot.5
1 : 6 : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14989683
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 3 : BV:8
=unaliased_memslot.5
1 : 6 : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14989683
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.5
1 : 255 { -1 } : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242561041
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.5
1 : 255 { -1 } : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242561041
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 64 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.5
1 : 0 : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1581539848
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 64 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.5
1 : 0 : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1581539848
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873199181
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873199181
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843008 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.3
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1766146081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843008 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.3
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1766146081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240554603
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240554603
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1326247643
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1326247643
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1640170337
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1640170337
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 201 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 201 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
656825384
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 201 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 201 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
656825384
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678540 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678540 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678540 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1396918184
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678540 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678540 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678540 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1396918184
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1688323172
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1688323172
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
829570037
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
829570037
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 30)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 30)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
339129353
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 30)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 30)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
339129353
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1880346039
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1880346039
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
411826969
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
411826969
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 63 , m_adder -> 11)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 63 , m_adder -> 11)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
35770311
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 63 , m_adder -> 11)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 63 , m_adder -> 11)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
35770311
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
23062189
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
23062189
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1864272763
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1864272763
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 301973504 : BV:32
=symbol.2
1 : 805298192 : BV:32
=dst_symbol_addr.1
1 : 301973504 : BV:32
=dst_symbol_addr.2
1 : 805298192 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 268554236 : BV:32
=input.src.llvm-mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 302101503 : BV:32
=commonMEM.nonstack.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4308992 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 301973504 : BV:32
=memlabel-mem-esp_end
1 : 268554239 : BV:32
=stack.size
1 : 264245248 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805298192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805426191 : BV:32
=input.dst.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
928027710
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 301973504 : BV:32
=symbol.2
1 : 805298192 : BV:32
=dst_symbol_addr.1
1 : 301973504 : BV:32
=dst_symbol_addr.2
1 : 805298192 : BV:32
=input_stack_pointer_const
1 : 268554236 : BV:32
=input.src.llvm-mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 302101503 : BV:32
=commonMEM.nonstack.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4308992 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 301973504 : BV:32
=memlabel-mem-esp_end
1 : 268554239 : BV:32
=stack.size
1 : 264245248 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805298192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805426191 : BV:32
=input.dst.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
928027710
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 128896 : BV:32
=symbol.2
1 : 896 : BV:32
=dst_symbol_addr.1
1 : 128896 : BV:32
=dst_symbol_addr.2
1 : 896 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 256895 : BV:32
=commonMEM.nonstack.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128896 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 896 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128895 : BV:32
=input.dst.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155156584
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 128896 : BV:32
=symbol.2
1 : 896 : BV:32
=dst_symbol_addr.1
1 : 128896 : BV:32
=dst_symbol_addr.2
1 : 896 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 256895 : BV:32
=commonMEM.nonstack.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128896 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 896 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128895 : BV:32
=input.dst.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155156584
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 128 { -128 } : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1115296009
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 128 { -128 } : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1115296009
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
684034736
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
684034736
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
573800760
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
573800760
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3096831790
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3096831790
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
877863828
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
877863828
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 909904 : BV:32
=symbol.2
1 : 90112 : BV:32
=dst_symbol_addr.1
1 : 909904 : BV:32
=dst_symbol_addr.2
1 : 90112 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1037903 : BV:32
=commonMEM.nonstack.mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1060864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 909904 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4293906432 { -1060864 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 90112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 218111 : BV:32
=input.dst.mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
281844238
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 909904 : BV:32
=symbol.2
1 : 90112 : BV:32
=dst_symbol_addr.1
1 : 909904 : BV:32
=dst_symbol_addr.2
1 : 90112 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1037903 : BV:32
=commonMEM.nonstack.mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1060864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 909904 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4293906432 { -1060864 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 90112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 218111 : BV:32
=input.dst.mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
281844238
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268308487 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268308487 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268308487 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1904800816
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268308487 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268308487 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268308487 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1904800816
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57
=pc L0%0%1_L0%0%1 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
685549484
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57 nodece_path
=pc L0%0%1_L0%0%1 nodece 57 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 57 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
685549484
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58
=pc L0%0%1_L0%0%1 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2320 : BV:32
=symbol.2
1 : 130592 : BV:32
=dst_symbol_addr.1
1 : 2320 : BV:32
=dst_symbol_addr.2
1 : 130592 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 130319 : BV:32
=commonMEM.nonstack.mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 262144 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2320 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294705152 { -262144 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130592 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 258591 : BV:32
=input.dst.mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2002144529
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58 nodece_path
=pc L0%0%1_L0%0%1 nodece 58 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 58 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 2320 : BV:32
=symbol.2
1 : 130592 : BV:32
=dst_symbol_addr.1
1 : 2320 : BV:32
=dst_symbol_addr.2
1 : 130592 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 130319 : BV:32
=commonMEM.nonstack.mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 262144 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2320 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294705152 { -262144 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130592 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 258591 : BV:32
=input.dst.mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2002144529
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59
=pc L0%0%1_L0%0%1 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536267 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637536267 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637536267 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1706790001
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59 nodece_path
=pc L0%0%1_L0%0%1 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 59 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536267 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637536267 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637536267 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1706790001
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60
=pc L0%0%1_L0%0%1 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1820456432
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60 nodece_path
=pc L0%0%1_L0%0%1 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 60 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1820456432
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61
=pc L0%0%1_L0%0%1 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1659447024 : BV:32
=symbol.2
1 : 2045379584 : BV:32
=dst_symbol_addr.1
1 : 1659447024 : BV:32
=dst_symbol_addr.2
1 : 2045379584 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294905852 { -61444 } : BV:32
=input.src.llvm-mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1659575023 : BV:32
=commonMEM.nonstack.mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147479552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1659447024 : BV:32
=memlabel-mem-esp_end
1 : 4294905855 { -61441 } : BV:32
=stack.size
1 : 2147426304 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2045379584 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2045507583 : BV:32
=input.dst.mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1984459928
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61 nodece_path
=pc L0%0%1_L0%0%1 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 61 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1659447024 : BV:32
=symbol.2
1 : 2045379584 : BV:32
=dst_symbol_addr.1
1 : 1659447024 : BV:32
=dst_symbol_addr.2
1 : 2045379584 : BV:32
=input_stack_pointer_const
1 : 4294905852 { -61444 } : BV:32
=input.src.llvm-mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1659575023 : BV:32
=commonMEM.nonstack.mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147479552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1659447024 : BV:32
=memlabel-mem-esp_end
1 : 4294905855 { -61441 } : BV:32
=stack.size
1 : 2147426304 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2045379584 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2045507583 : BV:32
=input.dst.mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1984459928
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62
=pc L0%0%1_L0%0%1 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268308483 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268308483 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268308483 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059509848
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62 nodece_path
=pc L0%0%1_L0%0%1 nodece 62 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 62 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268308483 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268308483 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268308483 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2059509848
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63
=pc L0%0%1_L0%0%1 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3565038592 { -729928704 } : BV:32
=symbol.2
1 : 3573169168 { -721798128 } : BV:32
=dst_symbol_addr.1
1 : 3565038592 { -729928704 } : BV:32
=dst_symbol_addr.2
1 : 3573169168 { -721798128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3303288828 { -991678468 } : BV:32
=input.src.llvm-mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3565166591 { -729800705 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 393216 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3565038592 { -729928704 } : BV:32
=memlabel-mem-esp_end
1 : 3303288831 { -991678465 } : BV:32
=stack.size
1 : 3302895616 { -992071680 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3573169168 { -721798128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3573297167 { -721670129 } : BV:32
=input.dst.mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
682048425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63 nodece_path
=pc L0%0%1_L0%0%1 nodece 63 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 63 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3565038592 { -729928704 } : BV:32
=symbol.2
1 : 3573169168 { -721798128 } : BV:32
=dst_symbol_addr.1
1 : 3565038592 { -729928704 } : BV:32
=dst_symbol_addr.2
1 : 3573169168 { -721798128 } : BV:32
=input_stack_pointer_const
1 : 3303288828 { -991678468 } : BV:32
=input.src.llvm-mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3565166591 { -729800705 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 393216 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3565038592 { -729928704 } : BV:32
=memlabel-mem-esp_end
1 : 3303288831 { -991678465 } : BV:32
=stack.size
1 : 3302895616 { -992071680 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3573169168 { -721798128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3573297167 { -721670129 } : BV:32
=input.dst.mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
682048425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64
=pc L0%0%1_L0%0%1 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 128736 : BV:32
=symbol.2
1 : 496 : BV:32
=dst_symbol_addr.1
1 : 128736 : BV:32
=dst_symbol_addr.2
1 : 496 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 256735 : BV:32
=commonMEM.nonstack.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128736 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 496 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128495 : BV:32
=input.dst.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1119129706
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64 nodece_path
=pc L0%0%1_L0%0%1 nodece 64 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 64 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 128736 : BV:32
=symbol.2
1 : 496 : BV:32
=dst_symbol_addr.1
1 : 128736 : BV:32
=dst_symbol_addr.2
1 : 496 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 256735 : BV:32
=commonMEM.nonstack.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128736 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 496 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128495 : BV:32
=input.dst.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1119129706
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65
=pc L0%0%1_L0%0%1 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268436472 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268436472 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268436472 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
60308425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65 nodece_path
=pc L0%0%1_L0%0%1 nodece 65 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 65 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268436472 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268436472 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268436472 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
60308425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66
=pc L0%0%1_L0%0%1 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4293909664 { -1057632 } : BV:32
=symbol.2
1 : 4294705152 { -262144 } : BV:32
=dst_symbol_addr.1
1 : 4293909664 { -1057632 } : BV:32
=dst_symbol_addr.2
1 : 4294705152 { -262144 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4293521404 { -1445892 } : BV:32
=input.src.llvm-mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294037663 { -929633 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 155648 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293909664 { -1057632 } : BV:32
=memlabel-mem-esp_end
1 : 4293521407 { -1445889 } : BV:32
=stack.size
1 : 4293365760 { -1601536 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294705152 { -262144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294833151 { -134145 } : BV:32
=input.dst.mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1287087586
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66 nodece_path
=pc L0%0%1_L0%0%1 nodece 66 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 66 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4293909664 { -1057632 } : BV:32
=symbol.2
1 : 4294705152 { -262144 } : BV:32
=dst_symbol_addr.1
1 : 4293909664 { -1057632 } : BV:32
=dst_symbol_addr.2
1 : 4294705152 { -262144 } : BV:32
=input_stack_pointer_const
1 : 4293521404 { -1445892 } : BV:32
=input.src.llvm-mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294037663 { -929633 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 155648 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293909664 { -1057632 } : BV:32
=memlabel-mem-esp_end
1 : 4293521407 { -1445889 } : BV:32
=stack.size
1 : 4293365760 { -1601536 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294705152 { -262144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294833151 { -134145 } : BV:32
=input.dst.mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1287087586
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67
=pc L0%0%1_L0%0%1 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
236300691
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67 nodece_path
=pc L0%0%1_L0%0%1 nodece 67 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 67 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
236300691
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68
=pc L0%0%1_L0%0%1 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1449277843
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68 nodece_path
=pc L0%0%1_L0%0%1 nodece 68 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 68 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1449277843
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69
=pc L0%0%1_L0%0%1 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 26791888 : BV:32
=symbol.2
1 : 16656832 : BV:32
=dst_symbol_addr.1
1 : 26791888 : BV:32
=dst_symbol_addr.2
1 : 16656832 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 26919887 : BV:32
=commonMEM.nonstack.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 134221824 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26791888 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4160745472 { -134221824 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 16656832 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 16784831 : BV:32
=input.dst.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2088207128
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69 nodece_path
=pc L0%0%1_L0%0%1 nodece 69 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 69 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 26791888 : BV:32
=symbol.2
1 : 16656832 : BV:32
=dst_symbol_addr.1
1 : 26791888 : BV:32
=dst_symbol_addr.2
1 : 16656832 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 26919887 : BV:32
=commonMEM.nonstack.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 134221824 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26791888 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4160745472 { -134221824 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 16656832 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 16784831 : BV:32
=input.dst.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2088207128
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70
=pc L0%0%1_L0%0%1 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4169018368 { -125948928 } : BV:32
=symbol.2
1 : 4248714256 { -46253040 } : BV:32
=dst_symbol_addr.1
1 : 4169018368 { -125948928 } : BV:32
=dst_symbol_addr.2
1 : 4248714256 { -46253040 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3846189052 { -448778244 } : BV:32
=input.src.llvm-mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4169146367 { -125820929 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1023803392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4169018368 { -125948928 } : BV:32
=memlabel-mem-esp_end
1 : 3846189055 { -448778241 } : BV:32
=stack.size
1 : 2822385664 { -1472581632 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4248714256 { -46253040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4248842255 { -46125041 } : BV:32
=input.dst.mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2099898397
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70 nodece_path
=pc L0%0%1_L0%0%1 nodece 70 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 70 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4169018368 { -125948928 } : BV:32
=symbol.2
1 : 4248714256 { -46253040 } : BV:32
=dst_symbol_addr.1
1 : 4169018368 { -125948928 } : BV:32
=dst_symbol_addr.2
1 : 4248714256 { -46253040 } : BV:32
=input_stack_pointer_const
1 : 3846189052 { -448778244 } : BV:32
=input.src.llvm-mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4169146367 { -125820929 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1023803392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4169018368 { -125948928 } : BV:32
=memlabel-mem-esp_end
1 : 3846189055 { -448778241 } : BV:32
=stack.size
1 : 2822385664 { -1472581632 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4248714256 { -46253040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4248842255 { -46125041 } : BV:32
=input.dst.mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2099898397
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71
=pc L0%0%1_L0%0%1 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
937010165
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71 nodece_path
=pc L0%0%1_L0%0%1 nodece 71 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 71 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
937010165
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72
=pc L0%0%1_L0%0%1 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 74992 : BV:32
=symbol.2
1 : 4294706272 { -261024 } : BV:32
=dst_symbol_addr.1
1 : 74992 : BV:32
=dst_symbol_addr.2
1 : 4294706272 { -261024 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294655996 { -311300 } : BV:32
=input.src.llvm-mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 202991 : BV:32
=commonMEM.nonstack.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 208896 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 74992 : BV:32
=memlabel-mem-esp_end
1 : 4294655999 { -311297 } : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294706272 { -261024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294834271 { -133025 } : BV:32
=input.dst.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
701956813
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72 nodece_path
=pc L0%0%1_L0%0%1 nodece 72 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 72 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 74992 : BV:32
=symbol.2
1 : 4294706272 { -261024 } : BV:32
=dst_symbol_addr.1
1 : 74992 : BV:32
=dst_symbol_addr.2
1 : 4294706272 { -261024 } : BV:32
=input_stack_pointer_const
1 : 4294655996 { -311300 } : BV:32
=input.src.llvm-mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 202991 : BV:32
=commonMEM.nonstack.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 208896 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 74992 : BV:32
=memlabel-mem-esp_end
1 : 4294655999 { -311297 } : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294706272 { -261024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294834271 { -133025 } : BV:32
=input.dst.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
701956813
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73
=pc L0%0%1_L0%0%1 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3228445696 { -1066521600 } : BV:32
=symbol.2
1 : 3233692688 { -1061274608 } : BV:32
=dst_symbol_addr.1
1 : 3228445696 { -1066521600 } : BV:32
=dst_symbol_addr.2
1 : 3233692688 { -1061274608 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3228053500 { -1066913796 } : BV:32
=input.src.llvm-mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3228573695 { -1066393601 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 11796480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3228445696 { -1066521600 } : BV:32
=memlabel-mem-esp_end
1 : 3228053503 { -1066913793 } : BV:32
=stack.size
1 : 3216257024 { -1078710272 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3233692688 { -1061274608 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3233820687 { -1061146609 } : BV:32
=input.dst.mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
42063073
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73 nodece_path
=pc L0%0%1_L0%0%1 nodece 73 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 73 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3228445696 { -1066521600 } : BV:32
=symbol.2
1 : 3233692688 { -1061274608 } : BV:32
=dst_symbol_addr.1
1 : 3228445696 { -1066521600 } : BV:32
=dst_symbol_addr.2
1 : 3233692688 { -1061274608 } : BV:32
=input_stack_pointer_const
1 : 3228053500 { -1066913796 } : BV:32
=input.src.llvm-mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3228573695 { -1066393601 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 11796480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3228445696 { -1066521600 } : BV:32
=memlabel-mem-esp_end
1 : 3228053503 { -1066913793 } : BV:32
=stack.size
1 : 3216257024 { -1078710272 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3233692688 { -1061274608 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3233820687 { -1061146609 } : BV:32
=input.dst.mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
42063073
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74
=pc L0%0%1_L0%0%1 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268436460 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268436460 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268436460 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
371780651
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74 nodece_path
=pc L0%0%1_L0%0%1 nodece 74 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 74 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268436460 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268436460 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268436460 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
371780651
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75
=pc L0%0%1_L0%0%1 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
708613301
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75 nodece_path
=pc L0%0%1_L0%0%1 nodece 75 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 75 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
708613301
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76
=pc L0%0%1_L0%0%1 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 4294710144 { -257152 } : BV:32
=symbol.2
1 : 4294839168 { -128128 } : BV:32
=dst_symbol_addr.1
1 : 4294710144 { -257152 } : BV:32
=dst_symbol_addr.2
1 : 4294839168 { -128128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294709244 { -258052 } : BV:32
=input.src.llvm-mem
1 : (( 4294710156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294838143 { -129153 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294710156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294710144 { -257152 } : BV:32
=memlabel-mem-esp_end
1 : 4294709247 { -258049 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294839168 { -128128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=input.dst.mem
1 : (( 4294710156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1259987437
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76 nodece_path
=pc L0%0%1_L0%0%1 nodece 76 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 76 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4294710144 { -257152 } : BV:32
=symbol.2
1 : 4294839168 { -128128 } : BV:32
=dst_symbol_addr.1
1 : 4294710144 { -257152 } : BV:32
=dst_symbol_addr.2
1 : 4294839168 { -128128 } : BV:32
=input_stack_pointer_const
1 : 4294709244 { -258052 } : BV:32
=input.src.llvm-mem
1 : (( 4294710156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294838143 { -129153 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294710156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294710144 { -257152 } : BV:32
=memlabel-mem-esp_end
1 : 4294709247 { -258049 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294839168 { -128128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=input.dst.mem
1 : (( 4294710156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1259987437
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77
=pc L0%0%1_L0%0%1 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637536268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637536268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1754777750
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77 nodece_path
=pc L0%0%1_L0%0%1 nodece 77 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 77 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637536268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637536268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637536268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1754777750
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78
=pc L0%0%1_L0%0%1 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
763343750
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78 nodece_path
=pc L0%0%1_L0%0%1 nodece 78 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 78 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
763343750
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79
=pc L0%0%1_L0%0%1 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1804393119
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79 nodece_path
=pc L0%0%1_L0%0%1 nodece 79 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 79 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1804393119
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80
=pc L0%0%1_L0%0%1 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 183 , m_adder -> 24)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 183 , m_adder -> 24)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
227379693
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80 nodece_path
=pc L0%0%1_L0%0%1 nodece 80 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 80 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 183 , m_adder -> 24)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 183 , m_adder -> 24)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
227379693
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81
=pc L0%0%1_L0%0%1 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
433159495
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81 nodece_path
=pc L0%0%1_L0%0%1 nodece 81 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 81 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
433159495
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82
=pc L0%0%1_L0%0%1 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 4294710144 { -257152 } : BV:32
=symbol.2
1 : 4294839168 { -128128 } : BV:32
=dst_symbol_addr.1
1 : 4294710144 { -257152 } : BV:32
=dst_symbol_addr.2
1 : 4294839168 { -128128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294709244 { -258052 } : BV:32
=input.src.llvm-mem
1 : (( 4294838128 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294838143 { -129153 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294838128 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294710144 { -257152 } : BV:32
=memlabel-mem-esp_end
1 : 4294709247 { -258049 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294839168 { -128128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=input.dst.mem
1 : (( 4294838128 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1866714440
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82 nodece_path
=pc L0%0%1_L0%0%1 nodece 82 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 82 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4294710144 { -257152 } : BV:32
=symbol.2
1 : 4294839168 { -128128 } : BV:32
=dst_symbol_addr.1
1 : 4294710144 { -257152 } : BV:32
=dst_symbol_addr.2
1 : 4294839168 { -128128 } : BV:32
=input_stack_pointer_const
1 : 4294709244 { -258052 } : BV:32
=input.src.llvm-mem
1 : (( 4294838128 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294838143 { -129153 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294838128 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294710144 { -257152 } : BV:32
=memlabel-mem-esp_end
1 : 4294709247 { -258049 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294839168 { -128128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=input.dst.mem
1 : (( 4294838128 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1866714440
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83
=pc L0%0%1_L0%0%1 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1633872633
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83 nodece_path
=pc L0%0%1_L0%0%1 nodece 83 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 83 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1633872633
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84
=pc L0%0%1_L0%0%1 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
925213404
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84 nodece_path
=pc L0%0%1_L0%0%1 nodece 84 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 84 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
925213404
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85
=pc L0%0%1_L0%0%1 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 4286147104 { -8820192 } : BV:32
=symbol.2
1 : 26518368 : BV:32
=dst_symbol_addr.1
1 : 4286147104 { -8820192 } : BV:32
=dst_symbol_addr.2
1 : 26518368 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4101844988 { -193122308 } : BV:32
=input.src.llvm-mem
1 : (( 4286147108 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4286275103 { -8692193 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4286147108 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 82599936 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4286147104 { -8820192 } : BV:32
=memlabel-mem-esp_end
1 : 4101844991 { -193122305 } : BV:32
=stack.size
1 : 4019245056 { -275722240 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 26518368 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 26646367 : BV:32
=input.dst.mem
1 : (( 4286147108 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
605257325
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85 nodece_path
=pc L0%0%1_L0%0%1 nodece 85 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 85 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4286147104 { -8820192 } : BV:32
=symbol.2
1 : 26518368 : BV:32
=dst_symbol_addr.1
1 : 4286147104 { -8820192 } : BV:32
=dst_symbol_addr.2
1 : 26518368 : BV:32
=input_stack_pointer_const
1 : 4101844988 { -193122308 } : BV:32
=input.src.llvm-mem
1 : (( 4286147108 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4286275103 { -8692193 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4286147108 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 82599936 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4286147104 { -8820192 } : BV:32
=memlabel-mem-esp_end
1 : 4101844991 { -193122305 } : BV:32
=stack.size
1 : 4019245056 { -275722240 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 26518368 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 26646367 : BV:32
=input.dst.mem
1 : (( 4286147108 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
605257325
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86
=pc L0%0%1_L0%0%1 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1712059803
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86 nodece_path
=pc L0%0%1_L0%0%1 nodece 86 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 86 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1712059803
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 87
=pc L0%0%1_L0%0%1 nodece 87 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
614371690
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 87 nodece_path
=pc L0%0%1_L0%0%1 nodece 87 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 87 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
614371690
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 88
=pc L0%0%1_L0%0%1 nodece 88 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1533865840
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 88 nodece_path
=pc L0%0%1_L0%0%1 nodece 88 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 88 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1533865840
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 89
=pc L0%0%1_L0%0%1 nodece 89 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 248 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 248 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2560853184
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 89 nodece_path
=pc L0%0%1_L0%0%1 nodece 89 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 89 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 248 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 248 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2560853184
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 90
=pc L0%0%1_L0%0%1 nodece 90 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
369772020
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 90 nodece_path
=pc L0%0%1_L0%0%1 nodece 90 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 90 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
369772020
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 91
=pc L0%0%1_L0%0%1 nodece 91 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 628884496 : BV:32
=symbol.2
1 : 805306352 : BV:32
=dst_symbol_addr.1
1 : 628884496 : BV:32
=dst_symbol_addr.2
1 : 805306352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4219465724 { -75501572 } : BV:32
=input.src.llvm-mem
1 : (( 805434336 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 629012495 : BV:32
=commonMEM.nonstack.mem
1 : (( 805434336 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1140850688 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 628884496 : BV:32
=memlabel-mem-esp_end
1 : 4219465727 { -75501569 } : BV:32
=stack.size
1 : 3078615040 { -1216352256 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805306352 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805434351 : BV:32
=input.dst.mem
1 : (( 805434336 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2087815277
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 91 nodece_path
=pc L0%0%1_L0%0%1 nodece 91 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 91 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 628884496 : BV:32
=symbol.2
1 : 805306352 : BV:32
=dst_symbol_addr.1
1 : 628884496 : BV:32
=dst_symbol_addr.2
1 : 805306352 : BV:32
=input_stack_pointer_const
1 : 4219465724 { -75501572 } : BV:32
=input.src.llvm-mem
1 : (( 805434336 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 629012495 : BV:32
=commonMEM.nonstack.mem
1 : (( 805434336 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1140850688 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 628884496 : BV:32
=memlabel-mem-esp_end
1 : 4219465727 { -75501569 } : BV:32
=stack.size
1 : 3078615040 { -1216352256 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805306352 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805434351 : BV:32
=input.dst.mem
1 : (( 805434336 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2087815277
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 92
=pc L0%0%1_L0%0%1 nodece 92 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1469338524
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 92 nodece_path
=pc L0%0%1_L0%0%1 nodece 92 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 92 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1469338524
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 93
=pc L0%0%1_L0%0%1 nodece 93 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1060507888
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 93 nodece_path
=pc L0%0%1_L0%0%1 nodece 93 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 93 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1060507888
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 94
=pc L0%0%1_L0%0%1 nodece 94 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156533904
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 94 nodece_path
=pc L0%0%1_L0%0%1 nodece 94 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 94 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156533904
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 95
=pc L0%0%1_L0%0%1 nodece 95 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 55 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 55 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
480113664
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 95 nodece_path
=pc L0%0%1_L0%0%1 nodece 95 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 95 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 55 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 55 , m_adder -> 150)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
480113664
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 96
=pc L0%0%1_L0%0%1 nodece 96 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
880523447
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 96 nodece_path
=pc L0%0%1_L0%0%1 nodece 96 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 96 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
880523447
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 97
=pc L0%0%1_L0%0%1 nodece 97 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
621045389
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 97 nodece_path
=pc L0%0%1_L0%0%1 nodece 97 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 97 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
621045389
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 98
=pc L0%0%1_L0%0%1 nodece 98 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 55 , m_adder -> 197)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 55 , m_adder -> 197)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
109276205
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 98 nodece_path
=pc L0%0%1_L0%0%1 nodece 98 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 98 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 55 , m_adder -> 197)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 55 , m_adder -> 197)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
109276205
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 0, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678528 ) -> 255, ( 3222678529 ) -> 255, ( 3222678530 ) -> 255, ( 3222678531 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 255 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442112 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 255 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
265961920
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 230 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 0, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, () -> (RAC: m_multiplier -> 230 , m_adder -> 87)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
265961920
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
982936784
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 255, ( 3221762047 ) -> 255, ( 3221762046 ) -> 255, ( 3221762045 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
982936784
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 107)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 107)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3000298498
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 107)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 128, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, () -> (RAC: m_multiplier -> 149 , m_adder -> 107)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3000298498
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 207093793 : BV:32
=unaliased_memslot.0
1 : 2955452416 { -1339514880 } : BV:32
=unaliased_memslot.2
1 : 1350828290 : BV:32
=unaliased_memslot.3
1 : 1006776388 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
677870460
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806521 ) -> 160, ( 3222806522 ) -> 40, ( 3222806523 ) -> 176, ( 3236442116 ) -> 2, ( 3236442117 ) -> 1, ( 3236442118 ) -> 132, ( 3236442119 ) -> 80, ( 3236442108 ) -> 33, ( 3236442110 ) -> 88, ( 3236442111 ) -> 12, ( 3236314136 ) -> 68, ( 3236314137 ) -> 48, ( 3236314138 ) -> 2, ( 3236314139 ) -> 60, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 207093793 : BV:32
=unaliased_memslot.0
1 : 2955452416 { -1339514880 } : BV:32
=unaliased_memslot.2
1 : 1350828290 : BV:32
=unaliased_memslot.3
1 : 1006776388 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
677870460
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
932026304
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 0, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, ( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442116 ) -> 0, ( 3236442117 ) -> 0, ( 3236442118 ) -> 0, ( 3236442119 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
932026304
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
496060028
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806523 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
496060028
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 65 : BV:32
=unaliased_memslot.5
1 : 6058192 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
847228023
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806508 ) -> 65, ( 3222678532 ) -> 208, ( 3222678533 ) -> 112, ( 3222678534 ) -> 92, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 65 : BV:32
=unaliased_memslot.5
1 : 6058192 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
847228023
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1516266761
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 0, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, ( 3222806520 ) -> 0, ( 3222806521 ) -> 0, ( 3222806522 ) -> 0, ( 3222806523 ) -> 0, ( 3236442120 ) -> 0, ( 3236442121 ) -> 0, ( 3236442122 ) -> 0, ( 3236442123 ) -> 0, ( 3222806512 ) -> 0, ( 3222806513 ) -> 0, ( 3222806514 ) -> 0, ( 3222806515 ) -> 0, ( 3222806508 ) -> 0, ( 3222806509 ) -> 0, ( 3222806510 ) -> 0, ( 3222806511 ) -> 0, ( 3236442108 ) -> 0, ( 3236442109 ) -> 0, ( 3236442110 ) -> 0, ( 3236442111 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1516266761
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 8388608 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1866000081
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 8388608 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1866000081
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 205586877 : BV:32
=unaliased_memslot.8
1 : 8192 : BV:32
=unaliased_memslot.7
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.6
1 : 2951752 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
126107205
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806508 ) -> 189, ( 3222806509 ) -> 1, ( 3222806510 ) -> 65, ( 3222806511 ) -> 12, ( 3222678543 ) -> 128, ( 3222678537 ) -> 32, ( 3222678532 ) -> 72, ( 3222678533 ) -> 10, ( 3222678534 ) -> 45, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 205586877 : BV:32
=unaliased_memslot.8
1 : 8192 : BV:32
=unaliased_memslot.7
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.6
1 : 2951752 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
126107205
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
159473059
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 255, ( 3222678533 ) -> 255, ( 3222678534 ) -> 255, ( 3222678535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
159473059
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4194304 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1376035217
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4194304 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1376035217
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 32 : BV:32
=unaliased_memslot.5
1 : 18436 : BV:32
=unaliased_memslot.8
1 : 13620736 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1605539862
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 32, ( 3222806512 ) -> 4, ( 3222806513 ) -> 72, ( 3236314133 ) -> 214, ( 3236314134 ) -> 207, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 32 : BV:32
=unaliased_memslot.5
1 : 18436 : BV:32
=unaliased_memslot.8
1 : 13620736 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1605539862
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1021784812
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314132 ) -> 255, ( 3236314133 ) -> 255, ( 3236314134 ) -> 255, ( 3236314135 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1021784812
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1048576 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
586235379
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806522 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1048576 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
586235379
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 270850 : BV:32
=unaliased_memslot.0
1 : 512 : BV:32
=unaliased_memslot.2
1 : 917504 : BV:32
=unaliased_memslot.3
1 : 16 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 88076 : BV:32
=unaliased_memslot.8
1 : 4610 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1260596963
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 2, ( 3222806521 ) -> 2, ( 3236442118 ) -> 14, ( 3222806512 ) -> 12, ( 3222806513 ) -> 88, ( 3222806514 ) -> 1, ( 3236442108 ) -> 2, ( 3236442109 ) -> 34, ( 3236442110 ) -> 4, ( 3236314136 ) -> 16, ( 3236314129 ) -> 18, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 270850 : BV:32
=unaliased_memslot.0
1 : 512 : BV:32
=unaliased_memslot.2
1 : 917504 : BV:32
=unaliased_memslot.3
1 : 16 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 88076 : BV:32
=unaliased_memslot.8
1 : 4610 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1260596963
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1048575 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
362575055
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1048575 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
362575055
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 3 : BV:8
=unaliased_memslot.5
1 : 6 : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14989683
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442108 ) -> 3, ( 3236314136 ) -> 6, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 3 : BV:8
=unaliased_memslot.5
1 : 6 : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14989683
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.5
1 : 255 { -1 } : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242561041
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314136 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.5
1 : 255 { -1 } : BV:8
=unaliased_memslot.7
1 : 0 : BV:8
=unaliased_memslot.6
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242561041
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873199181
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873199181
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843008 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.3
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1766146081
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 0, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, ( 3222806520 ) -> 0, ( 3236442116 ) -> 0, ( 3222806512 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843008 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.3
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1766146081
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240554603
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240554603
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1326247643
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1326247643
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1688323172
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1688323172
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1880346039
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1880346039
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1176225844
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1176225844
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333293469
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333293469
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : ([ 12845056; 3221762047 ] -> 0, () -> (RAC: m_multiplier -> 110 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3034599406
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : ([ 12845056; 3221762047 ] -> 0, () -> (RAC: m_multiplier -> 110 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3034599406
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 110 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : ([ 12845056; 3221762047 ] -> 0, () -> (RAC: m_multiplier -> 110 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3034599406
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 325786718966164222481162264044817149200 { -14495647954774240982212343386951062256 } : BV:128
=input.dst.exreg.2.1
1 : 258311058617751371791098777711331249824 { -81971308303187091672275829720436961632 } : BV:128
=input.dst.exreg.2.2
1 : 14103226496083525844831973494658172568 : BV:128
=input.dst.exreg.2.3
1 : 311683492470080696654777034628163495544 { -28598874450857766808597572803604715912 } : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806527 ) -> 245, ( 3222806520 ) -> 240, ( 3222806521 ) -> 204, ( 3222806522 ) -> 168, ( 3222806523 ) -> 133, ( 3222806516 ) -> 128, ( 3222806517 ) -> 92, ( 3222806518 ) -> 57, ( 3222806519 ) -> 20, ( 3222806512 ) -> 16, ( 3222806513 ) -> 237, ( 3222806514 ) -> 200, ( 3222806515 ) -> 164, ( 3222806525 ) -> 61, ( 3222806524 ) -> 96, ( 3222806526 ) -> 24, () -> (RAC: m_multiplier -> 110 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%1
1 : 3260343928 { -1034623368 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236442108 { -1058525188 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222806508 { -1072160788 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 3799254680 { -495712616 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222806508 { -1072160788 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236442108 { -1058525188 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222806512 { -1072160784 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 2764631312 { -1530335984 } : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222806512 { -1072160784 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806527 ) -> 245, ( 3222806520 ) -> 240, ( 3222806521 ) -> 204, ( 3222806522 ) -> 168, ( 3222806523 ) -> 133, ( 3222806516 ) -> 128, ( 3222806517 ) -> 92, ( 3222806518 ) -> 57, ( 3222806519 ) -> 20, ( 3222806512 ) -> 16, ( 3222806513 ) -> 237, ( 3222806514 ) -> 200, ( 3222806515 ) -> 164, ( 3222806525 ) -> 61, ( 3222806524 ) -> 96, ( 3222806526 ) -> 24, [ 12845056; 3221762047 ] -> 0, () -> (RAC: m_multiplier -> 110 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3034599406
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65548 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 16390 : BV:32
=input.src.llvm-%i.0
1 : 16390 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1962928545
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65532 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16386 : BV:32
=input.src.llvm-%i.0
1 : 16386 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236379676 { -1058587620 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222744076 { -1072223220 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222744076 { -1072223220 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236379676 { -1058587620 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 65552 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222744080 { -1072223216 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%add2
1 : 16388 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 16386 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222744080 { -1072223216 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 65552 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1962928545
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65548 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 16390 : BV:32
=input.src.llvm-%i.0
1 : 16390 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1962928545
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65516 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16382 : BV:32
=input.src.llvm-%i.0
1 : 16382 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236379660 { -1058587636 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 65532 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222744060 { -1072223236 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 65532 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222744060 { -1072223236 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236379660 { -1058587636 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222744064 { -1072223232 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%add2
1 : 16384 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 16382 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222744064 { -1072223232 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 65536 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1962928545
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32780 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 8198 : BV:32
=input.src.llvm-%i.0
1 : 8198 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
529235706
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32764 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8194 : BV:32
=input.src.llvm-%i.0
1 : 8194 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236346908 { -1058620388 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222711308 { -1072255988 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222711308 { -1072255988 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236346908 { -1058620388 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32784 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222711312 { -1072255984 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%add2
1 : 8196 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 8194 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222711312 { -1072255984 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32784 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
529235706
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32780 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 8198 : BV:32
=input.src.llvm-%i.0
1 : 8198 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
529235706
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32748 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8190 : BV:32
=input.src.llvm-%i.0
1 : 8190 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236346892 { -1058620404 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 32764 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222711292 { -1072256004 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 32764 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222711292 { -1072256004 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236346892 { -1058620404 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222711296 { -1072256000 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%add2
1 : 8192 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 8190 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222711296 { -1072256000 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32768 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
529235706
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16396 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 4102 : BV:32
=input.src.llvm-%i.0
1 : 4102 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2031004039
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16380 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4098 : BV:32
=input.src.llvm-%i.0
1 : 4098 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236330524 { -1058636772 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222694924 { -1072272372 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222694924 { -1072272372 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236330524 { -1058636772 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 16400 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222694928 { -1072272368 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%add2
1 : 4100 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 4098 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222694928 { -1072272368 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 16400 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2031004039
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16396 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 4102 : BV:32
=input.src.llvm-%i.0
1 : 4102 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2031004039
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16364 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4094 : BV:32
=input.src.llvm-%i.0
1 : 4094 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236330508 { -1058636788 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 16380 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222694908 { -1072272388 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 16380 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222694908 { -1072272388 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236330508 { -1058636788 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222694912 { -1072272384 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%add2
1 : 4096 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 4094 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222694912 { -1072272384 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 16384 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2031004039
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8204 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 2054 : BV:32
=input.src.llvm-%i.0
1 : 2054 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2032510512
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8188 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2050 : BV:32
=input.src.llvm-%i.0
1 : 2050 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236322332 { -1058644964 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222686732 { -1072280564 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222686732 { -1072280564 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236322332 { -1058644964 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 8208 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222686736 { -1072280560 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%add2
1 : 2052 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2050 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222686736 { -1072280560 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 8208 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2032510512
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8204 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 2054 : BV:32
=input.src.llvm-%i.0
1 : 2054 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2032510512
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8172 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2046 : BV:32
=input.src.llvm-%i.0
1 : 2046 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236322316 { -1058644980 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 8188 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222686716 { -1072280580 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 8188 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222686716 { -1072280580 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236322316 { -1058644980 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222686720 { -1072280576 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%add2
1 : 2048 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2046 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222686720 { -1072280576 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 8192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2032510512
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4108 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 1030 : BV:32
=input.src.llvm-%i.0
1 : 1030 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2100731660
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4092 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1026 : BV:32
=input.src.llvm-%i.0
1 : 1026 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236318236 { -1058649060 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222682636 { -1072284660 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222682636 { -1072284660 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236318236 { -1058649060 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4112 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222682640 { -1072284656 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%add2
1 : 1028 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 1026 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222682640 { -1072284656 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2100731660
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4108 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 1030 : BV:32
=input.src.llvm-%i.0
1 : 1030 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2100731660
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4076 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1022 : BV:32
=input.src.llvm-%i.0
1 : 1022 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236318220 { -1058649076 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 4092 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222682620 { -1072284676 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 4092 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222682620 { -1072284676 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236318220 { -1058649076 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222682624 { -1072284672 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%add2
1 : 1024 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 1022 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222682624 { -1072284672 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2100731660
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2060 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 518 : BV:32
=input.src.llvm-%i.0
1 : 518 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1555218377
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2044 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 514 : BV:32
=input.src.llvm-%i.0
1 : 514 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236316188 { -1058651108 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222680588 { -1072286708 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222680588 { -1072286708 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236316188 { -1058651108 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 2064 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222680592 { -1072286704 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%add2
1 : 516 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 514 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222680592 { -1072286704 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 2064 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1555218377
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2060 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 518 : BV:32
=input.src.llvm-%i.0
1 : 518 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1555218377
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2028 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 510 : BV:32
=input.src.llvm-%i.0
1 : 510 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236316172 { -1058651124 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 2044 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222680572 { -1072286724 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 2044 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222680572 { -1072286724 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236316172 { -1058651124 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222680576 { -1072286720 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%add2
1 : 512 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 510 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222680576 { -1072286720 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 2048 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1555218377
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1036 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 262 : BV:32
=input.src.llvm-%i.0
1 : 262 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1538776050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1020 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 258 : BV:32
=input.src.llvm-%i.0
1 : 258 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236315164 { -1058652132 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222679564 { -1072287732 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222679564 { -1072287732 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236315164 { -1058652132 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 1040 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222679568 { -1072287728 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%add2
1 : 260 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 258 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222679568 { -1072287728 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 1040 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1538776050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1036 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 262 : BV:32
=input.src.llvm-%i.0
1 : 262 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1538776050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1004 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 254 : BV:32
=input.src.llvm-%i.0
1 : 254 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236315148 { -1058652148 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 1020 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222679548 { -1072287748 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 1020 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222679548 { -1072287748 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236315148 { -1058652148 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222679552 { -1072287744 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%add2
1 : 256 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 254 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222679552 { -1072287744 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 1024 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1538776050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 524 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 134 : BV:32
=input.src.llvm-%i.0
1 : 134 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1436796072
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 508 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 130 : BV:32
=input.src.llvm-%i.0
1 : 130 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314652 { -1058652644 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222679052 { -1072288244 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222679052 { -1072288244 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314652 { -1058652644 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 528 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222679056 { -1072288240 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%add2
1 : 132 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 130 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222679056 { -1072288240 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 528 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1436796072
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 524 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 134 : BV:32
=input.src.llvm-%i.0
1 : 134 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1436796072
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 492 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 126 : BV:32
=input.src.llvm-%i.0
1 : 126 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314636 { -1058652660 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 508 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222679036 { -1072288260 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 508 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222679036 { -1072288260 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314636 { -1058652660 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222679040 { -1072288256 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%add2
1 : 128 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 126 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222679040 { -1072288256 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1436796072
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 268 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 70 : BV:32
=input.src.llvm-%i.0
1 : 70 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
310440579
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 252 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 66 : BV:32
=input.src.llvm-%i.0
1 : 66 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314396 { -1058652900 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222678796 { -1072288500 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222678796 { -1072288500 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314396 { -1058652900 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 272 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222678800 { -1072288496 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%add2
1 : 68 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 66 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222678800 { -1072288496 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 272 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
310440579
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 268 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 70 : BV:32
=input.src.llvm-%i.0
1 : 70 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
310440579
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 236 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 62 : BV:32
=input.src.llvm-%i.0
1 : 62 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314380 { -1058652916 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 252 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222678780 { -1072288516 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 252 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222678780 { -1072288516 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314380 { -1058652916 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222678784 { -1072288512 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%add2
1 : 64 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 62 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222678784 { -1072288512 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
310440579
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 140 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 38 : BV:32
=input.src.llvm-%i.0
1 : 38 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
186297783
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 124 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 34 : BV:32
=input.src.llvm-%i.0
1 : 34 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314268 { -1058653028 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222678668 { -1072288628 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222678668 { -1072288628 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314268 { -1058653028 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 144 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222678672 { -1072288624 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%add2
1 : 36 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 34 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222678672 { -1072288624 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
186297783
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 140 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 38 : BV:32
=input.src.llvm-%i.0
1 : 38 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
186297783
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 108 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 30 : BV:32
=input.src.llvm-%i.0
1 : 30 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314252 { -1058653044 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 124 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222678652 { -1072288644 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 124 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222678652 { -1072288644 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314252 { -1058653044 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222678656 { -1072288640 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%add2
1 : 32 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 30 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222678656 { -1072288640 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 128 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
186297783
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 76 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 22 : BV:32
=input.src.llvm-%i.0
1 : 22 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1489435518
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 60 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 18 : BV:32
=input.src.llvm-%i.0
1 : 18 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314204 { -1058653092 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222678604 { -1072288692 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222678604 { -1072288692 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314204 { -1058653092 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 80 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222678608 { -1072288688 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%add2
1 : 20 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 18 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222678608 { -1072288688 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 80 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1489435518
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 76 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 22 : BV:32
=input.src.llvm-%i.0
1 : 22 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1489435518
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 44 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 14 : BV:32
=input.src.llvm-%i.0
1 : 14 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314188 { -1058653108 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222678588 { -1072288708 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 60 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222678588 { -1072288708 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314188 { -1058653108 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222678592 { -1072288704 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%add2
1 : 16 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 14 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222678592 { -1072288704 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 64 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1489435518
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 76 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 22 : BV:32
=input.src.llvm-%i.0
1 : 22 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1489435518
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 28 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 10 : BV:32
=input.src.llvm-%i.0
1 : 10 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314172 { -1058653124 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222678572 { -1072288724 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222678572 { -1072288724 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314172 { -1058653124 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 48 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222678576 { -1072288720 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%add2
1 : 12 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 10 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222678576 { -1072288720 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 48 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1489435518
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 28 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 10 : BV:32
=input.src.llvm-%i.0
1 : 10 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1620866408
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=input.src.llvm-%i.0
1 : 6 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236314156 { -1058653140 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222678556 { -1072288740 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222678556 { -1072288740 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314156 { -1058653140 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222678560 { -1072288736 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%add2
1 : 8 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 6 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222678560 { -1072288736 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1620866408
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=input.src.llvm-%i.0
1 : 6 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
916350768
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=input.src.llvm-%i.0
1 : 6 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
916350768
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=input.src.llvm-%i.0
1 : 6 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1468854062
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=input.src.llvm-%i.0
1 : 6 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1468854062
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 205 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=input.src.llvm-%i.0
1 : 6 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : ([ 12845056; 3221762047 ] -> 0, () -> (RAC: m_multiplier -> 205 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3825063966
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 205 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=input.src.llvm-%i.0
1 : 6 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : ([ 12845056; 3221762047 ] -> 0, () -> (RAC: m_multiplier -> 205 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3825063966
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
23062189
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
23062189
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
23062189
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236442108 { -1058525188 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222806508 { -1072160788 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222806508 { -1072160788 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236442108 { -1058525188 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222806512 { -1072160784 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222806512 { -1072160784 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
23062189
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1864272763
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294692860 { -274436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294692860 { -274436 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1864272763
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 66
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 296486547868064247626893428725780931472 { -43795819052874215836481178705987279984 } : BV:128
=input.dst.exreg.2.1
1 : 174932087008315964195664526056687574452 { -165350279912622499267710081375080637004 } : BV:128
=input.dst.exreg.2.2
1 : 148243273973646205070578883161809924552 : BV:128
=input.dst.exreg.2.3
1 : 148243273973646205070578883161809924552 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664252 ) -> 104, ( 637664244 ) -> 216, ( 637664250 ) -> 197, ( 637664254 ) -> 13, ( 637664253 ) -> 59, ( 637664247 ) -> 78, ( 637664243 ) -> 7, ( 637664240 ) -> 144, ( 637664245 ) -> 170, ( 637664251 ) -> 151, ( 637664246 ) -> 124, ( 637664249 ) -> 242, ( 637664241 ) -> 99, ( 637664248 ) -> 32, ( 637664242 ) -> 53, ( 637664255 ) -> 223, () -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%1
1 : 2207953352 { -2087013944 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 268436460 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 637664236 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%0
1 : 2207953352 { -2087013944 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=input.src.llvm-%arrayidx
1 : 637664236 : BV:32
=input.src.llvm-%arrayidx1
1 : 268436460 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 637664240 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 120939408 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 637664240 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 637664252 ) -> 104, ( 637664244 ) -> 216, ( 637664250 ) -> 197, ( 637664254 ) -> 13, ( 637664253 ) -> 59, ( 637664247 ) -> 78, ( 637664243 ) -> 7, ( 637664240 ) -> 144, ( 637664245 ) -> 170, ( 637664251 ) -> 151, ( 637664246 ) -> 124, ( 637664249 ) -> 242, ( 637664241 ) -> 99, ( 637664248 ) -> 32, ( 637664242 ) -> 53, ( 637664255 ) -> 223, () -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 67
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127948 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 255108462337329038431500115519122719344 { -85173904583609425031874491912645492112 } : BV:128
=input.dst.exreg.2.1
1 : 323054999747557450640228783497781054756 { -17227367173381012823145823933987156700 } : BV:128
=input.dst.exreg.2.2
1 : 297695414629133750956660733514447724856 { -42586952291804712506713873917320486600 } : BV:128
=input.dst.exreg.2.3
1 : 297695414629133750956660733514447724856 { -42586952291804712506713873917320486600 } : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664232 ) -> 0, ( 637664233 ) -> 211, ( 637664231 ) -> 47, ( 637664238 ) -> 236, ( 637664252 ) -> 104, ( 637664244 ) -> 216, ( 637664236 ) -> 72, ( 637664250 ) -> 197, ( 637664254 ) -> 13, ( 637664253 ) -> 59, ( 637664247 ) -> 78, ( 637664224 ) -> 112, ( 637664239 ) -> 191, ( 637664229 ) -> 139, ( 637664243 ) -> 7, ( 637664240 ) -> 144, ( 637664228 ) -> 184, ( 637664230 ) -> 93, ( 637664227 ) -> 230, ( 637664235 ) -> 118, ( 637664225 ) -> 66, ( 637664226 ) -> 20, ( 637664237 ) -> 26, ( 637664245 ) -> 170, ( 637664251 ) -> 151, ( 637664246 ) -> 124, ( 637664249 ) -> 242, ( 637664241 ) -> 99, ( 637664248 ) -> 32, ( 637664242 ) -> 53, ( 637664255 ) -> 223, ( 637664234 ) -> 164, () -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%1
1 : 4077527352 { -217439944 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31990 : BV:32
=input.src.llvm-%i.0
1 : 31990 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 268436444 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127964 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 637664220 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127964 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%0
1 : 4077527352 { -217439944 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=input.src.llvm-%arrayidx
1 : 637664220 : BV:32
=input.src.llvm-%arrayidx1
1 : 268436444 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127968 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127964 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 637664224 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127964 : BV:32
=input.src.llvm-%add2
1 : 31992 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 3860087408 { -434879888 } : BV:32
=input.src.llvm-%dec
1 : 31990 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 637664224 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127968 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 637664232 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 637664233 ) -> 211, ( 637664231 ) -> 47, ( 637664238 ) -> 236, ( 637664252 ) -> 104, ( 637664244 ) -> 216, ( 637664236 ) -> 72, ( 637664250 ) -> 197, ( 637664254 ) -> 13, ( 637664253 ) -> 59, ( 637664247 ) -> 78, ( 637664224 ) -> 112, ( 637664239 ) -> 191, ( 637664229 ) -> 139, ( 637664243 ) -> 7, ( 637664240 ) -> 144, ( 637664228 ) -> 184, ( 637664230 ) -> 93, ( 637664227 ) -> 230, ( 637664235 ) -> 118, ( 637664225 ) -> 66, ( 637664226 ) -> 20, ( 637664237 ) -> 26, ( 637664245 ) -> 170, ( 637664251 ) -> 151, ( 637664246 ) -> 124, ( 637664249 ) -> 242, ( 637664241 ) -> 99, ( 637664248 ) -> 32, ( 637664242 ) -> 53, ( 637664255 ) -> 223, ( 637664234 ) -> 164, () -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 68
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127932 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 211082345974181662320034336133549990736 { -129200020946756801143340271298218220720 } : BV:128
=input.dst.exreg.2.1
1 : 132229986061374666819868497988291034516 : BV:128
=input.dst.exreg.2.2
1 : 105541173026704912417149336863546970536 : BV:128
=input.dst.exreg.2.3
1 : 105541173026704912417149336863546970536 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664232 ) -> 0, ( 637664217 ) -> 179, ( 637664223 ) -> 158, ( 637664233 ) -> 211, ( 637664231 ) -> 47, ( 637664212 ) -> 152, ( 637664210 ) -> 245, ( 637664208 ) -> 80, ( 637664238 ) -> 236, ( 637664221 ) -> 251, ( 637664252 ) -> 104, ( 637664244 ) -> 216, ( 637664236 ) -> 72, ( 637664250 ) -> 197, ( 637664254 ) -> 13, ( 637664253 ) -> 59, ( 637664247 ) -> 78, ( 637664219 ) -> 87, ( 637664222 ) -> 204, ( 637664209 ) -> 35, ( 637664224 ) -> 112, ( 637664239 ) -> 191, ( 637664229 ) -> 139, ( 637664243 ) -> 7, ( 637664240 ) -> 144, ( 637664228 ) -> 184, ( 637664230 ) -> 93, ( 637664213 ) -> 106, ( 637664220 ) -> 40, ( 637664227 ) -> 230, ( 637664235 ) -> 118, ( 637664211 ) -> 198, ( 637664225 ) -> 66, ( 637664226 ) -> 20, ( 637664215 ) -> 14, ( 637664237 ) -> 26, ( 637664245 ) -> 170, ( 637664251 ) -> 151, ( 637664246 ) -> 124, ( 637664249 ) -> 242, ( 637664241 ) -> 99, ( 637664248 ) -> 32, ( 637664216 ) -> 224, ( 637664218 ) -> 133, ( 637664242 ) -> 53, ( 637664255 ) -> 223, ( 637664214 ) -> 60, ( 637664234 ) -> 164, () -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%1
1 : 1668977064 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31986 : BV:32
=input.src.llvm-%i.0
1 : 31986 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 268436428 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127948 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 637664204 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127948 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%0
1 : 1668977064 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=input.src.llvm-%arrayidx
1 : 637664204 : BV:32
=input.src.llvm-%arrayidx1
1 : 268436428 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127952 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127948 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 637664208 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127948 : BV:32
=input.src.llvm-%add2
1 : 31988 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 3337954128 { -957013168 } : BV:32
=input.src.llvm-%dec
1 : 31986 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 637664208 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127952 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 637664232 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 637664217 ) -> 179, ( 637664223 ) -> 158, ( 637664233 ) -> 211, ( 637664231 ) -> 47, ( 637664212 ) -> 152, ( 637664210 ) -> 245, ( 637664208 ) -> 80, ( 637664238 ) -> 236, ( 637664221 ) -> 251, ( 637664252 ) -> 104, ( 637664244 ) -> 216, ( 637664236 ) -> 72, ( 637664250 ) -> 197, ( 637664254 ) -> 13, ( 637664253 ) -> 59, ( 637664247 ) -> 78, ( 637664219 ) -> 87, ( 637664222 ) -> 204, ( 637664209 ) -> 35, ( 637664224 ) -> 112, ( 637664239 ) -> 191, ( 637664229 ) -> 139, ( 637664243 ) -> 7, ( 637664240 ) -> 144, ( 637664228 ) -> 184, ( 637664230 ) -> 93, ( 637664213 ) -> 106, ( 637664220 ) -> 40, ( 637664227 ) -> 230, ( 637664235 ) -> 118, ( 637664211 ) -> 198, ( 637664225 ) -> 66, ( 637664226 ) -> 20, ( 637664215 ) -> 14, ( 637664237 ) -> 26, ( 637664245 ) -> 170, ( 637664251 ) -> 151, ( 637664246 ) -> 124, ( 637664249 ) -> 242, ( 637664241 ) -> 99, ( 637664248 ) -> 32, ( 637664216 ) -> 224, ( 637664218 ) -> 133, ( 637664242 ) -> 53, ( 637664255 ) -> 223, ( 637664214 ) -> 60, ( 637664234 ) -> 164, () -> (RAC: m_multiplier -> 233 , m_adder -> 252)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1240941604
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 69
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 301973504 : BV:32
=symbol.2
1 : 805298192 : BV:32
=dst_symbol_addr.1
1 : 301973504 : BV:32
=dst_symbol_addr.2
1 : 805298192 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 268554236 : BV:32
=input.src.llvm-mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 302101503 : BV:32
=commonMEM.nonstack.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4308992 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 301973504 : BV:32
=memlabel-mem-esp_end
1 : 268554239 : BV:32
=stack.size
1 : 264245248 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805298192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805426191 : BV:32
=input.dst.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
928027710
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 268554236 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 301973504 : BV:32
=symbol.2
1 : 805298192 : BV:32
=dst_symbol_addr.1
1 : 301973504 : BV:32
=dst_symbol_addr.2
1 : 805298192 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 268554236 : BV:32
=input.src.llvm-mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 268554236 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 302101503 : BV:32
=commonMEM.nonstack.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 4308992 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 301973504 : BV:32
=memlabel-mem-esp_end
1 : 268554239 : BV:32
=stack.size
1 : 264245248 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805298192 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 805426191 : BV:32
=input.dst.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
928027710
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 70
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 301973504 : BV:32
=symbol.2
1 : 805298192 : BV:32
=dst_symbol_addr.1
1 : 301973504 : BV:32
=dst_symbol_addr.2
1 : 805298192 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 268554236 : BV:32
=input.src.llvm-mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 302101503 : BV:32
=commonMEM.nonstack.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4308992 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 301973504 : BV:32
=memlabel-mem-esp_end
1 : 268554239 : BV:32
=stack.size
1 : 264245248 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805298192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805426191 : BV:32
=input.dst.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
928027710
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 268554236 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79228162514264337593543950337 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 79228162514264337593543950337 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 301973504 : BV:32
=symbol.2
1 : 805298192 : BV:32
=dst_symbol_addr.1
1 : 301973504 : BV:32
=dst_symbol_addr.2
1 : 805298192 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 268554236 : BV:32
=input.src.llvm-mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 0, ( 302101488 ) -> 1, ( 302101500 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 268554236 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 302101503 : BV:32
=commonMEM.nonstack.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 805426172 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 302101484 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 4308992 : BV:32
=input.src.llvm-%0
1 : 1 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 301973504 : BV:32
=input.src.llvm-%arrayidx
1 : 302101484 : BV:32
=input.src.llvm-%arrayidx1
1 : 805426172 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 268554239 : BV:32
=stack.size
1 : 264245248 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 805298192 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 302101488 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 302101488 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 805426191 : BV:32
=input.dst.mem
1 : (( 302101484 ) -> 1, ( 302101496 ) -> 0, ( 302101488 ) -> 1, ( 302101500 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
928027710
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 71
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 128896 : BV:32
=symbol.2
1 : 896 : BV:32
=dst_symbol_addr.1
1 : 128896 : BV:32
=dst_symbol_addr.2
1 : 896 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 256895 : BV:32
=commonMEM.nonstack.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128896 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 896 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128895 : BV:32
=input.dst.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155156584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 128896 : BV:32
=symbol.2
1 : 896 : BV:32
=dst_symbol_addr.1
1 : 128896 : BV:32
=dst_symbol_addr.2
1 : 896 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 256895 : BV:32
=commonMEM.nonstack.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128896 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 896 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 128895 : BV:32
=input.dst.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155156584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 72
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 128896 : BV:32
=symbol.2
1 : 896 : BV:32
=dst_symbol_addr.1
1 : 128896 : BV:32
=dst_symbol_addr.2
1 : 896 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 256895 : BV:32
=commonMEM.nonstack.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128896 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 896 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128895 : BV:32
=input.dst.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155156584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 1 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 1 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 128896 : BV:32
=symbol.2
1 : 896 : BV:32
=dst_symbol_addr.1
1 : 128896 : BV:32
=dst_symbol_addr.2
1 : 896 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 256876 ) -> 1, ( 256880 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 256895 : BV:32
=commonMEM.nonstack.mem
1 : (( 256876 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 128876 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 256876 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=input.src.llvm-%0
1 : 1 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128896 : BV:32
=input.src.llvm-%arrayidx
1 : 256876 : BV:32
=input.src.llvm-%arrayidx1
1 : 128876 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 896 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 256880 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 256880 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128895 : BV:32
=input.dst.mem
1 : (( 256876 ) -> 1, ( 256880 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155156584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 73
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 128 { -128 } : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1115296009
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 637664236 ) -> 0, ( 637664248 ) -> 0, () -> 128) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 128 { -128 } : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1115296009
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 74
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
684034736
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (( 3227004924 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
684034736
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 75
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
573800760
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4291821564 { -3145732 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=input.dst.mem
1 : (( 4291821564 ) -> 255, ( 4291821567 ) -> 255, ( 4291821565 ) -> 255, ( 4291821566 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
573800760
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 76
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3096831790
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3096831790
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 77
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3096831790
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 210569502273847589745660604660278085522 { -129712864647090873717714002771490125934 } : BV:128
=input.dst.exreg.2.1
1 : 31890515079530123616295650459995413249 : BV:128
=input.dst.exreg.2.2
1 : 105284751176537876129962471126911017929 : BV:128
=input.dst.exreg.2.3
1 : 105284751176537876129962471126911017929 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664252 ) -> 2, ( 637664244 ) -> 98, ( 637664250 ) -> 155, ( 637664254 ) -> 106, ( 637664253 ) -> 54, ( 637664247 ) -> 254, ( 637664243 ) -> 47, ( 637664240 ) -> 146, ( 637664245 ) -> 150, ( 637664251 ) -> 207, ( 637664246 ) -> 202, ( 637664249 ) -> 103, ( 637664241 ) -> 199, ( 637664248 ) -> 50, ( 637664242 ) -> 251, ( 637664255 ) -> 158, () -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-%1
1 : 402514889 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 268436460 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 637664236 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%0
1 : 402514889 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=input.src.llvm-%arrayidx
1 : 637664236 : BV:32
=input.src.llvm-%arrayidx1
1 : 268436460 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 637664240 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 805029778 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 637664240 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 637664252 ) -> 2, ( 637664244 ) -> 98, ( 637664250 ) -> 155, ( 637664254 ) -> 106, ( 637664253 ) -> 54, ( 637664247 ) -> 254, ( 637664243 ) -> 47, ( 637664240 ) -> 146, ( 637664245 ) -> 150, ( 637664251 ) -> 207, ( 637664246 ) -> 202, ( 637664249 ) -> 103, ( 637664241 ) -> 199, ( 637664248 ) -> 50, ( 637664242 ) -> 251, ( 637664255 ) -> 158, () -> (RAC: m_multiplier -> 26 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3096831790
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 78
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
877863828
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3437506556 { -857460740 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3437506556 { -857460740 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3707386903 ) -> 255, ( 3707386902 ) -> 255, ( 3707386901 ) -> 255, ( 3707386900 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
877863828
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 79
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 909904 : BV:32
=symbol.2
1 : 90112 : BV:32
=dst_symbol_addr.1
1 : 909904 : BV:32
=dst_symbol_addr.2
1 : 90112 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1037903 : BV:32
=commonMEM.nonstack.mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1060864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 909904 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4293906432 { -1060864 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 90112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 218111 : BV:32
=input.dst.mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
281844238
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 909904 : BV:32
=symbol.2
1 : 90112 : BV:32
=dst_symbol_addr.1
1 : 909904 : BV:32
=dst_symbol_addr.2
1 : 90112 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1037903 : BV:32
=commonMEM.nonstack.mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 1060864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 909904 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4293906432 { -1060864 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 90112 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 218111 : BV:32
=input.dst.mem
1 : (( 909911 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
281844238
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 80
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
685549484
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3437506556 { -857460740 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3437506556 { -857460740 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3464375304 ) -> 255, ( 3464375305 ) -> 255, ( 3464375306 ) -> 255, ( 3464375307 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
685549484
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 81
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2320 : BV:32
=symbol.2
1 : 130592 : BV:32
=dst_symbol_addr.1
1 : 2320 : BV:32
=dst_symbol_addr.2
1 : 130592 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 130319 : BV:32
=commonMEM.nonstack.mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 262144 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2320 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294705152 { -262144 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130592 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 258591 : BV:32
=input.dst.mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2002144529
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 2320 : BV:32
=symbol.2
1 : 130592 : BV:32
=dst_symbol_addr.1
1 : 2320 : BV:32
=dst_symbol_addr.2
1 : 130592 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130319 : BV:32
=commonMEM.nonstack.mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 262144 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2320 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294705152 { -262144 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130592 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 258591 : BV:32
=input.dst.mem
1 : (( 130602 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2002144529
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 82
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1820456432
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3437506556 { -857460740 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=input.src.llvm-mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3437506556 { -857460740 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=input.dst.mem
1 : (( 3707386896 ) -> 255, ( 3707386897 ) -> 255, ( 3707386898 ) -> 255, ( 3707386899 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1820456432
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 83
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1659447024 : BV:32
=symbol.2
1 : 2045379584 : BV:32
=dst_symbol_addr.1
1 : 1659447024 : BV:32
=dst_symbol_addr.2
1 : 2045379584 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294905852 { -61444 } : BV:32
=input.src.llvm-mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1659575023 : BV:32
=commonMEM.nonstack.mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147479552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1659447024 : BV:32
=memlabel-mem-esp_end
1 : 4294905855 { -61441 } : BV:32
=stack.size
1 : 2147426304 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2045379584 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2045507583 : BV:32
=input.dst.mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1984459928
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294905852 { -61444 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 1659447024 : BV:32
=symbol.2
1 : 2045379584 : BV:32
=dst_symbol_addr.1
1 : 1659447024 : BV:32
=dst_symbol_addr.2
1 : 2045379584 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294905852 { -61444 } : BV:32
=input.src.llvm-mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294905852 { -61444 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1659575023 : BV:32
=commonMEM.nonstack.mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 2147479552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1659447024 : BV:32
=memlabel-mem-esp_end
1 : 4294905855 { -61441 } : BV:32
=stack.size
1 : 2147426304 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2045379584 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2045507583 : BV:32
=input.dst.mem
1 : (( 1659447026 ) -> 0, ( 2045379584 ) -> 0, ( 1659447024 ) -> 0, ( 1659447027 ) -> 0, ( 2045379587 ) -> 0, ( 2045379585 ) -> 0, ( 2045379586 ) -> 0, ( 4294905852 ) -> 0, ( 4294905855 ) -> 0, ( 4294905854 ) -> 0, ( 4294905853 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1984459928
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 84
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3565038592 { -729928704 } : BV:32
=symbol.2
1 : 3573169168 { -721798128 } : BV:32
=dst_symbol_addr.1
1 : 3565038592 { -729928704 } : BV:32
=dst_symbol_addr.2
1 : 3573169168 { -721798128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3303288828 { -991678468 } : BV:32
=input.src.llvm-mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3565166591 { -729800705 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 393216 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3565038592 { -729928704 } : BV:32
=memlabel-mem-esp_end
1 : 3303288831 { -991678465 } : BV:32
=stack.size
1 : 3302895616 { -992071680 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3573169168 { -721798128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3573297167 { -721670129 } : BV:32
=input.dst.mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
682048425
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3303288828 { -991678468 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3565038592 { -729928704 } : BV:32
=symbol.2
1 : 3573169168 { -721798128 } : BV:32
=dst_symbol_addr.1
1 : 3565038592 { -729928704 } : BV:32
=dst_symbol_addr.2
1 : 3573169168 { -721798128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3303288828 { -991678468 } : BV:32
=input.src.llvm-mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3303288828 { -991678468 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3565166591 { -729800705 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 393216 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3565038592 { -729928704 } : BV:32
=memlabel-mem-esp_end
1 : 3303288831 { -991678465 } : BV:32
=stack.size
1 : 3302895616 { -992071680 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3573169168 { -721798128 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3573297167 { -721670129 } : BV:32
=input.dst.mem
1 : (( 3573297160 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
682048425
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 85
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 128736 : BV:32
=symbol.2
1 : 496 : BV:32
=dst_symbol_addr.1
1 : 128736 : BV:32
=dst_symbol_addr.2
1 : 496 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 256735 : BV:32
=commonMEM.nonstack.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128736 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 496 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128495 : BV:32
=input.dst.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1119129706
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 128736 : BV:32
=symbol.2
1 : 496 : BV:32
=dst_symbol_addr.1
1 : 128736 : BV:32
=dst_symbol_addr.2
1 : 496 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 256735 : BV:32
=commonMEM.nonstack.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128736 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 496 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 128495 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1119129706
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 86
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 128736 : BV:32
=symbol.2
1 : 496 : BV:32
=dst_symbol_addr.1
1 : 128736 : BV:32
=dst_symbol_addr.2
1 : 496 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 256735 : BV:32
=commonMEM.nonstack.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128736 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 496 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128495 : BV:32
=input.dst.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1119129706
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 53377626183676621719745036459885209620 : BV:128
=input.dst.exreg.2.1
1 : 26688811507275060574585766359063598100 : BV:128
=input.dst.exreg.2.2
1 : 26688813091838310859872518229942604820 : BV:128
=input.dst.exreg.2.3
1 : 26688813091838310859872518229942604800 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 128736 : BV:32
=symbol.2
1 : 496 : BV:32
=dst_symbol_addr.1
1 : 128736 : BV:32
=dst_symbol_addr.2
1 : 496 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 256729 ) -> 40, ( 128748 ) -> 0, ( 128736 ) -> 0, ( 256735 ) -> 40, ( 128476 ) -> 0, ( 256728 ) -> 40, ( 256731 ) -> 40, ( 256726 ) -> 40, ( 256725 ) -> 40, ( 256732 ) -> 40, ( 256727 ) -> 40, ( 256722 ) -> 40, ( 256723 ) -> 40, ( 256721 ) -> 40, ( 256734 ) -> 40, ( 256724 ) -> 40, ( 256730 ) -> 40, ( 256733 ) -> 40, () -> 20) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 256735 : BV:32
=commonMEM.nonstack.mem
1 : (( 128748 ) -> 0, ( 128736 ) -> 0, ( 128476 ) -> 0, () -> 20) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 336860160 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 128476 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 256716 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=input.src.llvm-%0
1 : 336860180 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 128736 : BV:32
=input.src.llvm-%arrayidx
1 : 256716 : BV:32
=input.src.llvm-%arrayidx1
1 : 128476 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 496 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 256720 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 673720340 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 256720 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 128495 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 256729 ) -> 40, ( 128748 ) -> 0, ( 128736 ) -> 0, ( 256735 ) -> 40, ( 128476 ) -> 0, ( 256728 ) -> 40, ( 256731 ) -> 40, ( 256726 ) -> 40, ( 256725 ) -> 40, ( 256732 ) -> 40, ( 256727 ) -> 40, ( 256722 ) -> 40, ( 256723 ) -> 40, ( 256721 ) -> 40, ( 256734 ) -> 40, ( 256724 ) -> 40, ( 256730 ) -> 40, ( 256733 ) -> 40, () -> 20) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1119129706
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 87
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4293909664 { -1057632 } : BV:32
=symbol.2
1 : 4294705152 { -262144 } : BV:32
=dst_symbol_addr.1
1 : 4293909664 { -1057632 } : BV:32
=dst_symbol_addr.2
1 : 4294705152 { -262144 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4293521404 { -1445892 } : BV:32
=input.src.llvm-mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294037663 { -929633 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 155648 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293909664 { -1057632 } : BV:32
=memlabel-mem-esp_end
1 : 4293521407 { -1445889 } : BV:32
=stack.size
1 : 4293365760 { -1601536 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294705152 { -262144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294833151 { -134145 } : BV:32
=input.dst.mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1287087586
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4293521404 { -1445892 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 4293909664 { -1057632 } : BV:32
=symbol.2
1 : 4294705152 { -262144 } : BV:32
=dst_symbol_addr.1
1 : 4293909664 { -1057632 } : BV:32
=dst_symbol_addr.2
1 : 4294705152 { -262144 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4293521404 { -1445892 } : BV:32
=input.src.llvm-mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4293521404 { -1445892 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294037663 { -929633 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 155648 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293909664 { -1057632 } : BV:32
=memlabel-mem-esp_end
1 : 4293521407 { -1445889 } : BV:32
=stack.size
1 : 4293365760 { -1601536 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294705152 { -262144 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4294833151 { -134145 } : BV:32
=input.dst.mem
1 : (( 4294705160 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1287087586
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 88
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
236300691
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236314136 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
236300691
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 89
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1449277843
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664244 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1449277843
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 90
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 26791888 : BV:32
=symbol.2
1 : 16656832 : BV:32
=dst_symbol_addr.1
1 : 26791888 : BV:32
=dst_symbol_addr.2
1 : 16656832 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 26919887 : BV:32
=commonMEM.nonstack.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 134221824 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26791888 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4160745472 { -134221824 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 16656832 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 16784831 : BV:32
=input.dst.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2088207128
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 26791888 : BV:32
=symbol.2
1 : 16656832 : BV:32
=dst_symbol_addr.1
1 : 26791888 : BV:32
=dst_symbol_addr.2
1 : 16656832 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 26919887 : BV:32
=commonMEM.nonstack.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 134221824 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26791888 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4160745472 { -134221824 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 16656832 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 16784831 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2088207128
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 91
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 26791888 : BV:32
=symbol.2
1 : 16656832 : BV:32
=dst_symbol_addr.1
1 : 26791888 : BV:32
=dst_symbol_addr.2
1 : 16656832 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 26919887 : BV:32
=commonMEM.nonstack.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 134221824 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26791888 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4160745472 { -134221824 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 16656832 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 16784831 : BV:32
=input.dst.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2088207128
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 88073083203066425228836755726395392578 : BV:128
=input.dst.exreg.2.1
1 : 44036541601533212918789654937671377185 : BV:128
=input.dst.exreg.2.2
1 : 44036541601533212918789655079405297953 : BV:128
=input.dst.exreg.2.3
1 : 44036541601533212310047100646990094625 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 26791888 : BV:32
=symbol.2
1 : 16656832 : BV:32
=dst_symbol_addr.1
1 : 26791888 : BV:32
=dst_symbol_addr.2
1 : 16656832 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 26919882 ) -> 66, ( 26919883 ) -> 66, ( 26919878 ) -> 66, ( 26919879 ) -> 66, ( 26919877 ) -> 66, ( 26791888 ) -> 0, ( 26919881 ) -> 66, ( 26919876 ) -> 66, ( 26919872 ) -> 66, ( 26919873 ) -> 66, ( 16784820 ) -> 0, ( 26919874 ) -> 66, ( 26919875 ) -> 66, ( 26919887 ) -> 66, ( 26791900 ) -> 0, ( 26919885 ) -> 66, ( 26919884 ) -> 66, ( 26919886 ) -> 66, () -> 33) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 26919887 : BV:32
=commonMEM.nonstack.mem
1 : (( 26791888 ) -> 0, ( 16784820 ) -> 0, ( 26791900 ) -> 0, () -> 33) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 555819297 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 16784812 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 26919868 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 134221824 : BV:32
=input.src.llvm-%0
1 : 555819297 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26791888 : BV:32
=input.src.llvm-%arrayidx
1 : 26919868 : BV:32
=input.src.llvm-%arrayidx1
1 : 16784812 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 4160745472 { -134221824 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 16656832 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 26919872 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 1111638594 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 26919872 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 16784831 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 26919882 ) -> 66, ( 26919883 ) -> 66, ( 26919878 ) -> 66, ( 26919879 ) -> 66, ( 26919877 ) -> 66, ( 26791888 ) -> 0, ( 26919881 ) -> 66, ( 26919876 ) -> 66, ( 26919872 ) -> 66, ( 26919873 ) -> 66, ( 16784820 ) -> 0, ( 26919874 ) -> 66, ( 26919875 ) -> 66, ( 26919887 ) -> 66, ( 26791900 ) -> 0, ( 26919885 ) -> 66, ( 26919884 ) -> 66, ( 26919886 ) -> 66, () -> 33) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2088207128
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 92
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4169018368 { -125948928 } : BV:32
=symbol.2
1 : 4248714256 { -46253040 } : BV:32
=dst_symbol_addr.1
1 : 4169018368 { -125948928 } : BV:32
=dst_symbol_addr.2
1 : 4248714256 { -46253040 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3846189052 { -448778244 } : BV:32
=input.src.llvm-mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4169146367 { -125820929 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1023803392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4169018368 { -125948928 } : BV:32
=memlabel-mem-esp_end
1 : 3846189055 { -448778241 } : BV:32
=stack.size
1 : 2822385664 { -1472581632 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4248714256 { -46253040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4248842255 { -46125041 } : BV:32
=input.dst.mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2099898397
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3846189052 { -448778244 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 4169018368 { -125948928 } : BV:32
=symbol.2
1 : 4248714256 { -46253040 } : BV:32
=dst_symbol_addr.1
1 : 4169018368 { -125948928 } : BV:32
=dst_symbol_addr.2
1 : 4248714256 { -46253040 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3846189052 { -448778244 } : BV:32
=input.src.llvm-mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3846189052 { -448778244 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4169146367 { -125820929 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 1023803392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4169018368 { -125948928 } : BV:32
=memlabel-mem-esp_end
1 : 3846189055 { -448778241 } : BV:32
=stack.size
1 : 2822385664 { -1472581632 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4248714256 { -46253040 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4248842255 { -46125041 } : BV:32
=input.dst.mem
1 : (( 4248842244 ) -> 1, ( 4169018380 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2099898397
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 93
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
937010165
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 637664240 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
937010165
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 94
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 74992 : BV:32
=symbol.2
1 : 4294706272 { -261024 } : BV:32
=dst_symbol_addr.1
1 : 74992 : BV:32
=dst_symbol_addr.2
1 : 4294706272 { -261024 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294655996 { -311300 } : BV:32
=input.src.llvm-mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 202991 : BV:32
=commonMEM.nonstack.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 208896 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 74992 : BV:32
=memlabel-mem-esp_end
1 : 4294655999 { -311297 } : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294706272 { -261024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294834271 { -133025 } : BV:32
=input.dst.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
701956813
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294655996 { -311300 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 74992 : BV:32
=symbol.2
1 : 4294706272 { -261024 } : BV:32
=dst_symbol_addr.1
1 : 74992 : BV:32
=dst_symbol_addr.2
1 : 4294706272 { -261024 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294655996 { -311300 } : BV:32
=input.src.llvm-mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294655996 { -311300 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 202991 : BV:32
=commonMEM.nonstack.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 208896 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 74992 : BV:32
=memlabel-mem-esp_end
1 : 4294655999 { -311297 } : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294706272 { -261024 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4294834271 { -133025 } : BV:32
=input.dst.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, ( 4294655997 ) -> 0, ( 4294655999 ) -> 0, ( 4294655998 ) -> 0, ( 4294655996 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
701956813
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 95
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 74992 : BV:32
=symbol.2
1 : 4294706272 { -261024 } : BV:32
=dst_symbol_addr.1
1 : 74992 : BV:32
=dst_symbol_addr.2
1 : 4294706272 { -261024 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294655996 { -311300 } : BV:32
=input.src.llvm-mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 202991 : BV:32
=commonMEM.nonstack.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 208896 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 74992 : BV:32
=memlabel-mem-esp_end
1 : 4294655999 { -311297 } : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294706272 { -261024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294834271 { -133025 } : BV:32
=input.dst.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
701956813
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294655996 { -311300 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 5337762618367662171974503637398586372 : BV:128
=input.dst.exreg.2.1
1 : 2668881309183831085987251822994260482 : BV:128
=input.dst.exreg.2.2
1 : 2668881309183831085987251814404325890 : BV:128
=input.dst.exreg.2.3
1 : 2668881309183831085987251822994260482 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 74992 : BV:32
=symbol.2
1 : 4294706272 { -261024 } : BV:32
=dst_symbol_addr.1
1 : 74992 : BV:32
=dst_symbol_addr.2
1 : 4294706272 { -261024 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294655996 { -311300 } : BV:32
=input.src.llvm-mem
1 : (( 74996 ) -> 0, ( 202984 ) -> 4, ( 202986 ) -> 4, ( 202976 ) -> 4, ( 202977 ) -> 4, ( 202978 ) -> 4, ( 202979 ) -> 4, ( 202985 ) -> 4, ( 202991 ) -> 4, ( 202987 ) -> 4, ( 202983 ) -> 4, ( 202981 ) -> 4, ( 202982 ) -> 4, ( 202989 ) -> 4, ( 202988 ) -> 4, ( 202990 ) -> 4, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294655996 { -311300 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 202991 : BV:32
=commonMEM.nonstack.mem
1 : (( 74996 ) -> 0, ( 202976 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 33686018 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4294834252 { -133044 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 202972 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 208896 : BV:32
=input.src.llvm-%0
1 : 33686018 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 74992 : BV:32
=input.src.llvm-%arrayidx
1 : 202972 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294834252 { -133044 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294655999 { -311297 } : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294706272 { -261024 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 202976 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 67372036 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 202976 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294834271 { -133025 } : BV:32
=input.dst.mem
1 : (( 74996 ) -> 0, ( 202984 ) -> 4, ( 202986 ) -> 4, ( 202976 ) -> 4, ( 4294655997 ) -> 0, ( 4294655999 ) -> 0, ( 202977 ) -> 4, ( 202978 ) -> 4, ( 202979 ) -> 4, ( 4294655998 ) -> 0, ( 202985 ) -> 4, ( 202991 ) -> 4, ( 202987 ) -> 4, ( 4294655996 ) -> 0, ( 202983 ) -> 4, ( 202981 ) -> 4, ( 202982 ) -> 4, ( 202989 ) -> 4, ( 202988 ) -> 4, ( 202990 ) -> 4, () -> 2) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
701956813
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 96
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3228445696 { -1066521600 } : BV:32
=symbol.2
1 : 3233692688 { -1061274608 } : BV:32
=dst_symbol_addr.1
1 : 3228445696 { -1066521600 } : BV:32
=dst_symbol_addr.2
1 : 3233692688 { -1061274608 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3228053500 { -1066913796 } : BV:32
=input.src.llvm-mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3228573695 { -1066393601 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 11796480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3228445696 { -1066521600 } : BV:32
=memlabel-mem-esp_end
1 : 3228053503 { -1066913793 } : BV:32
=stack.size
1 : 3216257024 { -1078710272 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3233692688 { -1061274608 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3233820687 { -1061146609 } : BV:32
=input.dst.mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
42063073
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3228053500 { -1066913796 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3228445696 { -1066521600 } : BV:32
=symbol.2
1 : 3233692688 { -1061274608 } : BV:32
=dst_symbol_addr.1
1 : 3228445696 { -1066521600 } : BV:32
=dst_symbol_addr.2
1 : 3233692688 { -1061274608 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3228053500 { -1066913796 } : BV:32
=input.src.llvm-mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3228053500 { -1066913796 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3228573695 { -1066393601 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 11796480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3228445696 { -1066521600 } : BV:32
=memlabel-mem-esp_end
1 : 3228053503 { -1066913793 } : BV:32
=stack.size
1 : 3216257024 { -1078710272 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3233692688 { -1061274608 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3233820687 { -1061146609 } : BV:32
=input.dst.mem
1 : (( 3233820668 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
42063073
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 97
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
708613301
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
708613301
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 98
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
763343750
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
763343750
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 99
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
433159495
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
433159495
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 100
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
433159495
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127964 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 4294967296 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 4294967296 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 1, ( 3222806512 ) -> 0, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806512 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31994 : BV:32
=input.src.llvm-%i.0
1 : 31994 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236442108 { -1058525188 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222806508 { -1072160788 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=input.src.llvm-%arrayidx
1 : 3222806508 { -1072160788 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236442108 { -1058525188 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3222806512 { -1072160784 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add2
1 : 31996 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31994 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222806512 { -1072160784 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 1, ( 3222806512 ) -> 0, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
433159495
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 101
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
925213404
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
925213404
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 102
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1712059803
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=commonMEM.nonstack.mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=input.dst.mem
1 : (( 268436460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1712059803
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 103
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
614371690
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
614371690
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 104
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
369772020
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.dst.mem
1 : (( 3236442112 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
369772020
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 105
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1060507888
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1060507888
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 106
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
880523447
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.13 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127980 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127980 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
880523447
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 107
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65548 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1615929340 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1616905744 : BV:32
=symbol.2
1 : 4287253504 { -7713792 } : BV:32
=dst_symbol_addr.1
1 : 1616905744 : BV:32
=dst_symbol_addr.2
1 : 4287253504 { -7713792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1615929340 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1615929340 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1617033743 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 16390 : BV:32
=input.src.llvm-%i.0
1 : 16390 : BV:32
=memlabel-mem-esp_begin
1 : 1077936128 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1616905744 : BV:32
=memlabel-mem-esp_end
1 : 1615929343 : BV:32
=stack.size
1 : 537993216 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287253504 { -7713792 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4287381503 { -7585793 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1785280947
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65532 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1615929340 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1616905744 : BV:32
=symbol.2
1 : 4287253504 { -7713792 } : BV:32
=dst_symbol_addr.1
1 : 1616905744 : BV:32
=dst_symbol_addr.2
1 : 4287253504 { -7713792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1615929340 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1615929340 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1617033743 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16386 : BV:32
=input.src.llvm-%i.0
1 : 16386 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4287319052 { -7648244 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 1616971292 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-esp_begin
1 : 1077936128 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1616905744 : BV:32
=input.src.llvm-%arrayidx
1 : 1616971292 : BV:32
=input.src.llvm-%arrayidx1
1 : 4287319052 { -7648244 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1615929343 : BV:32
=stack.size
1 : 537993216 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287253504 { -7713792 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 65552 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 1616971296 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%add2
1 : 16388 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 16386 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 1616971296 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 65552 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4287381503 { -7585793 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1785280947
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 108
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65548 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1615929340 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1616905744 : BV:32
=symbol.2
1 : 4287253504 { -7713792 } : BV:32
=dst_symbol_addr.1
1 : 1616905744 : BV:32
=dst_symbol_addr.2
1 : 4287253504 { -7713792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1615929340 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1615929340 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1617033743 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 16390 : BV:32
=input.src.llvm-%i.0
1 : 16390 : BV:32
=memlabel-mem-esp_begin
1 : 1077936128 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1616905744 : BV:32
=memlabel-mem-esp_end
1 : 1615929343 : BV:32
=stack.size
1 : 537993216 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287253504 { -7713792 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4287381503 { -7585793 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1785280947
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65516 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1615929340 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1616905744 : BV:32
=symbol.2
1 : 4287253504 { -7713792 } : BV:32
=dst_symbol_addr.1
1 : 1616905744 : BV:32
=dst_symbol_addr.2
1 : 4287253504 { -7713792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1615929340 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1615929340 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1617033743 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16382 : BV:32
=input.src.llvm-%i.0
1 : 16382 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4287319036 { -7648260 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 65532 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 1616971276 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 65532 : BV:32
=memlabel-mem-esp_begin
1 : 1077936128 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1616905744 : BV:32
=input.src.llvm-%arrayidx
1 : 1616971276 : BV:32
=input.src.llvm-%arrayidx1
1 : 4287319036 { -7648260 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1615929343 : BV:32
=stack.size
1 : 537993216 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287253504 { -7713792 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 1616971280 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%add2
1 : 16384 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 16382 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 1616971280 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 65536 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4287381503 { -7585793 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1785280947
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 109
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32780 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 133169148 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 133170176 : BV:32
=symbol.2
1 : 133893120 : BV:32
=dst_symbol_addr.1
1 : 133170176 : BV:32
=dst_symbol_addr.2
1 : 133893120 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 133169148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 133169148 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 133298175 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 8198 : BV:32
=input.src.llvm-%i.0
1 : 8198 : BV:32
=memlabel-mem-esp_begin
1 : 99614720 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 133170176 : BV:32
=memlabel-mem-esp_end
1 : 133169151 : BV:32
=stack.size
1 : 33554432 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 133893120 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 134021119 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1051239531
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32764 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 133169148 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 133170176 : BV:32
=symbol.2
1 : 133893120 : BV:32
=dst_symbol_addr.1
1 : 133170176 : BV:32
=dst_symbol_addr.2
1 : 133893120 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 133169148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 133169148 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 133298175 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8194 : BV:32
=input.src.llvm-%i.0
1 : 8194 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 133925900 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 133202956 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-esp_begin
1 : 99614720 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 133170176 : BV:32
=input.src.llvm-%arrayidx
1 : 133202956 : BV:32
=input.src.llvm-%arrayidx1
1 : 133925900 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 133169151 : BV:32
=stack.size
1 : 33554432 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 133893120 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32784 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 133202960 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%add2
1 : 8196 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 8194 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 133202960 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32784 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 134021119 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1051239531
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 110
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32780 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 133169148 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 133170176 : BV:32
=symbol.2
1 : 133893120 : BV:32
=dst_symbol_addr.1
1 : 133170176 : BV:32
=dst_symbol_addr.2
1 : 133893120 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 133169148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 133169148 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 133298175 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 8198 : BV:32
=input.src.llvm-%i.0
1 : 8198 : BV:32
=memlabel-mem-esp_begin
1 : 99614720 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 133170176 : BV:32
=memlabel-mem-esp_end
1 : 133169151 : BV:32
=stack.size
1 : 33554432 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 133893120 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 134021119 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1051239531
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32748 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 133169148 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 133170176 : BV:32
=symbol.2
1 : 133893120 : BV:32
=dst_symbol_addr.1
1 : 133170176 : BV:32
=dst_symbol_addr.2
1 : 133893120 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 133169148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 133169148 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 133298175 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8190 : BV:32
=input.src.llvm-%i.0
1 : 8190 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 133925884 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 32764 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 133202940 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 32764 : BV:32
=memlabel-mem-esp_begin
1 : 99614720 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 133170176 : BV:32
=input.src.llvm-%arrayidx
1 : 133202940 : BV:32
=input.src.llvm-%arrayidx1
1 : 133925884 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 133169151 : BV:32
=stack.size
1 : 33554432 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 133893120 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 133202944 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%add2
1 : 8192 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 8190 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 133202944 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32768 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 134021119 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1051239531
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 111
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16396 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 5234684 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 6163968 : BV:32
=symbol.2
1 : 1879051264 : BV:32
=dst_symbol_addr.1
1 : 6163968 : BV:32
=dst_symbol_addr.2
1 : 1879051264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 5234684 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 5234684 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 6291967 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 4102 : BV:32
=input.src.llvm-%i.0
1 : 4102 : BV:32
=memlabel-mem-esp_begin
1 : 4128768 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 6163968 : BV:32
=memlabel-mem-esp_end
1 : 5234687 : BV:32
=stack.size
1 : 1105920 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1879051264 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1879179263 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1645255251
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16380 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 5234684 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 6163968 : BV:32
=symbol.2
1 : 1879051264 : BV:32
=dst_symbol_addr.1
1 : 6163968 : BV:32
=dst_symbol_addr.2
1 : 1879051264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 5234684 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 5234684 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 6291967 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4098 : BV:32
=input.src.llvm-%i.0
1 : 4098 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1879067660 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 6180364 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-esp_begin
1 : 4128768 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 6163968 : BV:32
=input.src.llvm-%arrayidx
1 : 6180364 : BV:32
=input.src.llvm-%arrayidx1
1 : 1879067660 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 5234687 : BV:32
=stack.size
1 : 1105920 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1879051264 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 16400 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 6180368 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%add2
1 : 4100 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 4098 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 6180368 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 16400 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1879179263 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1645255251
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 112
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16396 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 5234684 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 6163968 : BV:32
=symbol.2
1 : 1879051264 : BV:32
=dst_symbol_addr.1
1 : 6163968 : BV:32
=dst_symbol_addr.2
1 : 1879051264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 5234684 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 5234684 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 6291967 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 4102 : BV:32
=input.src.llvm-%i.0
1 : 4102 : BV:32
=memlabel-mem-esp_begin
1 : 4128768 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 6163968 : BV:32
=memlabel-mem-esp_end
1 : 5234687 : BV:32
=stack.size
1 : 1105920 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1879051264 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1879179263 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1645255251
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16364 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 5234684 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 6163968 : BV:32
=symbol.2
1 : 1879051264 : BV:32
=dst_symbol_addr.1
1 : 6163968 : BV:32
=dst_symbol_addr.2
1 : 1879051264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 5234684 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 5234684 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 6291967 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4094 : BV:32
=input.src.llvm-%i.0
1 : 4094 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1879067644 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 16380 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 6180348 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 16380 : BV:32
=memlabel-mem-esp_begin
1 : 4128768 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 6163968 : BV:32
=input.src.llvm-%arrayidx
1 : 6180348 : BV:32
=input.src.llvm-%arrayidx1
1 : 1879067644 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 5234687 : BV:32
=stack.size
1 : 1105920 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1879051264 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 6180352 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%add2
1 : 4096 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 4094 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 6180352 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 16384 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1879179263 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1645255251
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 113
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8204 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 158236668 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 191774144 : BV:32
=symbol.2
1 : 1801849856 : BV:32
=dst_symbol_addr.1
1 : 191774144 : BV:32
=dst_symbol_addr.2
1 : 1801849856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 158236668 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 158236668 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 191902143 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 2054 : BV:32
=input.src.llvm-%i.0
1 : 2054 : BV:32
=memlabel-mem-esp_begin
1 : 158212096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 191774144 : BV:32
=memlabel-mem-esp_end
1 : 158236671 : BV:32
=stack.size
1 : 24576 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1801849856 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1801977855 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
600434358
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8188 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 158236668 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 191774144 : BV:32
=symbol.2
1 : 1801849856 : BV:32
=dst_symbol_addr.1
1 : 191774144 : BV:32
=dst_symbol_addr.2
1 : 1801849856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 158236668 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 158236668 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 191902143 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2050 : BV:32
=input.src.llvm-%i.0
1 : 2050 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1801858060 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 191782348 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-esp_begin
1 : 158212096 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 191774144 : BV:32
=input.src.llvm-%arrayidx
1 : 191782348 : BV:32
=input.src.llvm-%arrayidx1
1 : 1801858060 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 158236671 : BV:32
=stack.size
1 : 24576 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1801849856 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 8208 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 191782352 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%add2
1 : 2052 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2050 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 191782352 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 8208 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1801977855 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
600434358
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 114
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8204 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 158236668 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 191774144 : BV:32
=symbol.2
1 : 1801849856 : BV:32
=dst_symbol_addr.1
1 : 191774144 : BV:32
=dst_symbol_addr.2
1 : 1801849856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 158236668 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 158236668 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 191902143 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 2054 : BV:32
=input.src.llvm-%i.0
1 : 2054 : BV:32
=memlabel-mem-esp_begin
1 : 158212096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 191774144 : BV:32
=memlabel-mem-esp_end
1 : 158236671 : BV:32
=stack.size
1 : 24576 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1801849856 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1801977855 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
600434358
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8172 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 158236668 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 191774144 : BV:32
=symbol.2
1 : 1801849856 : BV:32
=dst_symbol_addr.1
1 : 191774144 : BV:32
=dst_symbol_addr.2
1 : 1801849856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 158236668 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 158236668 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 191902143 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2046 : BV:32
=input.src.llvm-%i.0
1 : 2046 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1801858044 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 8188 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 191782332 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 8188 : BV:32
=memlabel-mem-esp_begin
1 : 158212096 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 191774144 : BV:32
=input.src.llvm-%arrayidx
1 : 191782332 : BV:32
=input.src.llvm-%arrayidx1
1 : 1801858044 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 158236671 : BV:32
=stack.size
1 : 24576 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1801849856 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 191782336 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%add2
1 : 2048 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2046 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 191782336 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 8192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1801977855 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
600434358
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 115
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4108 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 182431740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 201106448 : BV:32
=symbol.2
1 : 2147388416 : BV:32
=dst_symbol_addr.1
1 : 201106448 : BV:32
=dst_symbol_addr.2
1 : 2147388416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 182431740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 182431740 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 201234447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 1030 : BV:32
=input.src.llvm-%i.0
1 : 1030 : BV:32
=memlabel-mem-esp_begin
1 : 1835008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 201106448 : BV:32
=memlabel-mem-esp_end
1 : 182431743 : BV:32
=stack.size
1 : 180596736 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147388416 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147516415 { -2147450881 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
994703850
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4092 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 182431740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 201106448 : BV:32
=symbol.2
1 : 2147388416 : BV:32
=dst_symbol_addr.1
1 : 201106448 : BV:32
=dst_symbol_addr.2
1 : 2147388416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 182431740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 182431740 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 201234447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1026 : BV:32
=input.src.llvm-%i.0
1 : 1026 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 2147392524 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 201110556 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-esp_begin
1 : 1835008 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 201106448 : BV:32
=input.src.llvm-%arrayidx
1 : 201110556 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147392524 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 182431743 : BV:32
=stack.size
1 : 180596736 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147388416 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4112 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 201110560 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%add2
1 : 1028 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 1026 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 201110560 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147516415 { -2147450881 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
994703850
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 116
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4108 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 182431740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 201106448 : BV:32
=symbol.2
1 : 2147388416 : BV:32
=dst_symbol_addr.1
1 : 201106448 : BV:32
=dst_symbol_addr.2
1 : 2147388416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 182431740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 182431740 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 201234447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 1030 : BV:32
=input.src.llvm-%i.0
1 : 1030 : BV:32
=memlabel-mem-esp_begin
1 : 1835008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 201106448 : BV:32
=memlabel-mem-esp_end
1 : 182431743 : BV:32
=stack.size
1 : 180596736 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147388416 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147516415 { -2147450881 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
994703850
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4076 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 182431740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 201106448 : BV:32
=symbol.2
1 : 2147388416 : BV:32
=dst_symbol_addr.1
1 : 201106448 : BV:32
=dst_symbol_addr.2
1 : 2147388416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 182431740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 182431740 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 201234447 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1022 : BV:32
=input.src.llvm-%i.0
1 : 1022 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 2147392508 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 4092 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 201110540 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 4092 : BV:32
=memlabel-mem-esp_begin
1 : 1835008 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 201106448 : BV:32
=input.src.llvm-%arrayidx
1 : 201110540 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147392508 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 182431743 : BV:32
=stack.size
1 : 180596736 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147388416 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 201110544 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%add2
1 : 1024 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 1022 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 201110544 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147516415 { -2147450881 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
994703850
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 117
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2060 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 886149116 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1069548320 : BV:32
=symbol.2
1 : 4287629296 { -7338000 } : BV:32
=dst_symbol_addr.1
1 : 1069548320 : BV:32
=dst_symbol_addr.2
1 : 4287629296 { -7338000 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 886149116 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 886149116 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1069676319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 518 : BV:32
=input.src.llvm-%i.0
1 : 518 : BV:32
=memlabel-mem-esp_begin
1 : 768606208 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1069548320 : BV:32
=memlabel-mem-esp_end
1 : 886149119 : BV:32
=stack.size
1 : 117542912 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287629296 { -7338000 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4287757295 { -7210001 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1668025861
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 117 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2044 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 886149116 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1069548320 : BV:32
=symbol.2
1 : 4287629296 { -7338000 } : BV:32
=dst_symbol_addr.1
1 : 1069548320 : BV:32
=dst_symbol_addr.2
1 : 4287629296 { -7338000 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 886149116 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 886149116 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1069676319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 514 : BV:32
=input.src.llvm-%i.0
1 : 514 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4287631356 { -7335940 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 1069550380 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-esp_begin
1 : 768606208 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1069548320 : BV:32
=input.src.llvm-%arrayidx
1 : 1069550380 : BV:32
=input.src.llvm-%arrayidx1
1 : 4287631356 { -7335940 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 886149119 : BV:32
=stack.size
1 : 117542912 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287629296 { -7338000 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 2064 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 1069550384 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%add2
1 : 516 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 514 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 1069550384 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 2064 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4287757295 { -7210001 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1668025861
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 118
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2060 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 886149116 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1069548320 : BV:32
=symbol.2
1 : 4287629296 { -7338000 } : BV:32
=dst_symbol_addr.1
1 : 1069548320 : BV:32
=dst_symbol_addr.2
1 : 4287629296 { -7338000 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 886149116 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 886149116 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1069676319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 518 : BV:32
=input.src.llvm-%i.0
1 : 518 : BV:32
=memlabel-mem-esp_begin
1 : 768606208 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1069548320 : BV:32
=memlabel-mem-esp_end
1 : 886149119 : BV:32
=stack.size
1 : 117542912 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287629296 { -7338000 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4287757295 { -7210001 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1668025861
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 118 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2028 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 886149116 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1069548320 : BV:32
=symbol.2
1 : 4287629296 { -7338000 } : BV:32
=dst_symbol_addr.1
1 : 1069548320 : BV:32
=dst_symbol_addr.2
1 : 4287629296 { -7338000 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 886149116 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 886149116 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1069676319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 510 : BV:32
=input.src.llvm-%i.0
1 : 510 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4287631340 { -7335956 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 2044 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 1069550364 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 2044 : BV:32
=memlabel-mem-esp_begin
1 : 768606208 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1069548320 : BV:32
=input.src.llvm-%arrayidx
1 : 1069550364 : BV:32
=input.src.llvm-%arrayidx1
1 : 4287631340 { -7335956 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 886149119 : BV:32
=stack.size
1 : 117542912 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4287629296 { -7338000 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 1069550368 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%add2
1 : 512 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 510 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 1069550368 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 2048 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4287757295 { -7210001 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1668025861
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 119
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1036 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 801071100 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073568832 : BV:32
=symbol.2
1 : 4286582768 { -8384528 } : BV:32
=dst_symbol_addr.1
1 : 1073568832 : BV:32
=dst_symbol_addr.2
1 : 4286582768 { -8384528 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 801071100 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 801071100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073696831 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 262 : BV:32
=input.src.llvm-%i.0
1 : 262 : BV:32
=memlabel-mem-esp_begin
1 : 536608768 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073568832 : BV:32
=memlabel-mem-esp_end
1 : 801071103 : BV:32
=stack.size
1 : 264462336 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286582768 { -8384528 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4286710767 { -8256529 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
301876130
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 119 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1020 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 801071100 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1073568832 : BV:32
=symbol.2
1 : 4286582768 { -8384528 } : BV:32
=dst_symbol_addr.1
1 : 1073568832 : BV:32
=dst_symbol_addr.2
1 : 4286582768 { -8384528 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 801071100 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 801071100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073696831 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 258 : BV:32
=input.src.llvm-%i.0
1 : 258 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4286583804 { -8383492 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 1073569868 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-esp_begin
1 : 536608768 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073568832 : BV:32
=input.src.llvm-%arrayidx
1 : 1073569868 : BV:32
=input.src.llvm-%arrayidx1
1 : 4286583804 { -8383492 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 801071103 : BV:32
=stack.size
1 : 264462336 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286582768 { -8384528 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 1040 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 1073569872 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%add2
1 : 260 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 258 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 1073569872 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 1040 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4286710767 { -8256529 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
301876130
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 120
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1036 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 801071100 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073568832 : BV:32
=symbol.2
1 : 4286582768 { -8384528 } : BV:32
=dst_symbol_addr.1
1 : 1073568832 : BV:32
=dst_symbol_addr.2
1 : 4286582768 { -8384528 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 801071100 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 801071100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073696831 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 262 : BV:32
=input.src.llvm-%i.0
1 : 262 : BV:32
=memlabel-mem-esp_begin
1 : 536608768 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073568832 : BV:32
=memlabel-mem-esp_end
1 : 801071103 : BV:32
=stack.size
1 : 264462336 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286582768 { -8384528 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4286710767 { -8256529 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
301876130
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 120 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1004 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 801071100 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1073568832 : BV:32
=symbol.2
1 : 4286582768 { -8384528 } : BV:32
=dst_symbol_addr.1
1 : 1073568832 : BV:32
=dst_symbol_addr.2
1 : 4286582768 { -8384528 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 801071100 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 801071100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073696831 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 254 : BV:32
=input.src.llvm-%i.0
1 : 254 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4286583788 { -8383508 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 1020 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 1073569852 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 1020 : BV:32
=memlabel-mem-esp_begin
1 : 536608768 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073568832 : BV:32
=input.src.llvm-%arrayidx
1 : 1073569852 : BV:32
=input.src.llvm-%arrayidx1
1 : 4286583788 { -8383508 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 801071103 : BV:32
=stack.size
1 : 264462336 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286582768 { -8384528 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 1073569856 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%add2
1 : 256 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 254 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 1073569856 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 1024 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4286710767 { -8256529 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
301876130
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 121
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 524 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3220045820 { -1074921476 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3485469632 { -809497664 } : BV:32
=symbol.2
1 : 4293266432 { -1700864 } : BV:32
=dst_symbol_addr.1
1 : 3485469632 { -809497664 } : BV:32
=dst_symbol_addr.2
1 : 4293266432 { -1700864 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3220045820 { -1074921476 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3220045820 { -1074921476 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3485597631 { -809369665 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 134 : BV:32
=input.src.llvm-%i.0
1 : 134 : BV:32
=memlabel-mem-esp_begin
1 : 247476224 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3485469632 { -809497664 } : BV:32
=memlabel-mem-esp_end
1 : 3220045823 { -1074921473 } : BV:32
=stack.size
1 : 2972569600 { -1322397696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293266432 { -1700864 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4293394431 { -1572865 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
791214191
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 121 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 508 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3220045820 { -1074921476 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3485469632 { -809497664 } : BV:32
=symbol.2
1 : 4293266432 { -1700864 } : BV:32
=dst_symbol_addr.1
1 : 3485469632 { -809497664 } : BV:32
=dst_symbol_addr.2
1 : 4293266432 { -1700864 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3220045820 { -1074921476 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3220045820 { -1074921476 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3485597631 { -809369665 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 130 : BV:32
=input.src.llvm-%i.0
1 : 130 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4293266956 { -1700340 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3485470156 { -809497140 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-esp_begin
1 : 247476224 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3485469632 { -809497664 } : BV:32
=input.src.llvm-%arrayidx
1 : 3485470156 { -809497140 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4293266956 { -1700340 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3220045823 { -1074921473 } : BV:32
=stack.size
1 : 2972569600 { -1322397696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293266432 { -1700864 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 528 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3485470160 { -809497136 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%add2
1 : 132 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 130 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3485470160 { -809497136 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 528 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4293394431 { -1572865 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
791214191
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 122
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 524 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3220045820 { -1074921476 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3485469632 { -809497664 } : BV:32
=symbol.2
1 : 4293266432 { -1700864 } : BV:32
=dst_symbol_addr.1
1 : 3485469632 { -809497664 } : BV:32
=dst_symbol_addr.2
1 : 4293266432 { -1700864 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3220045820 { -1074921476 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3220045820 { -1074921476 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3485597631 { -809369665 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 134 : BV:32
=input.src.llvm-%i.0
1 : 134 : BV:32
=memlabel-mem-esp_begin
1 : 247476224 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3485469632 { -809497664 } : BV:32
=memlabel-mem-esp_end
1 : 3220045823 { -1074921473 } : BV:32
=stack.size
1 : 2972569600 { -1322397696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293266432 { -1700864 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 4293394431 { -1572865 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
791214191
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 122 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 492 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3220045820 { -1074921476 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3485469632 { -809497664 } : BV:32
=symbol.2
1 : 4293266432 { -1700864 } : BV:32
=dst_symbol_addr.1
1 : 3485469632 { -809497664 } : BV:32
=dst_symbol_addr.2
1 : 4293266432 { -1700864 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3220045820 { -1074921476 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3220045820 { -1074921476 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3485597631 { -809369665 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 126 : BV:32
=input.src.llvm-%i.0
1 : 126 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4293266940 { -1700356 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 508 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3485470140 { -809497156 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 508 : BV:32
=memlabel-mem-esp_begin
1 : 247476224 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3485469632 { -809497664 } : BV:32
=input.src.llvm-%arrayidx
1 : 3485470140 { -809497156 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4293266940 { -1700356 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3220045823 { -1074921473 } : BV:32
=stack.size
1 : 2972569600 { -1322397696 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293266432 { -1700864 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 3485470144 { -809497152 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%add2
1 : 128 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 126 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3485470144 { -809497152 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4293394431 { -1572865 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
791214191
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 123
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 268 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 236199932 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 251659840 : BV:32
=symbol.2
1 : 2686061568 { -1608905728 } : BV:32
=dst_symbol_addr.1
1 : 251659840 : BV:32
=dst_symbol_addr.2
1 : 2686061568 { -1608905728 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 236199932 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 236199932 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 251787839 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 70 : BV:32
=input.src.llvm-%i.0
1 : 70 : BV:32
=memlabel-mem-esp_begin
1 : 235929600 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 251659840 : BV:32
=memlabel-mem-esp_end
1 : 236199935 : BV:32
=stack.size
1 : 270336 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2686061568 { -1608905728 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2686189567 { -1608777729 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
763697247
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 123 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 252 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 236199932 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 251659840 : BV:32
=symbol.2
1 : 2686061568 { -1608905728 } : BV:32
=dst_symbol_addr.1
1 : 251659840 : BV:32
=dst_symbol_addr.2
1 : 2686061568 { -1608905728 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 236199932 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 236199932 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 251787839 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 66 : BV:32
=input.src.llvm-%i.0
1 : 66 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 2686061836 { -1608905460 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 251660108 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-esp_begin
1 : 235929600 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 251659840 : BV:32
=input.src.llvm-%arrayidx
1 : 251660108 : BV:32
=input.src.llvm-%arrayidx1
1 : 2686061836 { -1608905460 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 236199935 : BV:32
=stack.size
1 : 270336 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2686061568 { -1608905728 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 272 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 251660112 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%add2
1 : 68 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 66 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 251660112 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 272 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2686189567 { -1608777729 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
763697247
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 124
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 268 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 236199932 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 251659840 : BV:32
=symbol.2
1 : 2686061568 { -1608905728 } : BV:32
=dst_symbol_addr.1
1 : 251659840 : BV:32
=dst_symbol_addr.2
1 : 2686061568 { -1608905728 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 236199932 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 236199932 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 251787839 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 70 : BV:32
=input.src.llvm-%i.0
1 : 70 : BV:32
=memlabel-mem-esp_begin
1 : 235929600 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 251659840 : BV:32
=memlabel-mem-esp_end
1 : 236199935 : BV:32
=stack.size
1 : 270336 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2686061568 { -1608905728 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2686189567 { -1608777729 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
763697247
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 124 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 236 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 236199932 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 251659840 : BV:32
=symbol.2
1 : 2686061568 { -1608905728 } : BV:32
=dst_symbol_addr.1
1 : 251659840 : BV:32
=dst_symbol_addr.2
1 : 2686061568 { -1608905728 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 236199932 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 236199932 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 251787839 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 62 : BV:32
=input.src.llvm-%i.0
1 : 62 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 2686061820 { -1608905476 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 252 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 251660092 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 252 : BV:32
=memlabel-mem-esp_begin
1 : 235929600 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 251659840 : BV:32
=input.src.llvm-%arrayidx
1 : 251660092 : BV:32
=input.src.llvm-%arrayidx1
1 : 2686061820 { -1608905476 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 236199935 : BV:32
=stack.size
1 : 270336 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2686061568 { -1608905728 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 251660096 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%add2
1 : 64 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 62 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 251660096 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2686189567 { -1608777729 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
763697247
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 125
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 140 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 519311356 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 535824128 : BV:32
=symbol.2
1 : 1140788224 : BV:32
=dst_symbol_addr.1
1 : 535824128 : BV:32
=dst_symbol_addr.2
1 : 1140788224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 519311356 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 519311356 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 535952127 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 38 : BV:32
=input.src.llvm-%i.0
1 : 38 : BV:32
=memlabel-mem-esp_begin
1 : 498352128 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 535824128 : BV:32
=memlabel-mem-esp_end
1 : 519311359 : BV:32
=stack.size
1 : 20959232 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1140788224 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1140916223 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1317666853
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 125 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 124 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 519311356 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 535824128 : BV:32
=symbol.2
1 : 1140788224 : BV:32
=dst_symbol_addr.1
1 : 535824128 : BV:32
=dst_symbol_addr.2
1 : 1140788224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 519311356 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 519311356 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 535952127 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 34 : BV:32
=input.src.llvm-%i.0
1 : 34 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1140788364 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 535824268 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-esp_begin
1 : 498352128 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 535824128 : BV:32
=input.src.llvm-%arrayidx
1 : 535824268 : BV:32
=input.src.llvm-%arrayidx1
1 : 1140788364 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 519311359 : BV:32
=stack.size
1 : 20959232 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1140788224 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 144 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 535824272 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%add2
1 : 36 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 34 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 535824272 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1140916223 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1317666853
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 126
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 140 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 519311356 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 535824128 : BV:32
=symbol.2
1 : 1140788224 : BV:32
=dst_symbol_addr.1
1 : 535824128 : BV:32
=dst_symbol_addr.2
1 : 1140788224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 519311356 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 519311356 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 535952127 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 38 : BV:32
=input.src.llvm-%i.0
1 : 38 : BV:32
=memlabel-mem-esp_begin
1 : 498352128 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 535824128 : BV:32
=memlabel-mem-esp_end
1 : 519311359 : BV:32
=stack.size
1 : 20959232 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1140788224 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1140916223 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1317666853
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 126 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 108 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 519311356 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 535824128 : BV:32
=symbol.2
1 : 1140788224 : BV:32
=dst_symbol_addr.1
1 : 535824128 : BV:32
=dst_symbol_addr.2
1 : 1140788224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 519311356 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 519311356 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 535952127 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 30 : BV:32
=input.src.llvm-%i.0
1 : 30 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1140788348 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 124 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 535824252 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 124 : BV:32
=memlabel-mem-esp_begin
1 : 498352128 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 535824128 : BV:32
=input.src.llvm-%arrayidx
1 : 535824252 : BV:32
=input.src.llvm-%arrayidx1
1 : 1140788348 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 519311359 : BV:32
=stack.size
1 : 20959232 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1140788224 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 535824256 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%add2
1 : 32 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 30 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 535824256 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 128 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1140916223 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1317666853
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 127
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 76 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 62975996 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 130024256 : BV:32
=symbol.2
1 : 2147486720 { -2147480576 } : BV:32
=dst_symbol_addr.1
1 : 130024256 : BV:32
=dst_symbol_addr.2
1 : 2147486720 { -2147480576 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 62975996 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 62975996 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130152255 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 22 : BV:32
=input.src.llvm-%i.0
1 : 22 : BV:32
=memlabel-mem-esp_begin
1 : 55574528 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 130024256 : BV:32
=memlabel-mem-esp_end
1 : 62975999 : BV:32
=stack.size
1 : 7401472 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147486720 { -2147480576 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147614719 { -2147352577 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287383561
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 127 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 60 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 62975996 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 130024256 : BV:32
=symbol.2
1 : 2147486720 { -2147480576 } : BV:32
=dst_symbol_addr.1
1 : 130024256 : BV:32
=dst_symbol_addr.2
1 : 2147486720 { -2147480576 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 62975996 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 62975996 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130152255 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 18 : BV:32
=input.src.llvm-%i.0
1 : 18 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 2147486796 { -2147480500 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 130024332 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-esp_begin
1 : 55574528 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 130024256 : BV:32
=input.src.llvm-%arrayidx
1 : 130024332 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147486796 { -2147480500 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 62975999 : BV:32
=stack.size
1 : 7401472 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147486720 { -2147480576 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 80 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 130024336 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%add2
1 : 20 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 18 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 130024336 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 80 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614719 { -2147352577 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287383561
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 128
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 76 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 62975996 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 130024256 : BV:32
=symbol.2
1 : 2147486720 { -2147480576 } : BV:32
=dst_symbol_addr.1
1 : 130024256 : BV:32
=dst_symbol_addr.2
1 : 2147486720 { -2147480576 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 62975996 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 62975996 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130152255 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 22 : BV:32
=input.src.llvm-%i.0
1 : 22 : BV:32
=memlabel-mem-esp_begin
1 : 55574528 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 130024256 : BV:32
=memlabel-mem-esp_end
1 : 62975999 : BV:32
=stack.size
1 : 7401472 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147486720 { -2147480576 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147614719 { -2147352577 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287383561
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 128 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 44 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 62975996 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 130024256 : BV:32
=symbol.2
1 : 2147486720 { -2147480576 } : BV:32
=dst_symbol_addr.1
1 : 130024256 : BV:32
=dst_symbol_addr.2
1 : 2147486720 { -2147480576 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 62975996 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 62975996 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130152255 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 14 : BV:32
=input.src.llvm-%i.0
1 : 14 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 2147486780 { -2147480516 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 130024316 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 60 : BV:32
=memlabel-mem-esp_begin
1 : 55574528 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 130024256 : BV:32
=input.src.llvm-%arrayidx
1 : 130024316 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147486780 { -2147480516 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 62975999 : BV:32
=stack.size
1 : 7401472 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147486720 { -2147480576 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 130024320 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%add2
1 : 16 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 14 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 130024320 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 64 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614719 { -2147352577 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287383561
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 129
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 76 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 62975996 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 130024256 : BV:32
=symbol.2
1 : 2147486720 { -2147480576 } : BV:32
=dst_symbol_addr.1
1 : 130024256 : BV:32
=dst_symbol_addr.2
1 : 2147486720 { -2147480576 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 62975996 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 62975996 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130152255 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 22 : BV:32
=input.src.llvm-%i.0
1 : 22 : BV:32
=memlabel-mem-esp_begin
1 : 55574528 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 130024256 : BV:32
=memlabel-mem-esp_end
1 : 62975999 : BV:32
=stack.size
1 : 7401472 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147486720 { -2147480576 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 2147614719 { -2147352577 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287383561
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 129 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 28 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 62975996 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 130024256 : BV:32
=symbol.2
1 : 2147486720 { -2147480576 } : BV:32
=dst_symbol_addr.1
1 : 130024256 : BV:32
=dst_symbol_addr.2
1 : 2147486720 { -2147480576 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 62975996 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 62975996 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130152255 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 10 : BV:32
=input.src.llvm-%i.0
1 : 10 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 2147486764 { -2147480532 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 130024300 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-esp_begin
1 : 55574528 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 130024256 : BV:32
=input.src.llvm-%arrayidx
1 : 130024300 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147486764 { -2147480532 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 62975999 : BV:32
=stack.size
1 : 7401472 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147486720 { -2147480576 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 48 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 130024304 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%add2
1 : 12 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 10 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 130024304 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 48 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614719 { -2147352577 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287383561
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 130
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 28 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 389116 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1073742848 : BV:32
=symbol.2
1 : 1594360880 : BV:32
=dst_symbol_addr.1
1 : 1073742848 : BV:32
=dst_symbol_addr.2
1 : 1594360880 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 389116 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 389116 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073870847 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0.phi.tmpvar
1 : 10 : BV:32
=input.src.llvm-%i.0
1 : 10 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073742848 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 389119 : BV:32
=stack.size
1 : 389120 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1594360880 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.2.0_end
1 : 1594488879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1577682821
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L10%1%1)*(L10%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L10%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.1 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 20 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.0 : MEMLABEL
26 : bvadd(3, 17) : BV:32
27 : 16 : INT
28 : 0 : BOOL
29 : select(1, 25, 26, 27, 28) : BV:128
30 : bvextract(29, 14, 15) : BV:32
31 : 63 : INT
32 : 32 : INT
33 : bvextract(29, 31, 32) : BV:32
34 : bvconcat(30, 33) : BV:64
35 : 95 : INT
36 : 64 : INT
37 : bvextract(29, 35, 36) : BV:32
38 : 127 : INT
39 : 96 : INT
40 : bvextract(29, 38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvconcat(34, 41) : BV:128
43 : bvextract(42, 38, 39) : BV:32
44 : mlvar.dst.1 : MEMLABEL
45 : dst_symbol_addr.2 : BV:32
46 : bvadd(3, 45) : BV:32
47 : select(1, 44, 46, 27, 28) : BV:128
48 : bvextract(47, 14, 15) : BV:32
49 : bvextract(47, 31, 32) : BV:32
50 : bvconcat(48, 49) : BV:64
51 : bvextract(47, 35, 36) : BV:32
52 : bvextract(47, 38, 39) : BV:32
53 : bvconcat(51, 52) : BV:64
54 : bvconcat(50, 53) : BV:128
55 : bvextract(54, 38, 39) : BV:32
56 : bvadd(43, 55) : BV:32
57 : bvextract(42, 35, 36) : BV:32
58 : bvextract(54, 35, 36) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(42, 31, 32) : BV:32
62 : bvextract(54, 31, 32) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(42, 14, 15) : BV:32
65 : bvextract(54, 14, 15) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 14, 15) : BV:32
70 : bvextract(68, 31, 32) : BV:32
71 : bvconcat(69, 70) : BV:64
72 : bvextract(68, 35, 36) : BV:32
73 : bvextract(68, 38, 39) : BV:32
74 : bvconcat(72, 73) : BV:64
75 : bvconcat(71, 74) : BV:128
76 : store(1, 2, 24, 75, 27, 28) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967292 { -4 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967292 { -4 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.2 : BV:32
27 : bvadd(3, 26) : BV:32
28 : select(1, 25, 27, 6, 7) : BV:128
29 : bvextract(28, 9, 10) : BV:32
30 : bvextract(28, 12, 13) : BV:32
31 : bvconcat(29, 30) : BV:64
32 : bvextract(28, 16, 17) : BV:32
33 : bvextract(28, 19, 20) : BV:32
34 : bvconcat(32, 33) : BV:64
35 : bvconcat(31, 34) : BV:128
36 : bvextract(35, 19, 20) : BV:32
37 : bvadd(24, 36) : BV:32
38 : bvextract(23, 16, 17) : BV:32
39 : bvextract(35, 16, 17) : BV:32
40 : bvadd(38, 39) : BV:32
41 : bvconcat(37, 40) : BV:64
42 : bvextract(23, 12, 13) : BV:32
43 : bvextract(35, 12, 13) : BV:32
44 : bvadd(42, 43) : BV:32
45 : bvextract(23, 9, 10) : BV:32
46 : bvextract(35, 9, 10) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(41, 48) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvextract(49, 12, 13) : BV:32
52 : bvconcat(50, 51) : BV:64
53 : bvextract(49, 16, 17) : BV:32
54 : bvextract(49, 19, 20) : BV:32
55 : bvconcat(53, 54) : BV:64
56 : bvconcat(52, 55) : BV:128
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.2.3
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967292 { -4 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967292 { -4 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge: L10%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 130 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 389116 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.2.3
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1073742848 : BV:32
=symbol.2
1 : 1594360880 : BV:32
=dst_symbol_addr.1
1 : 1073742848 : BV:32
=dst_symbol_addr.2
1 : 1594360880 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 389116 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 389116 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073870847 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=input.src.llvm-%i.0
1 : 6 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1594360908 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 1073742876 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073742848 : BV:32
=input.src.llvm-%arrayidx
1 : 1073742876 : BV:32
=input.src.llvm-%arrayidx1
1 : 1594360908 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 389119 : BV:32
=stack.size
1 : 389120 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1594360880 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%arrayidx3
1 : 1073742880 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%add2
1 : 8 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 6 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 1073742880 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1594488879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1577682821
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L1%1%0:
=pc Lfor.body%1%1_L1%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.2 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 2
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 3
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967284 { -12 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967284 { -12 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967294 { -2 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967293 { -3 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 24
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 28
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 29
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 30
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 31
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 32
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.32
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.31
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear4-12-free_var_idx.23
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 768 : BV:12
2 : symbol.2 : BV:32
3 : 11 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:12
6 : bvmul(1, 5) : BV:12
7 : symbol.1 : BV:32
8 : bvextract(7, 3, 4) : BV:12
9 : 3584 { -512 } : BV:12
10 : bvmul(8, 9) : BV:12
11 : 1024 : BV:12
12 : input.src.llvm-%i.0 : BV:32
13 : bvextract(12, 3, 4) : BV:12
14 : bvmul(11, 13) : BV:12
15 : 2044 : BV:12
16 : bvadd(6, 10, 14, 15) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear2-32-free_var_idx.15
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 4294967294 { -2 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 0 : BV:32
6 : bvsge(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear2-32-free_var_idx.16
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 4294967293 { -3 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 0 : BV:32
6 : bvsge(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-32-free_var_idx.13
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4294967295 { -1 } : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%i.0 : BV:32
4 : bvadd(3, 1) : BV:32
5 : 0 : BV:32
6 : bvsge(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(2, 7) : BV:32
9 : bvmul(1, 8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(2, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear2-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear2-32-free_var_idx.17
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%cmp : BOOL
3 : bool_to_bv(2) : BV:1
4 : bvconcat(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4294967292 { -4 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : 0 : BV:32
9 : bvsge(7, 8) : BOOL
10 : bool_to_bv(9) : BV:1
11 : bvconcat(1, 10) : BV:32
12 : bvneg(11) : BV:32
13 : bvadd(4, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear1-32-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear2-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : 8 { -8 } : BV:4
7 : input.src.llvm-%i.0 : BV:32
8 : bvextract(7, 2, 3) : BV:4
9 : bvmul(6, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear2-32-free_var_idx.18
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
4 : 4294967284 { -12 } : BV:32
5 : bvadd(3, 4) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear1-2-free_var_idx.4
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 2 { -2 } : BV:2
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:2
6 : bvneg(5) : BV:2
7 : bvadd(1, 6) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear3-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : symbol.2 : BV:32
7 : bvextract(6, 2, 3) : BV:4
8 : 8 { -8 } : BV:4
9 : bvmul(7, 8) : BV:4
10 : input.src.llvm-%i.0 : BV:32
11 : bvextract(10, 2, 3) : BV:4
12 : bvmul(8, 11) : BV:4
13 : bvadd(5, 9, 12) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
lb-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 3
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
lb-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 3
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : dst_symbol_addr.2 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : dst_symbol_addr.1 : BV:32
2 : 12 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : dst_symbol_addr.1 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : dst_symbol_addr.2 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 6
1 : dst_symbol_addr.2 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 7
1 : dst_symbol_addr.1 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 8
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 9
1 : dst_symbol_addr.1 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 10
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 11
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 12
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 13
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 14
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967284 { -12 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 15
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967284 { -12 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967284 { -12 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967284 { -12 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 6
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 7
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 8
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 9
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 10
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 11
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 12
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 13
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.1 : BV:32
2 : 12 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 14
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 15
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
