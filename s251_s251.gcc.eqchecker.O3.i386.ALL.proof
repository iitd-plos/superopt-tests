=FunctionName: s251
=result: 1
=corr_graph s251
=src_tfg
=TFG_LLVM llvm.s251:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.3.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.4.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : c : 128000 : 16 : 0
C_SYMBOL3 : d : 128000 : 16 : 0
C_SYMBOL4 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.s251.0 : memlabel-mem-symbol.1.0
=memlabel_map.1
mlvar.llvm.s251.1 : memlabel-mem-symbol.2.0
=memlabel_map.2
mlvar.llvm.s251.2 : memlabel-mem-symbol.3.0
=memlabel_map.3
mlvar.llvm.s251.3 : memlabel-mem-symbol.4.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !36

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100003=>Lfor.body%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100004=>Lfor.body%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100005=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%3%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100004=>Lfor.body%3%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100005=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%4%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100003=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%5%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100003=>Lfor.body%5%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100004=>Lfor.body%5%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100005=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%6%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%100003=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%8%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%1=>Lfor.body%9%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%1=>Lfor.body%10%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%10%1=>Lfor.body%10%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%10%100003=>Lfor.body%10%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%10%100004=>Lfor.body%10%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%10%100005=>Lfor.body%11%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%11%1=>Lfor.body%12%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%12%1=>Lfor.body%12%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%12%100003=>Lfor.body%12%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%12%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4.0 : MEMLABEL
3 : symbol.4 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : symbol.1 : BV:32
10 : bvadd(9, 6) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(1, 8, 10, 11, 12) : BV:32
14 : memlabel-mem-symbol.2.0 : MEMLABEL
15 : symbol.2 : BV:32
16 : bvadd(15, 6) : BV:32
17 : select(1, 14, 16, 11, 12) : BV:32
18 : memlabel-mem-symbol.3.0 : MEMLABEL
19 : symbol.3 : BV:32
20 : bvadd(19, 6) : BV:32
21 : select(1, 18, 20, 11, 12) : BV:32
22 : bvmul(17, 21) : BV:32
23 : bvadd(13, 22) : BV:32
24 : bvmul(23, 23) : BV:32
25 : store(1, 2, 7, 24, 11, 12) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvmul(10, 14) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : memlabel-mem-symbol.3.0 : MEMLABEL
16 : symbol.3 : BV:32
17 : bvadd(16, 6) : BV:32
18 : select(1, 15, 17, 8, 9) : BV:32
19 : bvmul(14, 18) : BV:32
20 : bvadd(10, 19) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : memlabel-mem-symbol.3.0 : MEMLABEL
16 : symbol.3 : BV:32
17 : bvadd(16, 6) : BV:32
18 : select(1, 15, 17, 8, 9) : BV:32
19 : bvmul(14, 18) : BV:32
20 : bvadd(10, 19) : BV:32
21 : bvmul(20, 20) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%1%100003
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100003=>Lfor.body%1%100004
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100004=>Lfor.body%1%100005
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100005=>Lfor.body%2%1
=src.llvm-%arrayidx
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%3%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%3%100004
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100004=>Lfor.body%3%100005
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100005=>Lfor.body%4%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%4%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100003=>Lfor.body%5%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%5%100003
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100003=>Lfor.body%5%100004
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100004=>Lfor.body%5%100005
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100005=>Lfor.body%6%1
=src.llvm-%arrayidx2
1 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%6%100003
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%arrayidx2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%100003=>Lfor.body%7%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%8%1
=src.llvm-%mul
1 : input.src.llvm-%1 : BV:32
2 : input.src.llvm-%2 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%1=>Lfor.body%9%1
=src.llvm-%add
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%mul : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%1=>Lfor.body%10%1
=src.llvm-%mul3
1 : input.src.llvm-%add : BV:32
2 : bvmul(1, 1) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%10%1=>Lfor.body%10%100003
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%10%100003=>Lfor.body%10%100004
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%10%100004=>Lfor.body%10%100005
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%10%100005=>Lfor.body%11%1
=src.llvm-%arrayidx4
1 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%11%1=>Lfor.body%12%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4.0 : MEMLABEL
3 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset : BV:32
4 : input.src.llvm-%mul3 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%12%1=>Lfor.body%12%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%12%100003=>Lfor.body%12%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%12%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%inc : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : symbol.4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 8
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 9
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 10
1 : symbol.4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 11
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 12
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 13
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 assume# 0
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100004=>Lfor.body%3%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100004=>Lfor.body%3%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100005=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100005=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 assume# 0
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%5%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%5%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100005=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100005=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003 assume# 0
1 : input.src.llvm-%arrayidx2 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%100003=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%100003=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%8%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%8%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%10%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%10%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%1=>Lfor.body%10%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%1=>Lfor.body%10%100003 assume# 0
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%1=>Lfor.body%10%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%1=>Lfor.body%10%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%100003=>Lfor.body%10%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%100003=>Lfor.body%10%100004 assume# 0
1 : symbol.4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%100003=>Lfor.body%10%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%100003=>Lfor.body%10%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%100004=>Lfor.body%10%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%100004=>Lfor.body%10%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%100005=>Lfor.body%11%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%10%100005=>Lfor.body%11%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%11%1=>Lfor.body%12%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%11%1=>Lfor.body%12%1 assume# 0
1 : input.src.llvm-%arrayidx4 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%11%1=>Lfor.body%12%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%12%1=>Lfor.body%12%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%12%1=>Lfor.body%12%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%12%100003=>Lfor.body%12%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%12%100003=>Lfor.body%12%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%12%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%12%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1032
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1033
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1033
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1032
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1025
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1025
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : memlabel-mem-symbol.3.0 : MEMLABEL
16 : symbol.3 : BV:32
17 : bvadd(16, 6) : BV:32
18 : select(1, 15, 17, 8, 9) : BV:32
19 : bvmul(14, 18) : BV:32
20 : bvadd(10, 19) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1019
1 : symbol.4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : symbol.4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1024
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1026
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1027
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1028
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1029
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1030
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1032
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1033
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1034
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1035
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvmul(10, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1036
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : memlabel-mem-symbol.3.0 : MEMLABEL
16 : symbol.3 : BV:32
17 : bvadd(16, 6) : BV:32
18 : select(1, 15, 17, 8, 9) : BV:32
19 : bvmul(14, 18) : BV:32
20 : bvadd(10, 19) : BV:32
21 : bvmul(20, 20) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1045
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4.0 : MEMLABEL
3 : symbol.4 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : symbol.1 : BV:32
10 : bvadd(9, 6) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(1, 8, 10, 11, 12) : BV:32
14 : memlabel-mem-symbol.2.0 : MEMLABEL
15 : symbol.2 : BV:32
16 : bvadd(15, 6) : BV:32
17 : select(1, 14, 16, 11, 12) : BV:32
18 : memlabel-mem-symbol.3.0 : MEMLABEL
19 : symbol.3 : BV:32
20 : bvadd(19, 6) : BV:32
21 : select(1, 18, 20, 11, 12) : BV:32
22 : bvmul(17, 21) : BV:32
23 : bvadd(13, 22) : BV:32
24 : bvmul(23, 23) : BV:32
25 : store(1, 2, 7, 24, 11, 12) : ARRAY[BV:32 -> BV:8]
26 : memmask(25, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1005
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1008
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1006
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1009
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 for loc_id 1007
1 : symbol.1 : BV:32
2 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 for loc_id 1016
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1010
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 for loc_id 1011
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005 for loc_id 1012
1 : symbol.2 : BV:32
2 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1 for loc_id 1017
1 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1026
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1029
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1027
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1030
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005 for loc_id 1028
1 : symbol.3 : BV:32
2 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1 for loc_id 1018
1 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003 for loc_id 1004
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%arrayidx2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100003=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100003=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%8%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%8%1 for loc_id 1035
1 : input.src.llvm-%1 : BV:32
2 : input.src.llvm-%2 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%8%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 for loc_id 1015
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%mul : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%10%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%10%1 for loc_id 1036
1 : input.src.llvm-%add : BV:32
2 : bvmul(1, 1) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%10%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%1=>Lfor.body%10%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%1=>Lfor.body%10%100003 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%1=>Lfor.body%10%100003 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%1=>Lfor.body%10%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100003=>Lfor.body%10%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100003=>Lfor.body%10%100004 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100003=>Lfor.body%10%100004 for loc_id 1024
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100003=>Lfor.body%10%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100004=>Lfor.body%10%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100004=>Lfor.body%10%100005 for loc_id 1022
1 : symbol.4 : BV:32
2 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100004=>Lfor.body%10%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100005=>Lfor.body%11%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100005=>Lfor.body%11%1 for loc_id 1019
1 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%10%100005=>Lfor.body%11%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%11%1=>Lfor.body%12%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%11%1=>Lfor.body%12%1 for loc_id 1045
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4.0 : MEMLABEL
3 : input.src.llvm-%arrayidx4 : BV:32
4 : input.src.llvm-%mul3 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%11%1=>Lfor.body%12%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%12%1=>Lfor.body%12%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%12%1=>Lfor.body%12%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%12%100003=>Lfor.body%12%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%12%100003=>Lfor.body%12%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%12%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%12%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1031
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1037
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1034
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1033
1 : input.src.llvm-%inc : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1032
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.s251
=Loc 1001 in llvm.s251.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.s251.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.s251.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.s251.
LLVMVAR
src.llvm-%2
1 : input.src.llvm-%2 : BV:32
=Loc 1005 in llvm.s251.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset : BV:32
=Loc 1006 in llvm.s251.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
=Loc 1007 in llvm.s251.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=Loc 1008 in llvm.s251.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset : BV:32
=Loc 1009 in llvm.s251.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset : BV:32
=Loc 1010 in llvm.s251.
LLVMVAR
src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset : BV:32
=Loc 1011 in llvm.s251.
LLVMVAR
src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset : BV:32
=Loc 1012 in llvm.s251.
LLVMVAR
src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset : BV:32
=Loc 1013 in llvm.s251.
LLVMVAR
src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset : BV:32
=Loc 1014 in llvm.s251.
LLVMVAR
src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset : BV:32
=Loc 1015 in llvm.s251.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1016 in llvm.s251.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1017 in llvm.s251.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1018 in llvm.s251.
LLVMVAR
src.llvm-%arrayidx2
1 : input.src.llvm-%arrayidx2 : BV:32
=Loc 1019 in llvm.s251.
LLVMVAR
src.llvm-%arrayidx4
1 : input.src.llvm-%arrayidx4 : BV:32
=Loc 1020 in llvm.s251.
LLVMVAR
src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset : BV:32
=Loc 1021 in llvm.s251.
LLVMVAR
src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset : BV:32
=Loc 1022 in llvm.s251.
LLVMVAR
src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset : BV:32
=Loc 1023 in llvm.s251.
LLVMVAR
src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset : BV:32
=Loc 1024 in llvm.s251.
LLVMVAR
src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset : BV:32
=Loc 1025 in llvm.s251.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1026 in llvm.s251.
LLVMVAR
src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset : BV:32
=Loc 1027 in llvm.s251.
LLVMVAR
src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset : BV:32
=Loc 1028 in llvm.s251.
LLVMVAR
src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset : BV:32
=Loc 1029 in llvm.s251.
LLVMVAR
src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset : BV:32
=Loc 1030 in llvm.s251.
LLVMVAR
src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset : BV:32
=Loc 1031 in llvm.s251.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1032 in llvm.s251.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1033 in llvm.s251.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1034 in llvm.s251.
LLVMVAR
src.llvm-%inc
1 : input.src.llvm-%inc : BV:32
=Loc 1035 in llvm.s251.
LLVMVAR
src.llvm-%mul
1 : input.src.llvm-%mul : BV:32
=Loc 1036 in llvm.s251.
LLVMVAR
src.llvm-%mul3
1 : input.src.llvm-%mul3 : BV:32
=Loc 1037 in llvm.s251.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1038 in llvm.s251.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1039 in llvm.s251.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1040 in llvm.s251.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1041 in llvm.s251.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1042 in llvm.s251.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1043 in llvm.s251.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1044 in llvm.s251.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.3.0
=Loc 1045 in llvm.s251.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4.0

=Alias analysis results in llvm.s251
=Alias analysis result in llvm.s251 at L0%0%1
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1010 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1011 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1012 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1013 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1014 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1018 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1019 (input.src.llvm-%arrayidx4)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1020 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1021 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1022 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1023 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1024 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1025 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1026 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1027 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1028 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1029 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1030 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1031 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1032 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1033 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1034 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1035 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1036 (input.src.llvm-%mul3)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1037 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1038 (input.econd)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1039 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1040 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1041 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1042 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1043 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1044 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s251 at L0%0%1 for loc 1045 (memmask(input.src.llvm-mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%arrayidx4)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1024 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1025 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1026 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1027 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1028 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1029 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1030 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1031 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1032 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1033 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1034 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1035 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1036 (input.src.llvm-%mul3)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1037 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1038 (input.econd)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1039 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1040 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1041 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1042 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1043 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1044 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%1%0 for loc 1045 (memmask(input.src.llvm-mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%arrayidx4)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1024 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1025 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1026 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1027 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1028 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1029 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1030 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1031 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1032 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1033 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1034 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1035 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1036 (input.src.llvm-%mul3)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1037 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1038 (input.econd)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1039 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1040 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1041 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1042 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1043 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1044 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.cond%2%1 for loc 1045 (memmask(input.src.llvm-mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1010 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1011 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1012 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1013 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1014 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1018 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1019 (input.src.llvm-%arrayidx4)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1020 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1021 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1022 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1023 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1024 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1025 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1026 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1027 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1028 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1029 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1030 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1031 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1032 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1033 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1034 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1035 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1036 (input.src.llvm-%mul3)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1037 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1038 (input.econd)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1039 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1040 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1041 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1042 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1043 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1044 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.body%1%1 for loc 1045 (memmask(input.src.llvm-mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1010 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1011 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1012 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1013 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1014 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1018 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1019 (input.src.llvm-%arrayidx4)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1020 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1021 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1022 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1023 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1024 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1025 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1026 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1027 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1028 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1029 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1030 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1031 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1032 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1033 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1034 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1035 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1036 (input.src.llvm-%mul3)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1037 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1038 (input.econd)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1039 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1040 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1041 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1042 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1043 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1044 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s251 at Lfor.end%1%1 for loc 1045 (memmask(input.src.llvm-mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in llvm.s251 at E0%0%1
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1010 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1011 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1012 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1013 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1014 (input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1018 (input.src.llvm-%arrayidx2)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1019 (input.src.llvm-%arrayidx4)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1020 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1021 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1022 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1023 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1024 (input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1025 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1026 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1027 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1028 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1029 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1030 (input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1031 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1032 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1033 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1034 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1035 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1036 (input.src.llvm-%mul3)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1037 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1038 (input.econd)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1039 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1040 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1041 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1042 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1043 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1044 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s251 at E0%0%1 for loc 1045 (memmask(input.src.llvm-mem, memlabel-mem-symbol.4.0))
nullptr

=Liveness in llvm.s251
=live locs at L0%0%1
1040, 1042, 1043, 1044, 1045
=live locs at Lfor.cond%1%0
1032, 1040, 1042, 1043, 1044, 1045
=live locs at Lfor.cond%2%1
1025, 1032, 1040, 1042, 1043, 1044, 1045
=live locs at Lfor.body%1%1
1032, 1040, 1042, 1043, 1044, 1045
=live locs at Lfor.end%1%1
1040, 1042, 1043, 1044, 1045
=live locs at E0%0%1
1040, 1042, 1043, 1044, 1045

=Available expressions in llvm.s251
=available expressions at L0%0%1 in llvm.s251
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.s251
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.s251
=avail_exprs begin
=loc 1025
=from_expr
17406 : input.src.llvm-%cmp : BOOL
=to_expr
17403 : input.src.llvm-%i.0 : BV:32
17404 : 32000 : BV:32
17405 : bvslt(17403, 17404) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.s251
=avail_exprs begin
=loc 1025
=from_expr
17406 : input.src.llvm-%cmp : BOOL
=to_expr
17403 : input.src.llvm-%i.0 : BV:32
17404 : 32000 : BV:32
17405 : bvslt(17403, 17404) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.s251
=avail_exprs begin
=loc 1025
=from_expr
17406 : input.src.llvm-%cmp : BOOL
=to_expr
17403 : input.src.llvm-%i.0 : BV:32
17404 : 32000 : BV:32
17405 : bvslt(17403, 17404) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.s251
=avail_exprs begin
=loc 1001
=from_expr
17535 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1025
=from_expr
17406 : input.src.llvm-%cmp : BOOL
=to_expr
17403 : input.src.llvm-%i.0 : BV:32
17404 : 32000 : BV:32
17405 : bvslt(17403, 17404) : BOOL
=loc 1037
=from_expr
17544 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.s251
=sprel_map at L0%0%1 in llvm.s251
=sprel_map at Lfor.cond%1%0 in llvm.s251
=sprel_map at Lfor.cond%2%1 in llvm.s251
=sprel_map at Lfor.body%1%1 in llvm.s251
=sprel_map at Lfor.end%1%1 in llvm.s251
=sprel_map at E0%0%1 in llvm.s251
=loc 1001
17389 : 0 : BV:32
=loc 1037
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 10 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 10 at column 21)
=pc
Lfor.cond%2%1
=linename
(line 10 at column 3)
=pc
Lfor.body%1%1
=linename
(line 11 at column 8)
=pc
Lfor.body%2%1
=linename
(line 11 at column 8)
=pc
Lfor.body%3%1
=linename
(line 11 at column 15)
=pc
Lfor.body%4%1
=linename
(line 11 at column 15)
=pc
Lfor.body%5%1
=linename
(line 11 at column 22)
=pc
Lfor.body%6%1
=linename
(line 11 at column 22)
=pc
Lfor.body%7%1
=linename
(line 11 at column 20)
=pc
Lfor.body%8%1
=linename
line 11
=pc
Lfor.body%9%1
=linename
(line 12 at column 13)
=pc
Lfor.body%10%1
=linename
(line 12 at column 4)
=pc
Lfor.body%11%1
=linename
line 12
=pc
Lfor.body%12%1
=linename
line 13
=pc
Lfor.end%1%1
=linename
line 14
=pc
Lfor.inc%1%1
=linename
(line 10 at column 29)
=pc
Lfor.inc%2%1
=linename
line 10
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 21
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 8
=pc
Lfor.body%2%1
=column_name
 at column 8
=pc
Lfor.body%3%1
=column_name
 at column 15
=pc
Lfor.body%4%1
=column_name
 at column 15
=pc
Lfor.body%5%1
=column_name
 at column 22
=pc
Lfor.body%6%1
=column_name
 at column 22
=pc
Lfor.body%7%1
=column_name
 at column 20
=pc
Lfor.body%8%1
=column_name
 at column 13
=pc
Lfor.body%9%1
=column_name
 at column 13
=pc
Lfor.body%10%1
=column_name
 at column 4
=pc
Lfor.body%11%1
=column_name
 at column 9
=pc
Lfor.body%12%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 29
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 10
=pc
Lfor.cond%1%1
=line_and_column
line 10
=pc
Lfor.cond%2%1
=line_and_column
line 10
=pc
Lfor.body%1%1
=line_and_column
line 11
=pc
Lfor.body%2%1
=line_and_column
line 11
=pc
Lfor.body%3%1
=line_and_column
line 11
=pc
Lfor.body%4%1
=line_and_column
line 11
=pc
Lfor.body%5%1
=line_and_column
line 11
=pc
Lfor.body%6%1
=line_and_column
line 11
=pc
Lfor.body%7%1
=line_and_column
line 11
=pc
Lfor.body%8%1
=line_and_column
line 11
=pc
Lfor.body%9%1
=line_and_column
line 12
=pc
Lfor.body%10%1
=line_and_column
line 12
=pc
Lfor.body%11%1
=line_and_column
line 12
=pc
Lfor.body%12%1
=line_and_column
line 13
=pc
Lfor.end%1%1
=line_and_column
line 14
=pc
Lfor.inc%1%1
=line_and_column
line 10
=pc
Lfor.inc%2%1
=line_and_column
line 10
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset : 0
input.src.llvm-%cmp : (i&lt;<sub>s</sub>32000)
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : (@b + bvmul(i, 4))
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%i.0.phi.tmpvar : 0
input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset : 0
input.src.llvm-%mul3 : bvmul(s, s)
input.src.llvm-%inc : i
input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset : (@a + bvmul(i, 4))
input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset : (@c + bvmul(i, 4))
input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset : 0
input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset : 0
input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset : 0
input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%mul : bvmul(input.src.llvm-%1, input.src.llvm-%2)
input.src.llvm-%arrayidx2 : (@d + bvmul(i, 4))
input.src.llvm-%arrayidx1 : (@c + bvmul(i, 4))
input.src.llvm-%arrayidx : (@b + bvmul(i, 4))
input.src.llvm-%arrayidx4 : (@a + bvmul(i, 4))
input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset : 0
input.llvm-%ret-reg : 0
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset : 0
input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset : 0
input.src.llvm-%add : s
input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset : (@d + bvmul(i, 4))
input.src.llvm-%i.0 : i
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L1%1%0 L8%1%1 L9%1%0 E0%0%1
=Edges:
L8%1%1 => L1%1%0
L8%1%1 => L9%1%0
L0%0%1 => L1%1%0
L9%1%0 => E0%0%1
L1%1%0 => L8%1%1
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.3.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.4.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : c : 128000 : 16 : 0
C_SYMBOL3 : d : 128000 : 16 : 0
C_SYMBOL4 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L1%1%0
=L1%1%0 assume predicate_set done
=L1%1%0 assert predicate_set done
=Node assumes and asserts: L8%1%1
=L8%1%1 assume predicate_set done
=L8%1%1 assert predicate_set done
=Node assumes and asserts: L9%1%0
=L9%1%0 assume predicate_set done
=L9%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=memlabel_map.5
mlvar.dst.5 : memlabel-mem-esp
=Edge: L8%1%1 => L1%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L8%1%1 => L9%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L1%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)

=Edge: L9%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)

=Edge: L1%1%0 => L8%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L1%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L9%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%0=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L1%1%0
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : 1 : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%0
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L1%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L8%1%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.3 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvmul(11, 14) : BV:32
16 : dst_symbol_addr.1 : BV:32
17 : bvadd(16, 4, 7) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(15, 18) : BV:32
20 : bvmul(19, 19) : BV:32
21 : 8 : BV:32
22 : bvadd(6, 4, 21) : BV:32
23 : select(1, 2, 22, 9, 10) : BV:32
24 : bvadd(12, 4, 21) : BV:32
25 : select(1, 2, 24, 9, 10) : BV:32
26 : bvmul(23, 25) : BV:32
27 : bvadd(16, 4, 21) : BV:32
28 : select(1, 2, 27, 9, 10) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvmul(29, 29) : BV:32
31 : 4 : BV:32
32 : bvadd(6, 31, 4) : BV:32
33 : select(1, 2, 32, 9, 10) : BV:32
34 : bvadd(12, 31, 4) : BV:32
35 : select(1, 2, 34, 9, 10) : BV:32
36 : bvmul(33, 35) : BV:32
37 : bvadd(16, 31, 4) : BV:32
38 : select(1, 2, 37, 9, 10) : BV:32
39 : bvadd(36, 38) : BV:32
40 : bvmul(39, 39) : BV:32
41 : bvadd(6, 4) : BV:32
42 : select(1, 2, 41, 9, 10) : BV:32
43 : bvadd(12, 4) : BV:32
44 : select(1, 2, 43, 9, 10) : BV:32
45 : bvmul(42, 44) : BV:32
46 : bvadd(16, 4) : BV:32
47 : select(1, 2, 46, 9, 10) : BV:32
48 : bvadd(45, 47) : BV:32
49 : bvmul(48, 48) : BV:32
50 : bvconcat(20, 30, 40, 49) : BV:128
51 : 16 : INT
52 : store(1, 2, 5, 50, 51, 10) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvmul(9, 12) : BV:32
14 : dst_symbol_addr.1 : BV:32
15 : bvadd(14, 4, 5) : BV:32
16 : select(1, 2, 15, 7, 8) : BV:32
17 : bvadd(13, 16) : BV:32
18 : bvmul(17, 17) : BV:32
19 : 8 : BV:32
20 : bvadd(3, 4, 19) : BV:32
21 : select(1, 2, 20, 7, 8) : BV:32
22 : bvadd(10, 4, 19) : BV:32
23 : select(1, 2, 22, 7, 8) : BV:32
24 : bvmul(21, 23) : BV:32
25 : bvadd(14, 4, 19) : BV:32
26 : select(1, 2, 25, 7, 8) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvmul(27, 27) : BV:32
29 : 4 : BV:32
30 : bvadd(3, 29, 4) : BV:32
31 : select(1, 2, 30, 7, 8) : BV:32
32 : bvadd(10, 29, 4) : BV:32
33 : select(1, 2, 32, 7, 8) : BV:32
34 : bvmul(31, 33) : BV:32
35 : bvadd(14, 29, 4) : BV:32
36 : select(1, 2, 35, 7, 8) : BV:32
37 : bvadd(34, 36) : BV:32
38 : bvmul(37, 37) : BV:32
39 : bvadd(3, 4) : BV:32
40 : select(1, 2, 39, 7, 8) : BV:32
41 : bvadd(10, 4) : BV:32
42 : select(1, 2, 41, 7, 8) : BV:32
43 : bvmul(40, 42) : BV:32
44 : bvadd(14, 4) : BV:32
45 : select(1, 2, 44, 7, 8) : BV:32
46 : bvadd(43, 45) : BV:32
47 : bvmul(46, 46) : BV:32
48 : bvconcat(18, 28, 38, 47) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvmul(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 4294967288 { -8 } : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvmul(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4294967284 { -12 } : BV:32
26 : bvadd(7, 8, 25) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvmul(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4294967280 { -16 } : BV:32
33 : bvadd(7, 8, 32) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvmul(31, 34) : BV:32
36 : bvconcat(14, 21, 28, 35) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 4294967288 { -8 } : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4294967284 { -12 } : BV:32
26 : bvadd(7, 8, 25) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4294967280 { -16 } : BV:32
33 : bvadd(7, 8, 32) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvadd(31, 34) : BV:32
36 : bvconcat(14, 21, 28, 35) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : bvmul(4, 4) : BV:32
6 : 95 : INT
7 : 64 : INT
8 : bvextract(1, 6, 7) : BV:32
9 : bvmul(8, 8) : BV:32
10 : 63 : INT
11 : 32 : INT
12 : bvextract(1, 10, 11) : BV:32
13 : bvmul(12, 12) : BV:32
14 : 31 : INT
15 : 0 : INT
16 : bvextract(1, 14, 15) : BV:32
17 : bvmul(16, 16) : BV:32
18 : bvconcat(5, 9, 13, 17) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.14.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L1%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L9%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%0=>L9%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%0=>E0%0%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L10%1%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>E0%0%1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%0
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%0 done
=graph_with_simplified_assets.simplified_assumes at L9%1%0=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L9%1%0=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L9%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1017
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1046
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1017
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1046
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvmul(9, 12) : BV:32
14 : dst_symbol_addr.1 : BV:32
15 : bvadd(14, 4, 5) : BV:32
16 : select(1, 2, 15, 7, 8) : BV:32
17 : bvadd(13, 16) : BV:32
18 : bvmul(17, 17) : BV:32
19 : 8 : BV:32
20 : bvadd(3, 4, 19) : BV:32
21 : select(1, 2, 20, 7, 8) : BV:32
22 : bvadd(10, 4, 19) : BV:32
23 : select(1, 2, 22, 7, 8) : BV:32
24 : bvmul(21, 23) : BV:32
25 : bvadd(14, 4, 19) : BV:32
26 : select(1, 2, 25, 7, 8) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvmul(27, 27) : BV:32
29 : 4 : BV:32
30 : bvadd(3, 29, 4) : BV:32
31 : select(1, 2, 30, 7, 8) : BV:32
32 : bvadd(10, 29, 4) : BV:32
33 : select(1, 2, 32, 7, 8) : BV:32
34 : bvmul(31, 33) : BV:32
35 : bvadd(14, 29, 4) : BV:32
36 : select(1, 2, 35, 7, 8) : BV:32
37 : bvadd(34, 36) : BV:32
38 : bvmul(37, 37) : BV:32
39 : bvadd(3, 4) : BV:32
40 : select(1, 2, 39, 7, 8) : BV:32
41 : bvadd(10, 4) : BV:32
42 : select(1, 2, 41, 7, 8) : BV:32
43 : bvmul(40, 42) : BV:32
44 : bvadd(14, 4) : BV:32
45 : select(1, 2, 44, 7, 8) : BV:32
46 : bvadd(43, 45) : BV:32
47 : bvmul(46, 46) : BV:32
48 : bvconcat(18, 28, 38, 47) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.3 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvmul(11, 14) : BV:32
16 : dst_symbol_addr.1 : BV:32
17 : bvadd(16, 4, 7) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(15, 18) : BV:32
20 : bvmul(19, 19) : BV:32
21 : 8 : BV:32
22 : bvadd(6, 4, 21) : BV:32
23 : select(1, 2, 22, 9, 10) : BV:32
24 : bvadd(12, 4, 21) : BV:32
25 : select(1, 2, 24, 9, 10) : BV:32
26 : bvmul(23, 25) : BV:32
27 : bvadd(16, 4, 21) : BV:32
28 : select(1, 2, 27, 9, 10) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvmul(29, 29) : BV:32
31 : 4 : BV:32
32 : bvadd(6, 31, 4) : BV:32
33 : select(1, 2, 32, 9, 10) : BV:32
34 : bvadd(12, 31, 4) : BV:32
35 : select(1, 2, 34, 9, 10) : BV:32
36 : bvmul(33, 35) : BV:32
37 : bvadd(16, 31, 4) : BV:32
38 : select(1, 2, 37, 9, 10) : BV:32
39 : bvadd(36, 38) : BV:32
40 : bvmul(39, 39) : BV:32
41 : bvadd(6, 4) : BV:32
42 : select(1, 2, 41, 9, 10) : BV:32
43 : bvadd(12, 4) : BV:32
44 : select(1, 2, 43, 9, 10) : BV:32
45 : bvmul(42, 44) : BV:32
46 : bvadd(16, 4) : BV:32
47 : select(1, 2, 46, 9, 10) : BV:32
48 : bvadd(45, 47) : BV:32
49 : bvmul(48, 48) : BV:32
50 : bvconcat(20, 30, 40, 49) : BV:128
51 : 16 : INT
52 : store(1, 2, 5, 50, 51, 10) : ARRAY[BV:32 -> BV:8]
53 : memlabel-mem-heap : MEMLABEL
54 : memmask(52, 53) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.3 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvmul(11, 14) : BV:32
16 : dst_symbol_addr.1 : BV:32
17 : bvadd(16, 4, 7) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(15, 18) : BV:32
20 : bvmul(19, 19) : BV:32
21 : 8 : BV:32
22 : bvadd(6, 4, 21) : BV:32
23 : select(1, 2, 22, 9, 10) : BV:32
24 : bvadd(12, 4, 21) : BV:32
25 : select(1, 2, 24, 9, 10) : BV:32
26 : bvmul(23, 25) : BV:32
27 : bvadd(16, 4, 21) : BV:32
28 : select(1, 2, 27, 9, 10) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvmul(29, 29) : BV:32
31 : 4 : BV:32
32 : bvadd(6, 31, 4) : BV:32
33 : select(1, 2, 32, 9, 10) : BV:32
34 : bvadd(12, 31, 4) : BV:32
35 : select(1, 2, 34, 9, 10) : BV:32
36 : bvmul(33, 35) : BV:32
37 : bvadd(16, 31, 4) : BV:32
38 : select(1, 2, 37, 9, 10) : BV:32
39 : bvadd(36, 38) : BV:32
40 : bvmul(39, 39) : BV:32
41 : bvadd(6, 4) : BV:32
42 : select(1, 2, 41, 9, 10) : BV:32
43 : bvadd(12, 4) : BV:32
44 : select(1, 2, 43, 9, 10) : BV:32
45 : bvmul(42, 44) : BV:32
46 : bvadd(16, 4) : BV:32
47 : select(1, 2, 46, 9, 10) : BV:32
48 : bvadd(45, 47) : BV:32
49 : bvmul(48, 48) : BV:32
50 : bvconcat(20, 30, 40, 49) : BV:128
51 : 16 : INT
52 : store(1, 2, 5, 50, 51, 10) : ARRAY[BV:32 -> BV:8]
53 : memlabel-mem-symbol.1.0 : MEMLABEL
54 : memmask(52, 53) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1043
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.3 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvmul(11, 14) : BV:32
16 : dst_symbol_addr.1 : BV:32
17 : bvadd(16, 4, 7) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(15, 18) : BV:32
20 : bvmul(19, 19) : BV:32
21 : 8 : BV:32
22 : bvadd(6, 4, 21) : BV:32
23 : select(1, 2, 22, 9, 10) : BV:32
24 : bvadd(12, 4, 21) : BV:32
25 : select(1, 2, 24, 9, 10) : BV:32
26 : bvmul(23, 25) : BV:32
27 : bvadd(16, 4, 21) : BV:32
28 : select(1, 2, 27, 9, 10) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvmul(29, 29) : BV:32
31 : 4 : BV:32
32 : bvadd(6, 31, 4) : BV:32
33 : select(1, 2, 32, 9, 10) : BV:32
34 : bvadd(12, 31, 4) : BV:32
35 : select(1, 2, 34, 9, 10) : BV:32
36 : bvmul(33, 35) : BV:32
37 : bvadd(16, 31, 4) : BV:32
38 : select(1, 2, 37, 9, 10) : BV:32
39 : bvadd(36, 38) : BV:32
40 : bvmul(39, 39) : BV:32
41 : bvadd(6, 4) : BV:32
42 : select(1, 2, 41, 9, 10) : BV:32
43 : bvadd(12, 4) : BV:32
44 : select(1, 2, 43, 9, 10) : BV:32
45 : bvmul(42, 44) : BV:32
46 : bvadd(16, 4) : BV:32
47 : select(1, 2, 46, 9, 10) : BV:32
48 : bvadd(45, 47) : BV:32
49 : bvmul(48, 48) : BV:32
50 : bvconcat(20, 30, 40, 49) : BV:128
51 : 16 : INT
52 : store(1, 2, 5, 50, 51, 10) : ARRAY[BV:32 -> BV:8]
53 : memlabel-mem-symbol.2.0 : MEMLABEL
54 : memmask(52, 53) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1044
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.3 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvmul(11, 14) : BV:32
16 : dst_symbol_addr.1 : BV:32
17 : bvadd(16, 4, 7) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(15, 18) : BV:32
20 : bvmul(19, 19) : BV:32
21 : 8 : BV:32
22 : bvadd(6, 4, 21) : BV:32
23 : select(1, 2, 22, 9, 10) : BV:32
24 : bvadd(12, 4, 21) : BV:32
25 : select(1, 2, 24, 9, 10) : BV:32
26 : bvmul(23, 25) : BV:32
27 : bvadd(16, 4, 21) : BV:32
28 : select(1, 2, 27, 9, 10) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvmul(29, 29) : BV:32
31 : 4 : BV:32
32 : bvadd(6, 31, 4) : BV:32
33 : select(1, 2, 32, 9, 10) : BV:32
34 : bvadd(12, 31, 4) : BV:32
35 : select(1, 2, 34, 9, 10) : BV:32
36 : bvmul(33, 35) : BV:32
37 : bvadd(16, 31, 4) : BV:32
38 : select(1, 2, 37, 9, 10) : BV:32
39 : bvadd(36, 38) : BV:32
40 : bvmul(39, 39) : BV:32
41 : bvadd(6, 4) : BV:32
42 : select(1, 2, 41, 9, 10) : BV:32
43 : bvadd(12, 4) : BV:32
44 : select(1, 2, 43, 9, 10) : BV:32
45 : bvmul(42, 44) : BV:32
46 : bvadd(16, 4) : BV:32
47 : select(1, 2, 46, 9, 10) : BV:32
48 : bvadd(45, 47) : BV:32
49 : bvmul(48, 48) : BV:32
50 : bvconcat(20, 30, 40, 49) : BV:128
51 : 16 : INT
52 : store(1, 2, 5, 50, 51, 10) : ARRAY[BV:32 -> BV:8]
53 : memlabel-mem-symbol.3.0 : MEMLABEL
54 : memmask(52, 53) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 for loc_id 1045
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.3 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvmul(11, 14) : BV:32
16 : dst_symbol_addr.1 : BV:32
17 : bvadd(16, 4, 7) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(15, 18) : BV:32
20 : bvmul(19, 19) : BV:32
21 : 8 : BV:32
22 : bvadd(6, 4, 21) : BV:32
23 : select(1, 2, 22, 9, 10) : BV:32
24 : bvadd(12, 4, 21) : BV:32
25 : select(1, 2, 24, 9, 10) : BV:32
26 : bvmul(23, 25) : BV:32
27 : bvadd(16, 4, 21) : BV:32
28 : select(1, 2, 27, 9, 10) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvmul(29, 29) : BV:32
31 : 4 : BV:32
32 : bvadd(6, 31, 4) : BV:32
33 : select(1, 2, 32, 9, 10) : BV:32
34 : bvadd(12, 31, 4) : BV:32
35 : select(1, 2, 34, 9, 10) : BV:32
36 : bvmul(33, 35) : BV:32
37 : bvadd(16, 31, 4) : BV:32
38 : select(1, 2, 37, 9, 10) : BV:32
39 : bvadd(36, 38) : BV:32
40 : bvmul(39, 39) : BV:32
41 : bvadd(6, 4) : BV:32
42 : select(1, 2, 41, 9, 10) : BV:32
43 : bvadd(12, 4) : BV:32
44 : select(1, 2, 43, 9, 10) : BV:32
45 : bvmul(42, 44) : BV:32
46 : bvadd(16, 4) : BV:32
47 : select(1, 2, 46, 9, 10) : BV:32
48 : bvadd(45, 47) : BV:32
49 : bvmul(48, 48) : BV:32
50 : bvconcat(20, 30, 40, 49) : BV:128
51 : 16 : INT
52 : store(1, 2, 5, 50, 51, 10) : ARRAY[BV:32 -> BV:8]
53 : memlabel-mem-symbol.4.0 : MEMLABEL
54 : memmask(52, 53) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1014
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvmul(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 4294967288 { -8 } : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvmul(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4294967284 { -12 } : BV:32
26 : bvadd(7, 8, 25) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvmul(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4294967280 { -16 } : BV:32
33 : bvadd(7, 8, 32) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvmul(31, 34) : BV:32
36 : bvconcat(14, 21, 28, 35) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 4294967288 { -8 } : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4294967284 { -12 } : BV:32
26 : bvadd(7, 8, 25) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4294967280 { -16 } : BV:32
33 : bvadd(7, 8, 32) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvadd(31, 34) : BV:32
36 : bvconcat(14, 21, 28, 35) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : bvmul(4, 4) : BV:32
6 : 95 : INT
7 : 64 : INT
8 : bvextract(1, 6, 7) : BV:32
9 : bvmul(8, 8) : BV:32
10 : 63 : INT
11 : 32 : INT
12 : bvextract(1, 10, 11) : BV:32
13 : bvmul(12, 12) : BV:32
14 : 31 : INT
15 : 0 : INT
16 : bvextract(1, 14, 15) : BV:32
17 : bvmul(16, 16) : BV:32
18 : bvconcat(5, 9, 13, 17) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1042
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1043
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1044
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1045
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : dst_symbol_addr.4 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.4.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1005
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1012
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1013
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1018
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1019
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1020
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1021
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1022
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1023
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1024
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1025
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1026
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1027
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 for loc_id 1028
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1018
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1019
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1020
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1021
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1022
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1023
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1024
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1025
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1026
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1027
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1028
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1015
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1018
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1019
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1021
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1022
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1023
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1024
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1025
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1015
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1018
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1019
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1021
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1022
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1023
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1024
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 for loc_id 1025
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1010 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1011 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1012 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1013 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1014 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1015 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1016 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1017 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1018 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:32
=Loc 1019 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1027 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1028 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1029 in dst.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1040 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1041 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1042 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1043 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1044 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.3.0
=Loc 1045 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.4.0
=Loc 1046 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1040 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1041 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1042 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1043 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1044 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1045 (memmask(input.dst.mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1046 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L1%1%0
=Alias analysis result in dst at L1%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1040 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1041 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1042 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1043 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1044 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1045 (memmask(input.dst.mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1046 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1
=Alias analysis result in dst at L8%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L8%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L8%1%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1040 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1041 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1042 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1043 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1044 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1045 (memmask(input.dst.mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1046 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0
=Alias analysis result in dst at L9%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L9%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L9%1%0 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1040 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1041 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1042 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1043 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1044 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1045 (memmask(input.dst.mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1046 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1040 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1041 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1042 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1043 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1044 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1045 (memmask(input.dst.mem, memlabel-mem-symbol.4.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1046 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, symbol.4, ; memlabel-mem-heap, )

=Liveness in dst
=live locs at L0%0%1
1040, 1042, 1043, 1044, 1045
=live locs at L1%1%0
0, 1040, 1042, 1043, 1044, 1045
=live locs at L8%1%1
0, 1013, 1040, 1042, 1043, 1044, 1045
=live locs at L9%1%0
1040, 1042, 1043, 1044, 1045
=live locs at E0%0%1
0, 1015, 1040, 1042, 1043, 1044, 1045

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L1%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1046
17387 : retaddr_const : BV:32
=sprel_map at L8%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1046
17387 : retaddr_const : BV:32
=sprel_map at L9%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1046
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17426 : 4 : BV:32
18042 : bvadd(17386, 17426) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17642 : 0 : BV:1
=loc 1002
17642 : 0 : BV:1
=loc 1003
17642 : 0 : BV:1
=loc 1004
17639 : 1 : BV:1
=loc 1005
17639 : 1 : BV:1
=loc 1006
17639 : 1 : BV:1
=loc 1007
17639 : 1 : BV:1
=loc 1012
17639 : 1 : BV:1
=loc 1013
17642 : 0 : BV:1
=loc 1014
17642 : 0 : BV:1
=loc 1015
17387 : retaddr_const : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
17426 : 4 : BV:32
18042 : bvadd(17386, 17426) : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1046
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename s251_s251.gcc.eqchecker.O3.i386.ALL.proof
=function_name s251
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i1: movdqa %exvr5.3w:C_SYMBOL0(%exvr0.0d),%exvr2.0 #
.i2: addl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i3: pmulld %exvr5.3w:C_SYMBOL1*1+-16/umask/32(%exvr0.0d),%exvr2.0 #
.i4: paddd %exvr5.3w:C_SYMBOL2*1+-16/umask/32(%exvr0.0d),%exvr2.0 #
.i5: pmulld %exvr2.0,%exvr2.0 #
.i6: movaps %exvr2.0,%exvr5.3w:C_SYMBOL3*1+-16/umask/32(%exvr0.0d) #
.i7: cmpl $0x1f400,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i8: jne .i1 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i9: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i10: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0x6
3 : 0xd
4 : 0x10
5 : 0x18
6 : 0x1b
7 : 0x24
8 : 0x2c
9 : 0x31
10 : 0x38
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : c : 128000 : 16 : 0
C_SYMBOL3 : d : 128000 : 16 : 0
C_SYMBOL4 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.3.0_begin : BV:32
2 : memlabel-mem-symbol.3.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.4.0_begin : BV:32
11 : memlabel-mem-symbol.4.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-symbol.1.0_begin : BV:32
18 : memlabel-mem-symbol.1.0_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : bvadd(17, 6) : BV:32
22 : eq(18, 21) : BOOL
23 : and(20, 22) : BOOL
24 : memlabel-mem-symbol.2.0_begin : BV:32
25 : memlabel-mem-symbol.2.0_end : BV:32
26 : bvule(24, 25) : BOOL
27 : and(23, 26) : BOOL
28 : bvadd(24, 6) : BV:32
29 : eq(25, 28) : BOOL
30 : and(27, 29) : BOOL
31 : memlabel-mem-esp_begin : BV:32
32 : memlabel-mem-esp_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : stack.size : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : bvuge(1, 10) : BOOL
41 : bvule(1, 11) : BOOL
42 : and(40, 41) : BOOL
43 : bvuge(2, 10) : BOOL
44 : bvule(2, 11) : BOOL
45 : and(43, 44) : BOOL
46 : not(45) : BOOL
47 : andnot1(42, 46) : BOOL
48 : bvuge(1, 17) : BOOL
49 : bvule(1, 18) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(2, 17) : BOOL
52 : bvule(2, 18) : BOOL
53 : and(51, 52) : BOOL
54 : not(53) : BOOL
55 : andnot1(50, 54) : BOOL
56 : and(47, 55) : BOOL
57 : bvuge(1, 24) : BOOL
58 : bvule(1, 25) : BOOL
59 : and(57, 58) : BOOL
60 : bvuge(2, 24) : BOOL
61 : bvule(2, 25) : BOOL
62 : and(60, 61) : BOOL
63 : not(62) : BOOL
64 : andnot1(59, 63) : BOOL
65 : and(56, 64) : BOOL
66 : bvuge(1, 31) : BOOL
67 : bvule(1, 32) : BOOL
68 : and(66, 67) : BOOL
69 : bvuge(2, 31) : BOOL
70 : bvule(2, 32) : BOOL
71 : and(69, 70) : BOOL
72 : not(71) : BOOL
73 : andnot1(68, 72) : BOOL
74 : and(65, 73) : BOOL
75 : bvuge(10, 1) : BOOL
76 : bvule(10, 2) : BOOL
77 : and(75, 76) : BOOL
78 : bvuge(11, 1) : BOOL
79 : bvule(11, 2) : BOOL
80 : and(78, 79) : BOOL
81 : not(80) : BOOL
82 : andnot1(77, 81) : BOOL
83 : and(74, 82) : BOOL
84 : bvuge(10, 17) : BOOL
85 : bvule(10, 18) : BOOL
86 : and(84, 85) : BOOL
87 : bvuge(11, 17) : BOOL
88 : bvule(11, 18) : BOOL
89 : and(87, 88) : BOOL
90 : not(89) : BOOL
91 : andnot1(86, 90) : BOOL
92 : and(83, 91) : BOOL
93 : bvuge(10, 24) : BOOL
94 : bvule(10, 25) : BOOL
95 : and(93, 94) : BOOL
96 : bvuge(11, 24) : BOOL
97 : bvule(11, 25) : BOOL
98 : and(96, 97) : BOOL
99 : not(98) : BOOL
100 : andnot1(95, 99) : BOOL
101 : and(92, 100) : BOOL
102 : bvuge(10, 31) : BOOL
103 : bvule(10, 32) : BOOL
104 : and(102, 103) : BOOL
105 : bvuge(11, 31) : BOOL
106 : bvule(11, 32) : BOOL
107 : and(105, 106) : BOOL
108 : not(107) : BOOL
109 : andnot1(104, 108) : BOOL
110 : and(101, 109) : BOOL
111 : bvuge(17, 1) : BOOL
112 : bvule(17, 2) : BOOL
113 : and(111, 112) : BOOL
114 : bvuge(18, 1) : BOOL
115 : bvule(18, 2) : BOOL
116 : and(114, 115) : BOOL
117 : not(116) : BOOL
118 : andnot1(113, 117) : BOOL
119 : and(110, 118) : BOOL
120 : bvuge(17, 10) : BOOL
121 : bvule(17, 11) : BOOL
122 : and(120, 121) : BOOL
123 : bvuge(18, 10) : BOOL
124 : bvule(18, 11) : BOOL
125 : and(123, 124) : BOOL
126 : not(125) : BOOL
127 : andnot1(122, 126) : BOOL
128 : and(119, 127) : BOOL
129 : bvuge(17, 24) : BOOL
130 : bvule(17, 25) : BOOL
131 : and(129, 130) : BOOL
132 : bvuge(18, 24) : BOOL
133 : bvule(18, 25) : BOOL
134 : and(132, 133) : BOOL
135 : not(134) : BOOL
136 : andnot1(131, 135) : BOOL
137 : and(128, 136) : BOOL
138 : bvuge(17, 31) : BOOL
139 : bvule(17, 32) : BOOL
140 : and(138, 139) : BOOL
141 : bvuge(18, 31) : BOOL
142 : bvule(18, 32) : BOOL
143 : and(141, 142) : BOOL
144 : not(143) : BOOL
145 : andnot1(140, 144) : BOOL
146 : and(137, 145) : BOOL
147 : bvuge(24, 1) : BOOL
148 : bvule(24, 2) : BOOL
149 : and(147, 148) : BOOL
150 : bvuge(25, 1) : BOOL
151 : bvule(25, 2) : BOOL
152 : and(150, 151) : BOOL
153 : not(152) : BOOL
154 : andnot1(149, 153) : BOOL
155 : and(146, 154) : BOOL
156 : bvuge(24, 10) : BOOL
157 : bvule(24, 11) : BOOL
158 : and(156, 157) : BOOL
159 : bvuge(25, 10) : BOOL
160 : bvule(25, 11) : BOOL
161 : and(159, 160) : BOOL
162 : not(161) : BOOL
163 : andnot1(158, 162) : BOOL
164 : and(155, 163) : BOOL
165 : bvuge(24, 17) : BOOL
166 : bvule(24, 18) : BOOL
167 : and(165, 166) : BOOL
168 : bvuge(25, 17) : BOOL
169 : bvule(25, 18) : BOOL
170 : and(168, 169) : BOOL
171 : not(170) : BOOL
172 : andnot1(167, 171) : BOOL
173 : and(164, 172) : BOOL
174 : bvuge(24, 31) : BOOL
175 : bvule(24, 32) : BOOL
176 : and(174, 175) : BOOL
177 : bvuge(25, 31) : BOOL
178 : bvule(25, 32) : BOOL
179 : and(177, 178) : BOOL
180 : not(179) : BOOL
181 : andnot1(176, 180) : BOOL
182 : and(173, 181) : BOOL
183 : bvuge(31, 1) : BOOL
184 : bvule(31, 2) : BOOL
185 : and(183, 184) : BOOL
186 : bvuge(32, 1) : BOOL
187 : bvule(32, 2) : BOOL
188 : and(186, 187) : BOOL
189 : not(188) : BOOL
190 : andnot1(185, 189) : BOOL
191 : and(182, 190) : BOOL
192 : bvuge(31, 10) : BOOL
193 : bvule(31, 11) : BOOL
194 : and(192, 193) : BOOL
195 : bvuge(32, 10) : BOOL
196 : bvule(32, 11) : BOOL
197 : and(195, 196) : BOOL
198 : not(197) : BOOL
199 : andnot1(194, 198) : BOOL
200 : and(191, 199) : BOOL
201 : bvuge(31, 17) : BOOL
202 : bvule(31, 18) : BOOL
203 : and(201, 202) : BOOL
204 : bvuge(32, 17) : BOOL
205 : bvule(32, 18) : BOOL
206 : and(204, 205) : BOOL
207 : not(206) : BOOL
208 : andnot1(203, 207) : BOOL
209 : and(200, 208) : BOOL
210 : bvuge(31, 24) : BOOL
211 : bvule(31, 25) : BOOL
212 : and(210, 211) : BOOL
213 : bvuge(32, 24) : BOOL
214 : bvule(32, 25) : BOOL
215 : and(213, 214) : BOOL
216 : not(215) : BOOL
217 : andnot1(212, 216) : BOOL
218 : and(209, 217) : BOOL
219 : and(39, 218) : BOOL
220 : symbol.3 : BV:32
221 : 15 : BV:32
222 : bvand(220, 221) : BV:32
223 : 0 : BV:32
224 : eq(222, 223) : BOOL
225 : and(219, 224) : BOOL
226 : symbol.4 : BV:32
227 : bvand(226, 221) : BV:32
228 : eq(227, 223) : BOOL
229 : and(225, 228) : BOOL
230 : symbol.1 : BV:32
231 : bvand(230, 221) : BV:32
232 : eq(231, 223) : BOOL
233 : and(229, 232) : BOOL
234 : symbol.2 : BV:32
235 : bvand(234, 221) : BV:32
236 : eq(235, 223) : BOOL
237 : and(233, 236) : BOOL
238 : eq(230, 17) : BOOL
239 : eq(234, 24) : BOOL
240 : and(238, 239) : BOOL
241 : eq(220, 1) : BOOL
242 : and(240, 241) : BOOL
243 : eq(226, 10) : BOOL
244 : and(242, 243) : BOOL
245 : and(237, 244) : BOOL
246 : input_stack_pointer_const : BV:32
247 : bvule(31, 246) : BOOL
248 : bvule(246, 32) : BOOL
249 : and(247, 248) : BOOL
250 : 3 : BV:32
251 : bvadd(246, 250) : BV:32
252 : eq(251, 32) : BOOL
253 : and(249, 252) : BOOL
254 : and(245, 253) : BOOL
255 : 4294963200 { -4096 } : BV:32
256 : bvand(31, 255) : BV:32
257 : eq(256, 31) : BOOL
258 : 1 : BV:32
259 : bvadd(32, 258) : BV:32
260 : bvand(259, 255) : BV:32
261 : eq(260, 259) : BOOL
262 : and(257, 261) : BOOL
263 : and(254, 262) : BOOL
264 : dst_symbol_addr.1 : BV:32
265 : eq(230, 264) : BOOL
266 : dst_symbol_addr.2 : BV:32
267 : eq(234, 266) : BOOL
268 : and(265, 267) : BOOL
269 : dst_symbol_addr.3 : BV:32
270 : eq(220, 269) : BOOL
271 : and(268, 270) : BOOL
272 : dst_symbol_addr.4 : BV:32
273 : eq(226, 272) : BOOL
274 : and(271, 273) : BOOL
275 : and(263, 274) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 1610874880 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 2231264 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 1342571520 : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : symbol.4 : BV:32
13 : 1476815984 : BV:32
14 : eq(12, 13) : BOOL
15 : and(11, 14) : BOOL
16 : dst_symbol_addr.1 : BV:32
17 : eq(16, 2) : BOOL
18 : and(15, 17) : BOOL
19 : dst_symbol_addr.2 : BV:32
20 : eq(19, 5) : BOOL
21 : and(18, 20) : BOOL
22 : dst_symbol_addr.3 : BV:32
23 : eq(22, 9) : BOOL
24 : and(21, 23) : BOOL
25 : dst_symbol_addr.4 : BV:32
26 : eq(25, 13) : BOOL
27 : and(24, 26) : BOOL
28 : input_stack_pointer_const : BV:32
29 : 2143707132 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-symbol.3.0_begin : BV:32
33 : eq(32, 9) : BOOL
34 : and(31, 33) : BOOL
35 : memlabel-mem-symbol.3.0_end : BV:32
36 : 1342699519 : BV:32
37 : eq(35, 36) : BOOL
38 : and(34, 37) : BOOL
39 : memlabel-mem-symbol.4.0_begin : BV:32
40 : eq(39, 13) : BOOL
41 : and(38, 40) : BOOL
42 : memlabel-mem-symbol.4.0_end : BV:32
43 : 1476943983 : BV:32
44 : eq(42, 43) : BOOL
45 : and(41, 44) : BOOL
46 : memlabel-mem-symbol.1.0_begin : BV:32
47 : eq(46, 2) : BOOL
48 : and(45, 47) : BOOL
49 : memlabel-mem-symbol.1.0_end : BV:32
50 : 1611002879 : BV:32
51 : eq(49, 50) : BOOL
52 : and(48, 51) : BOOL
53 : memlabel-mem-symbol.2.0_begin : BV:32
54 : eq(53, 5) : BOOL
55 : and(52, 54) : BOOL
56 : memlabel-mem-symbol.2.0_end : BV:32
57 : 2359263 : BV:32
58 : eq(56, 57) : BOOL
59 : and(55, 58) : BOOL
60 : memlabel-mem-esp_begin : BV:32
61 : 2015764480 : BV:32
62 : eq(60, 61) : BOOL
63 : and(59, 62) : BOOL
64 : memlabel-mem-esp_end : BV:32
65 : 2143707135 : BV:32
66 : eq(64, 65) : BOOL
67 : and(63, 66) : BOOL
68 : stack.size : BV:32
69 : 127942656 : BV:32
70 : eq(68, 69) : BOOL
71 : and(67, 70) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L1%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : c : 128000 : 16 : 0
C_SYMBOL3 : d : 128000 : 16 : 0
C_SYMBOL4 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L1%1%0
=Lfor.body%1%1_L1%1%0 assume predicate_set done
=Lfor.body%1%1_L1%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=memlabel_map.5
mlvar.dst.5 : memlabel-mem-esp
=memlabel_map.6
mlvar.llvm.s251.0 : memlabel-mem-symbol.1.0
=memlabel_map.7
mlvar.llvm.s251.1 : memlabel-mem-symbol.2.0
=memlabel_map.8
mlvar.llvm.s251.2 : memlabel-mem-symbol.3.0
=memlabel_map.9
mlvar.llvm.s251.3 : memlabel-mem-symbol.4.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !36
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*((L8%1%1=>L9%1%0)*(L9%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L9%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L9%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in s251

=Alias analysis results in s251
=Alias analysis result in s251 at L0%0%1_L0%0%1
=Alias analysis result in s251 at Lfor.body%1%1_L1%1%0
=Alias analysis result in s251 at E0%0%1_E0%0%1

=Liveness in s251
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L1%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in s251

=sprel_maps in s251
=sprel_map at L0%0%1_L0%0%1 in s251
=sprel_map at Lfor.body%1%1_L1%1%0 in s251
=sprel_map at E0%0%1_E0%0%1 in s251
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : c : 128000 : 16 : 0
C_SYMBOL3 : d : 128000 : 16 : 0
C_SYMBOL4 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.3.0_begin : BV:32
2 : memlabel-mem-symbol.3.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.4.0_begin : BV:32
11 : memlabel-mem-symbol.4.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-symbol.1.0_begin : BV:32
18 : memlabel-mem-symbol.1.0_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : bvadd(17, 6) : BV:32
22 : eq(18, 21) : BOOL
23 : and(20, 22) : BOOL
24 : memlabel-mem-symbol.2.0_begin : BV:32
25 : memlabel-mem-symbol.2.0_end : BV:32
26 : bvule(24, 25) : BOOL
27 : and(23, 26) : BOOL
28 : bvadd(24, 6) : BV:32
29 : eq(25, 28) : BOOL
30 : and(27, 29) : BOOL
31 : memlabel-mem-esp_begin : BV:32
32 : memlabel-mem-esp_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : stack.size : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : bvuge(1, 10) : BOOL
41 : bvule(1, 11) : BOOL
42 : and(40, 41) : BOOL
43 : bvuge(2, 10) : BOOL
44 : bvule(2, 11) : BOOL
45 : and(43, 44) : BOOL
46 : not(45) : BOOL
47 : andnot1(42, 46) : BOOL
48 : bvuge(1, 17) : BOOL
49 : bvule(1, 18) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(2, 17) : BOOL
52 : bvule(2, 18) : BOOL
53 : and(51, 52) : BOOL
54 : not(53) : BOOL
55 : andnot1(50, 54) : BOOL
56 : and(47, 55) : BOOL
57 : bvuge(1, 24) : BOOL
58 : bvule(1, 25) : BOOL
59 : and(57, 58) : BOOL
60 : bvuge(2, 24) : BOOL
61 : bvule(2, 25) : BOOL
62 : and(60, 61) : BOOL
63 : not(62) : BOOL
64 : andnot1(59, 63) : BOOL
65 : and(56, 64) : BOOL
66 : bvuge(1, 31) : BOOL
67 : bvule(1, 32) : BOOL
68 : and(66, 67) : BOOL
69 : bvuge(2, 31) : BOOL
70 : bvule(2, 32) : BOOL
71 : and(69, 70) : BOOL
72 : not(71) : BOOL
73 : andnot1(68, 72) : BOOL
74 : and(65, 73) : BOOL
75 : bvuge(10, 1) : BOOL
76 : bvule(10, 2) : BOOL
77 : and(75, 76) : BOOL
78 : bvuge(11, 1) : BOOL
79 : bvule(11, 2) : BOOL
80 : and(78, 79) : BOOL
81 : not(80) : BOOL
82 : andnot1(77, 81) : BOOL
83 : and(74, 82) : BOOL
84 : bvuge(10, 17) : BOOL
85 : bvule(10, 18) : BOOL
86 : and(84, 85) : BOOL
87 : bvuge(11, 17) : BOOL
88 : bvule(11, 18) : BOOL
89 : and(87, 88) : BOOL
90 : not(89) : BOOL
91 : andnot1(86, 90) : BOOL
92 : and(83, 91) : BOOL
93 : bvuge(10, 24) : BOOL
94 : bvule(10, 25) : BOOL
95 : and(93, 94) : BOOL
96 : bvuge(11, 24) : BOOL
97 : bvule(11, 25) : BOOL
98 : and(96, 97) : BOOL
99 : not(98) : BOOL
100 : andnot1(95, 99) : BOOL
101 : and(92, 100) : BOOL
102 : bvuge(10, 31) : BOOL
103 : bvule(10, 32) : BOOL
104 : and(102, 103) : BOOL
105 : bvuge(11, 31) : BOOL
106 : bvule(11, 32) : BOOL
107 : and(105, 106) : BOOL
108 : not(107) : BOOL
109 : andnot1(104, 108) : BOOL
110 : and(101, 109) : BOOL
111 : bvuge(17, 1) : BOOL
112 : bvule(17, 2) : BOOL
113 : and(111, 112) : BOOL
114 : bvuge(18, 1) : BOOL
115 : bvule(18, 2) : BOOL
116 : and(114, 115) : BOOL
117 : not(116) : BOOL
118 : andnot1(113, 117) : BOOL
119 : and(110, 118) : BOOL
120 : bvuge(17, 10) : BOOL
121 : bvule(17, 11) : BOOL
122 : and(120, 121) : BOOL
123 : bvuge(18, 10) : BOOL
124 : bvule(18, 11) : BOOL
125 : and(123, 124) : BOOL
126 : not(125) : BOOL
127 : andnot1(122, 126) : BOOL
128 : and(119, 127) : BOOL
129 : bvuge(17, 24) : BOOL
130 : bvule(17, 25) : BOOL
131 : and(129, 130) : BOOL
132 : bvuge(18, 24) : BOOL
133 : bvule(18, 25) : BOOL
134 : and(132, 133) : BOOL
135 : not(134) : BOOL
136 : andnot1(131, 135) : BOOL
137 : and(128, 136) : BOOL
138 : bvuge(17, 31) : BOOL
139 : bvule(17, 32) : BOOL
140 : and(138, 139) : BOOL
141 : bvuge(18, 31) : BOOL
142 : bvule(18, 32) : BOOL
143 : and(141, 142) : BOOL
144 : not(143) : BOOL
145 : andnot1(140, 144) : BOOL
146 : and(137, 145) : BOOL
147 : bvuge(24, 1) : BOOL
148 : bvule(24, 2) : BOOL
149 : and(147, 148) : BOOL
150 : bvuge(25, 1) : BOOL
151 : bvule(25, 2) : BOOL
152 : and(150, 151) : BOOL
153 : not(152) : BOOL
154 : andnot1(149, 153) : BOOL
155 : and(146, 154) : BOOL
156 : bvuge(24, 10) : BOOL
157 : bvule(24, 11) : BOOL
158 : and(156, 157) : BOOL
159 : bvuge(25, 10) : BOOL
160 : bvule(25, 11) : BOOL
161 : and(159, 160) : BOOL
162 : not(161) : BOOL
163 : andnot1(158, 162) : BOOL
164 : and(155, 163) : BOOL
165 : bvuge(24, 17) : BOOL
166 : bvule(24, 18) : BOOL
167 : and(165, 166) : BOOL
168 : bvuge(25, 17) : BOOL
169 : bvule(25, 18) : BOOL
170 : and(168, 169) : BOOL
171 : not(170) : BOOL
172 : andnot1(167, 171) : BOOL
173 : and(164, 172) : BOOL
174 : bvuge(24, 31) : BOOL
175 : bvule(24, 32) : BOOL
176 : and(174, 175) : BOOL
177 : bvuge(25, 31) : BOOL
178 : bvule(25, 32) : BOOL
179 : and(177, 178) : BOOL
180 : not(179) : BOOL
181 : andnot1(176, 180) : BOOL
182 : and(173, 181) : BOOL
183 : bvuge(31, 1) : BOOL
184 : bvule(31, 2) : BOOL
185 : and(183, 184) : BOOL
186 : bvuge(32, 1) : BOOL
187 : bvule(32, 2) : BOOL
188 : and(186, 187) : BOOL
189 : not(188) : BOOL
190 : andnot1(185, 189) : BOOL
191 : and(182, 190) : BOOL
192 : bvuge(31, 10) : BOOL
193 : bvule(31, 11) : BOOL
194 : and(192, 193) : BOOL
195 : bvuge(32, 10) : BOOL
196 : bvule(32, 11) : BOOL
197 : and(195, 196) : BOOL
198 : not(197) : BOOL
199 : andnot1(194, 198) : BOOL
200 : and(191, 199) : BOOL
201 : bvuge(31, 17) : BOOL
202 : bvule(31, 18) : BOOL
203 : and(201, 202) : BOOL
204 : bvuge(32, 17) : BOOL
205 : bvule(32, 18) : BOOL
206 : and(204, 205) : BOOL
207 : not(206) : BOOL
208 : andnot1(203, 207) : BOOL
209 : and(200, 208) : BOOL
210 : bvuge(31, 24) : BOOL
211 : bvule(31, 25) : BOOL
212 : and(210, 211) : BOOL
213 : bvuge(32, 24) : BOOL
214 : bvule(32, 25) : BOOL
215 : and(213, 214) : BOOL
216 : not(215) : BOOL
217 : andnot1(212, 216) : BOOL
218 : and(209, 217) : BOOL
219 : and(39, 218) : BOOL
220 : symbol.3 : BV:32
221 : 15 : BV:32
222 : bvand(220, 221) : BV:32
223 : 0 : BV:32
224 : eq(222, 223) : BOOL
225 : and(219, 224) : BOOL
226 : symbol.4 : BV:32
227 : bvand(226, 221) : BV:32
228 : eq(227, 223) : BOOL
229 : and(225, 228) : BOOL
230 : symbol.1 : BV:32
231 : bvand(230, 221) : BV:32
232 : eq(231, 223) : BOOL
233 : and(229, 232) : BOOL
234 : symbol.2 : BV:32
235 : bvand(234, 221) : BV:32
236 : eq(235, 223) : BOOL
237 : and(233, 236) : BOOL
238 : eq(230, 17) : BOOL
239 : eq(234, 24) : BOOL
240 : and(238, 239) : BOOL
241 : eq(220, 1) : BOOL
242 : and(240, 241) : BOOL
243 : eq(226, 10) : BOOL
244 : and(242, 243) : BOOL
245 : and(237, 244) : BOOL
246 : input_stack_pointer_const : BV:32
247 : bvule(31, 246) : BOOL
248 : bvule(246, 32) : BOOL
249 : and(247, 248) : BOOL
250 : 3 : BV:32
251 : bvadd(246, 250) : BV:32
252 : eq(251, 32) : BOOL
253 : and(249, 252) : BOOL
254 : and(245, 253) : BOOL
255 : 4294963200 { -4096 } : BV:32
256 : bvand(31, 255) : BV:32
257 : eq(256, 31) : BOOL
258 : 1 : BV:32
259 : bvadd(32, 258) : BV:32
260 : bvand(259, 255) : BV:32
261 : eq(260, 259) : BOOL
262 : and(257, 261) : BOOL
263 : and(254, 262) : BOOL
264 : dst_symbol_addr.1 : BV:32
265 : eq(230, 264) : BOOL
266 : dst_symbol_addr.2 : BV:32
267 : eq(234, 266) : BOOL
268 : and(265, 267) : BOOL
269 : dst_symbol_addr.3 : BV:32
270 : eq(220, 269) : BOOL
271 : and(268, 270) : BOOL
272 : dst_symbol_addr.4 : BV:32
273 : eq(226, 272) : BOOL
274 : and(271, 273) : BOOL
275 : and(263, 274) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 1610874880 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 2231264 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 1342571520 : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : symbol.4 : BV:32
13 : 1476815984 : BV:32
14 : eq(12, 13) : BOOL
15 : and(11, 14) : BOOL
16 : dst_symbol_addr.1 : BV:32
17 : eq(16, 2) : BOOL
18 : and(15, 17) : BOOL
19 : dst_symbol_addr.2 : BV:32
20 : eq(19, 5) : BOOL
21 : and(18, 20) : BOOL
22 : dst_symbol_addr.3 : BV:32
23 : eq(22, 9) : BOOL
24 : and(21, 23) : BOOL
25 : dst_symbol_addr.4 : BV:32
26 : eq(25, 13) : BOOL
27 : and(24, 26) : BOOL
28 : input_stack_pointer_const : BV:32
29 : 2143707132 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-symbol.3.0_begin : BV:32
33 : eq(32, 9) : BOOL
34 : and(31, 33) : BOOL
35 : memlabel-mem-symbol.3.0_end : BV:32
36 : 1342699519 : BV:32
37 : eq(35, 36) : BOOL
38 : and(34, 37) : BOOL
39 : memlabel-mem-symbol.4.0_begin : BV:32
40 : eq(39, 13) : BOOL
41 : and(38, 40) : BOOL
42 : memlabel-mem-symbol.4.0_end : BV:32
43 : 1476943983 : BV:32
44 : eq(42, 43) : BOOL
45 : and(41, 44) : BOOL
46 : memlabel-mem-symbol.1.0_begin : BV:32
47 : eq(46, 2) : BOOL
48 : and(45, 47) : BOOL
49 : memlabel-mem-symbol.1.0_end : BV:32
50 : 1611002879 : BV:32
51 : eq(49, 50) : BOOL
52 : and(48, 51) : BOOL
53 : memlabel-mem-symbol.2.0_begin : BV:32
54 : eq(53, 5) : BOOL
55 : and(52, 54) : BOOL
56 : memlabel-mem-symbol.2.0_end : BV:32
57 : 2359263 : BV:32
58 : eq(56, 57) : BOOL
59 : and(55, 58) : BOOL
60 : memlabel-mem-esp_begin : BV:32
61 : 2015764480 : BV:32
62 : eq(60, 61) : BOOL
63 : and(59, 62) : BOOL
64 : memlabel-mem-esp_end : BV:32
65 : 2143707135 : BV:32
66 : eq(64, 65) : BOOL
67 : and(63, 66) : BOOL
68 : stack.size : BV:32
69 : 127942656 : BV:32
70 : eq(68, 69) : BOOL
71 : and(67, 70) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1411154259
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1411154259
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014822824
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014822824
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
235649157
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
235649157
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448703729
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448703729
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379736148
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379736148
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
655495367
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
655495367
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
561717988
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
561717988
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1407392292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1407392292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281830857
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281830857
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386418627
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386418627
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156541312
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156541312
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 10219522 : BV:32
=unaliased_memslot.0
1 : 3636574 : BV:32
=unaliased_memslot.3
1 : 1127826782 : BV:32
=unaliased_memslot.2
1 : 4635487 : BV:32
=unaliased_memslot.7
1 : 56178255 : BV:32
=unaliased_memslot.4
1 : 1125731951 : BV:32
=unaliased_memslot.5
1 : 308082334 : BV:32
=unaliased_memslot.6
1 : 33192267 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635550270
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 10219522 : BV:32
=unaliased_memslot.0
1 : 3636574 : BV:32
=unaliased_memslot.3
1 : 1127826782 : BV:32
=unaliased_memslot.2
1 : 4635487 : BV:32
=unaliased_memslot.7
1 : 56178255 : BV:32
=unaliased_memslot.4
1 : 1125731951 : BV:32
=unaliased_memslot.5
1 : 308082334 : BV:32
=unaliased_memslot.6
1 : 33192267 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635550270
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 5245153 : BV:32
=unaliased_memslot.0
1 : 6425585 : BV:32
=unaliased_memslot.3
1 : 3304891188 { -990076108 } : BV:32
=unaliased_memslot.2
1 : 10630487 : BV:32
=unaliased_memslot.7
1 : 14570811 : BV:32
=unaliased_memslot.4
1 : 313624607 : BV:32
=unaliased_memslot.5
1 : 247430669 : BV:32
=unaliased_memslot.6
1 : 7214888 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069110699
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 5245153 : BV:32
=unaliased_memslot.0
1 : 6425585 : BV:32
=unaliased_memslot.3
1 : 3304891188 { -990076108 } : BV:32
=unaliased_memslot.2
1 : 10630487 : BV:32
=unaliased_memslot.7
1 : 14570811 : BV:32
=unaliased_memslot.4
1 : 313624607 : BV:32
=unaliased_memslot.5
1 : 247430669 : BV:32
=unaliased_memslot.6
1 : 7214888 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069110699
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 8388608 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712633417
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 8388608 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712633417
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 32768 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845563291
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 32768 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845563291
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 538760755 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1066077375
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 538760755 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1066077375
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1130698571
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1130698571
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1250372661
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1250372661
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2220991241
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2220991241
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 7 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
628966950
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 7 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
628966950
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 7 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.4
1 : 24 : BV:32
=unaliased_memslot.5
1 : 7 : BV:32
=unaliased_memslot.6
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1520982030
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 7 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.4
1 : 24 : BV:32
=unaliased_memslot.5
1 : 7 : BV:32
=unaliased_memslot.6
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1520982030
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1761250573
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1761250573
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
343945053
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
343945053
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874883 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874883 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874883 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16777216 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
661955081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874883 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874883 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874883 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16777216 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
661955081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 2 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1579068977
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 2 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1579068977
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 353703168 : BV:32
=unaliased_memslot.0
1 : 353703168 : BV:32
=unaliased_memslot.3
1 : 353703172 : BV:32
=unaliased_memslot.2
1 : 353703168 : BV:32
=unaliased_memslot.7
1 : 353703182 : BV:32
=unaliased_memslot.4
1 : 353703168 : BV:32
=unaliased_memslot.5
1 : 353703171 : BV:32
=unaliased_memslot.6
1 : 353703174 : BV:32
=unaliased_memslot.8
1 : 353703177 : BV:32
=unaliased_memslot.9
1 : 353703189 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
395191309
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 353703168 : BV:32
=unaliased_memslot.0
1 : 353703168 : BV:32
=unaliased_memslot.3
1 : 353703172 : BV:32
=unaliased_memslot.2
1 : 353703168 : BV:32
=unaliased_memslot.7
1 : 353703182 : BV:32
=unaliased_memslot.4
1 : 353703168 : BV:32
=unaliased_memslot.5
1 : 353703171 : BV:32
=unaliased_memslot.6
1 : 353703174 : BV:32
=unaliased_memslot.8
1 : 353703177 : BV:32
=unaliased_memslot.9
1 : 353703189 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
395191309
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1431742587
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1431742587
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231272 ) -> 2, ( 1342571528 ) -> 3, ( 1610874892 ) -> 1, ( 2231276 ) -> 1, ( 1342571532 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231272 ) -> 2, ( 1342571528 ) -> 3, ( 1610874892 ) -> 1, ( 2231276 ) -> 1, ( 1342571532 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231272 ) -> 2, ( 1342571528 ) -> 3, ( 1610874892 ) -> 1, ( 2231276 ) -> 1, ( 1342571532 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1396918184
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231272 ) -> 2, ( 1342571528 ) -> 3, ( 1610874892 ) -> 1, ( 2231276 ) -> 1, ( 1342571532 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231272 ) -> 2, ( 1342571528 ) -> 3, ( 1610874892 ) -> 1, ( 2231276 ) -> 1, ( 1342571532 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231272 ) -> 2, ( 1342571528 ) -> 3, ( 1610874892 ) -> 1, ( 2231276 ) -> 1, ( 1342571532 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1396918184
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
849725352
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
849725352
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231268 ) -> 2, ( 1342571524 ) -> 3, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1610874892 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231268 ) -> 2, ( 1342571524 ) -> 3, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1610874892 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231268 ) -> 2, ( 1342571524 ) -> 3, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1610874892 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843010 : BV:32
=unaliased_memslot.0
1 : 16843011 : BV:32
=unaliased_memslot.3
1 : 16843011 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.7
1 : 16843009 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=unaliased_memslot.5
1 : 16843008 : BV:32
=unaliased_memslot.6
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
978587665
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231268 ) -> 2, ( 1342571524 ) -> 3, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1610874892 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231268 ) -> 2, ( 1342571524 ) -> 3, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1610874892 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231268 ) -> 2, ( 1342571524 ) -> 3, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1610874892 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843010 : BV:32
=unaliased_memslot.0
1 : 16843011 : BV:32
=unaliased_memslot.3
1 : 16843011 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.7
1 : 16843009 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=unaliased_memslot.5
1 : 16843008 : BV:32
=unaliased_memslot.6
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
978587665
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1143195511
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1143195511
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3598833632 { -696133664 } : BV:32
=symbol.4
1 : 2763969424 { -1530997872 } : BV:32
=symbol.1
1 : 2357185744 { -1937781552 } : BV:32
=symbol.2
1 : 1108208640 : BV:32
=dst_symbol_addr.1
1 : 2357185744 { -1937781552 } : BV:32
=dst_symbol_addr.2
1 : 1108208640 : BV:32
=dst_symbol_addr.3
1 : 3598833632 { -696133664 } : BV:32
=dst_symbol_addr.4
1 : 2763969424 { -1530997872 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 876707836 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2764097423 { -1530869873 } : BV:32
=stack.size
1 : 859668480 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2357313743 { -1937653553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2763969424 { -1530997872 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2357185744 { -1937781552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1108336639 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3598961631 { -696005665 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1108208640 : BV:32
=memlabel-mem-esp_begin
1 : 17039360 : BV:32
=memlabel-mem-esp_end
1 : 876707839 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3598833632 { -696133664 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1538044131
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3598833632 { -696133664 } : BV:32
=symbol.4
1 : 2763969424 { -1530997872 } : BV:32
=symbol.1
1 : 2357185744 { -1937781552 } : BV:32
=symbol.2
1 : 1108208640 : BV:32
=dst_symbol_addr.1
1 : 2357185744 { -1937781552 } : BV:32
=dst_symbol_addr.2
1 : 1108208640 : BV:32
=dst_symbol_addr.3
1 : 3598833632 { -696133664 } : BV:32
=dst_symbol_addr.4
1 : 2763969424 { -1530997872 } : BV:32
=input_stack_pointer_const
1 : 876707836 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2764097423 { -1530869873 } : BV:32
=stack.size
1 : 859668480 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2357313743 { -1937653553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2763969424 { -1530997872 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2357185744 { -1937781552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1108336639 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3598961631 { -696005665 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1108208640 : BV:32
=memlabel-mem-esp_begin
1 : 17039360 : BV:32
=memlabel-mem-esp_end
1 : 876707839 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3598833632 { -696133664 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1538044131
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 128 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 128 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333539335
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 128 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 128 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333539335
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 103157504 : BV:32
=symbol.4
1 : 2147418368 : BV:32
=symbol.1
1 : 184980096 : BV:32
=symbol.2
1 : 1275012336 : BV:32
=dst_symbol_addr.1
1 : 184980096 : BV:32
=dst_symbol_addr.2
1 : 1275012336 : BV:32
=dst_symbol_addr.3
1 : 103157504 : BV:32
=dst_symbol_addr.4
1 : 2147418368 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1140887548 : BV:32
=input.src.llvm-mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147546367 { -2147420929 } : BV:32
=stack.size
1 : 894521344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 185108095 : BV:32
=input.dst.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147418368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 184980096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1275140335 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 103285503 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1275012336 : BV:32
=memlabel-mem-esp_begin
1 : 246366208 : BV:32
=memlabel-mem-esp_end
1 : 1140887551 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 103157504 : BV:32
=commonMEM.nonstack.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 1845990 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1067604223
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 103157504 : BV:32
=symbol.4
1 : 2147418368 : BV:32
=symbol.1
1 : 184980096 : BV:32
=symbol.2
1 : 1275012336 : BV:32
=dst_symbol_addr.1
1 : 184980096 : BV:32
=dst_symbol_addr.2
1 : 1275012336 : BV:32
=dst_symbol_addr.3
1 : 103157504 : BV:32
=dst_symbol_addr.4
1 : 2147418368 : BV:32
=input_stack_pointer_const
1 : 1140887548 : BV:32
=input.src.llvm-mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147546367 { -2147420929 } : BV:32
=stack.size
1 : 894521344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 185108095 : BV:32
=input.dst.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147418368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 184980096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1275140335 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 103285503 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1275012336 : BV:32
=memlabel-mem-esp_begin
1 : 246366208 : BV:32
=memlabel-mem-esp_end
1 : 1140887551 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 103157504 : BV:32
=commonMEM.nonstack.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 1845990 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1067604223
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2116848656 : BV:32
=symbol.4
1 : 1808208912 : BV:32
=symbol.1
1 : 1576930336 : BV:32
=symbol.2
1 : 1410859024 : BV:32
=dst_symbol_addr.1
1 : 1576930336 : BV:32
=dst_symbol_addr.2
1 : 1410859024 : BV:32
=dst_symbol_addr.3
1 : 2116848656 : BV:32
=dst_symbol_addr.4
1 : 1808208912 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 471597052 : BV:32
=input.src.llvm-mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1808336911 : BV:32
=stack.size
1 : 404455424 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1577058335 : BV:32
=input.dst.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1808208912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1576930336 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1410987023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2116976655 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1410859024 : BV:32
=memlabel-mem-esp_begin
1 : 67141632 : BV:32
=memlabel-mem-esp_end
1 : 471597055 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2116848656 : BV:32
=commonMEM.nonstack.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3371010 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
169687919
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2116848656 : BV:32
=symbol.4
1 : 1808208912 : BV:32
=symbol.1
1 : 1576930336 : BV:32
=symbol.2
1 : 1410859024 : BV:32
=dst_symbol_addr.1
1 : 1576930336 : BV:32
=dst_symbol_addr.2
1 : 1410859024 : BV:32
=dst_symbol_addr.3
1 : 2116848656 : BV:32
=dst_symbol_addr.4
1 : 1808208912 : BV:32
=input_stack_pointer_const
1 : 471597052 : BV:32
=input.src.llvm-mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1808336911 : BV:32
=stack.size
1 : 404455424 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1577058335 : BV:32
=input.dst.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1808208912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1576930336 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1410987023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2116976655 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1410859024 : BV:32
=memlabel-mem-esp_begin
1 : 67141632 : BV:32
=memlabel-mem-esp_end
1 : 471597055 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2116848656 : BV:32
=commonMEM.nonstack.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3371010 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
169687919
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1302985728 : BV:32
=symbol.4
1 : 166201344 : BV:32
=symbol.1
1 : 1302204416 : BV:32
=symbol.2
1 : 1970176 : BV:32
=dst_symbol_addr.1
1 : 1302204416 : BV:32
=dst_symbol_addr.2
1 : 1970176 : BV:32
=dst_symbol_addr.3
1 : 1302985728 : BV:32
=dst_symbol_addr.4
1 : 166201344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 166329343 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1302332415 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 166201344 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1302204416 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2098175 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1303113727 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1970176 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1302985728 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1999701161
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1302985728 : BV:32
=symbol.4
1 : 166201344 : BV:32
=symbol.1
1 : 1302204416 : BV:32
=symbol.2
1 : 1970176 : BV:32
=dst_symbol_addr.1
1 : 1302204416 : BV:32
=dst_symbol_addr.2
1 : 1970176 : BV:32
=dst_symbol_addr.3
1 : 1302985728 : BV:32
=dst_symbol_addr.4
1 : 166201344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 166329343 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1302332415 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 166201344 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1302204416 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2098175 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1303113727 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1970176 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1302985728 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1999701161
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 849346816 : BV:32
=symbol.4
1 : 2147355936 : BV:32
=symbol.1
1 : 580911360 : BV:32
=symbol.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.1
1 : 580911360 : BV:32
=dst_symbol_addr.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.3
1 : 849346816 : BV:32
=dst_symbol_addr.4
1 : 2147355936 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3224616956 { -1070350340 } : BV:32
=input.src.llvm-mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147483935 { -2147483361 } : BV:32
=stack.size
1 : 468791296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 581039359 : BV:32
=input.dst.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147355936 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 580911360 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4074895679 { -220071617 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 849474815 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4074767680 { -220199616 } : BV:32
=memlabel-mem-esp_begin
1 : 2755825664 { -1539141632 } : BV:32
=memlabel-mem-esp_end
1 : 3224616959 { -1070350337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 849346816 : BV:32
=commonMEM.nonstack.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 438167 : BV:32
=unaliased_memslot.0
1 : 4294946561 { -20735 } : BV:32
=unaliased_memslot.2
1 : 438017 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1346293807
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 849346816 : BV:32
=symbol.4
1 : 2147355936 : BV:32
=symbol.1
1 : 580911360 : BV:32
=symbol.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.1
1 : 580911360 : BV:32
=dst_symbol_addr.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.3
1 : 849346816 : BV:32
=dst_symbol_addr.4
1 : 2147355936 : BV:32
=input_stack_pointer_const
1 : 3224616956 { -1070350340 } : BV:32
=input.src.llvm-mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147483935 { -2147483361 } : BV:32
=stack.size
1 : 468791296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 581039359 : BV:32
=input.dst.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147355936 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 580911360 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4074895679 { -220071617 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 849474815 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4074767680 { -220199616 } : BV:32
=memlabel-mem-esp_begin
1 : 2755825664 { -1539141632 } : BV:32
=memlabel-mem-esp_end
1 : 3224616959 { -1070350337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 849346816 : BV:32
=commonMEM.nonstack.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 438167 : BV:32
=unaliased_memslot.0
1 : 4294946561 { -20735 } : BV:32
=unaliased_memslot.2
1 : 438017 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1346293807
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3841982464 { -452984832 } : BV:32
=symbol.4
1 : 3758096384 { -536870912 } : BV:32
=symbol.1
1 : 3229622272 { -1065345024 } : BV:32
=symbol.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.1
1 : 3229622272 { -1065345024 } : BV:32
=dst_symbol_addr.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.3
1 : 3841982464 { -452984832 } : BV:32
=dst_symbol_addr.4
1 : 3758096384 { -536870912 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2986278908 { -1308688388 } : BV:32
=input.src.llvm-mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3758224383 { -536742913 } : BV:32
=stack.size
1 : 1262940160 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3229750271 { -1065217025 } : BV:32
=input.dst.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3758096384 { -536870912 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3229622272 { -1065345024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3217159167 { -1077808129 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842110463 { -452856833 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3217031168 { -1077936128 } : BV:32
=memlabel-mem-esp_begin
1 : 1723338752 : BV:32
=memlabel-mem-esp_end
1 : 2986278911 { -1308688385 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3841982464 { -452984832 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1717880 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
227068632
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3841982464 { -452984832 } : BV:32
=symbol.4
1 : 3758096384 { -536870912 } : BV:32
=symbol.1
1 : 3229622272 { -1065345024 } : BV:32
=symbol.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.1
1 : 3229622272 { -1065345024 } : BV:32
=dst_symbol_addr.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.3
1 : 3841982464 { -452984832 } : BV:32
=dst_symbol_addr.4
1 : 3758096384 { -536870912 } : BV:32
=input_stack_pointer_const
1 : 2986278908 { -1308688388 } : BV:32
=input.src.llvm-mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3758224383 { -536742913 } : BV:32
=stack.size
1 : 1262940160 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3229750271 { -1065217025 } : BV:32
=input.dst.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3758096384 { -536870912 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3229622272 { -1065345024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3217159167 { -1077808129 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842110463 { -452856833 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3217031168 { -1077936128 } : BV:32
=memlabel-mem-esp_begin
1 : 1723338752 : BV:32
=memlabel-mem-esp_end
1 : 2986278911 { -1308688385 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3841982464 { -452984832 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1717880 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
227068632
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1470005248 : BV:32
=symbol.4
1 : 13910544 : BV:32
=symbol.1
1 : 519308544 : BV:32
=symbol.2
1 : 43126272 : BV:32
=dst_symbol_addr.1
1 : 519308544 : BV:32
=dst_symbol_addr.2
1 : 43126272 : BV:32
=dst_symbol_addr.3
1 : 1470005248 : BV:32
=dst_symbol_addr.4
1 : 13910544 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 14038543 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 519436543 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 13910544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 519308544 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 43254271 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1470133247 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 43126272 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1470005248 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1126737257
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1470005248 : BV:32
=symbol.4
1 : 13910544 : BV:32
=symbol.1
1 : 519308544 : BV:32
=symbol.2
1 : 43126272 : BV:32
=dst_symbol_addr.1
1 : 519308544 : BV:32
=dst_symbol_addr.2
1 : 43126272 : BV:32
=dst_symbol_addr.3
1 : 1470005248 : BV:32
=dst_symbol_addr.4
1 : 13910544 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 14038543 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 519436543 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 13910544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 519308544 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 43254271 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1470133247 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 43126272 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1470005248 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1126737257
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1300607328
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1300607328
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4011054048 { -283913248 } : BV:32
=symbol.4
1 : 3992048528 { -302918768 } : BV:32
=symbol.1
1 : 3472872400 { -822094896 } : BV:32
=symbol.2
1 : 1644030976 : BV:32
=dst_symbol_addr.1
1 : 3472872400 { -822094896 } : BV:32
=dst_symbol_addr.2
1 : 1644030976 : BV:32
=dst_symbol_addr.3
1 : 4011054048 { -283913248 } : BV:32
=dst_symbol_addr.4
1 : 3992048528 { -302918768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 788889596 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3992176527 { -302790769 } : BV:32
=stack.size
1 : 520323072 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3473000399 { -821966897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3992048528 { -302918768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3472872400 { -822094896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1644158975 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4011182047 { -283785249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1644030976 : BV:32
=memlabel-mem-esp_begin
1 : 268566528 : BV:32
=memlabel-mem-esp_end
1 : 788889599 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4011054048 { -283913248 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1715198105
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4011054048 { -283913248 } : BV:32
=symbol.4
1 : 3992048528 { -302918768 } : BV:32
=symbol.1
1 : 3472872400 { -822094896 } : BV:32
=symbol.2
1 : 1644030976 : BV:32
=dst_symbol_addr.1
1 : 3472872400 { -822094896 } : BV:32
=dst_symbol_addr.2
1 : 1644030976 : BV:32
=dst_symbol_addr.3
1 : 4011054048 { -283913248 } : BV:32
=dst_symbol_addr.4
1 : 3992048528 { -302918768 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 788889596 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3992176527 { -302790769 } : BV:32
=stack.size
1 : 520323072 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3473000399 { -821966897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3992048528 { -302918768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3472872400 { -822094896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1644158975 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4011182047 { -283785249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1644030976 : BV:32
=memlabel-mem-esp_begin
1 : 268566528 : BV:32
=memlabel-mem-esp_end
1 : 788889599 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4011054048 { -283913248 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1715198105
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
737161521
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
737161521
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1481564119
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1481564119
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57
=pc L0%0%1_L0%0%1 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57 nodece_path
=pc L0%0%1_L0%0%1 nodece 57 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 57 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58
=pc L0%0%1_L0%0%1 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 178147536 : BV:32
=symbol.4
1 : 150861920 : BV:32
=symbol.1
1 : 251525472 : BV:32
=symbol.2
1 : 192544976 : BV:32
=dst_symbol_addr.1
1 : 251525472 : BV:32
=dst_symbol_addr.2
1 : 192544976 : BV:32
=dst_symbol_addr.3
1 : 178147536 : BV:32
=dst_symbol_addr.4
1 : 150861920 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294737916 { -229380 } : BV:32
=input.src.llvm-mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 150989919 : BV:32
=stack.size
1 : 4026236928 { -268730368 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 251653471 : BV:32
=input.dst.mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 150861920 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 251525472 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 192672975 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 178275535 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 192544976 : BV:32
=memlabel-mem-esp_begin
1 : 268500992 : BV:32
=memlabel-mem-esp_end
1 : 4294737919 { -229377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 178147536 : BV:32
=commonMEM.nonstack.mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 236 : BV:32
=unaliased_memslot.0
1 : 65295 : BV:32
=unaliased_memslot.3
1 : 65343 : BV:32
=unaliased_memslot.2
1 : 13 : BV:32
=unaliased_memslot.7
1 : 50 : BV:32
=unaliased_memslot.4
1 : 61 : BV:32
=unaliased_memslot.5
1 : 65408 : BV:32
=unaliased_memslot.6
1 : 453 : BV:32
=unaliased_memslot.10
1 : 65489 : BV:32
=unaliased_memslot.8
1 : 351 : BV:32
=unaliased_memslot.9
1 : 65463 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
288367555
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58 nodece_path
=pc L0%0%1_L0%0%1 nodece 58 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 58 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 178147536 : BV:32
=symbol.4
1 : 150861920 : BV:32
=symbol.1
1 : 251525472 : BV:32
=symbol.2
1 : 192544976 : BV:32
=dst_symbol_addr.1
1 : 251525472 : BV:32
=dst_symbol_addr.2
1 : 192544976 : BV:32
=dst_symbol_addr.3
1 : 178147536 : BV:32
=dst_symbol_addr.4
1 : 150861920 : BV:32
=input_stack_pointer_const
1 : 4294737916 { -229380 } : BV:32
=input.src.llvm-mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 150989919 : BV:32
=stack.size
1 : 4026236928 { -268730368 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 251653471 : BV:32
=input.dst.mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 150861920 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 251525472 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 192672975 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 178275535 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 192544976 : BV:32
=memlabel-mem-esp_begin
1 : 268500992 : BV:32
=memlabel-mem-esp_end
1 : 4294737919 { -229377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 178147536 : BV:32
=commonMEM.nonstack.mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 236 : BV:32
=unaliased_memslot.0
1 : 65295 : BV:32
=unaliased_memslot.3
1 : 65343 : BV:32
=unaliased_memslot.2
1 : 13 : BV:32
=unaliased_memslot.7
1 : 50 : BV:32
=unaliased_memslot.4
1 : 61 : BV:32
=unaliased_memslot.5
1 : 65408 : BV:32
=unaliased_memslot.6
1 : 453 : BV:32
=unaliased_memslot.10
1 : 65489 : BV:32
=unaliased_memslot.8
1 : 351 : BV:32
=unaliased_memslot.9
1 : 65463 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
288367555
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59
=pc L0%0%1_L0%0%1 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2655651600 { -1639315696 } : BV:32
=symbol.4
1 : 2373322496 { -1921644800 } : BV:32
=symbol.1
1 : 2353661696 { -1941305600 } : BV:32
=symbol.2
1 : 2022974464 : BV:32
=dst_symbol_addr.1
1 : 2353661696 { -1941305600 } : BV:32
=dst_symbol_addr.2
1 : 2022974464 : BV:32
=dst_symbol_addr.3
1 : 2655651600 { -1639315696 } : BV:32
=dst_symbol_addr.4
1 : 2373322496 { -1921644800 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1368915964 : BV:32
=input.src.llvm-mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2373450495 { -1921516801 } : BV:32
=stack.size
1 : 288292864 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2353789695 { -1941177601 } : BV:32
=input.dst.mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2373322496 { -1921644800 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2353661696 { -1941305600 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2023102463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2655779599 { -1639187697 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2022974464 : BV:32
=memlabel-mem-esp_begin
1 : 1080623104 : BV:32
=memlabel-mem-esp_end
1 : 1368915967 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2655651600 { -1639315696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 448 : BV:32
=unaliased_memslot.2
1 : 17 : BV:32
=unaliased_memslot.7
1 : 112 : BV:32
=unaliased_memslot.4
1 : 213 : BV:32
=unaliased_memslot.5
1 : 126 : BV:32
=unaliased_memslot.6
1 : 10 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 226 : BV:32
=unaliased_memslot.9
1 : 61 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
652467361
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59 nodece_path
=pc L0%0%1_L0%0%1 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 59 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2655651600 { -1639315696 } : BV:32
=symbol.4
1 : 2373322496 { -1921644800 } : BV:32
=symbol.1
1 : 2353661696 { -1941305600 } : BV:32
=symbol.2
1 : 2022974464 : BV:32
=dst_symbol_addr.1
1 : 2353661696 { -1941305600 } : BV:32
=dst_symbol_addr.2
1 : 2022974464 : BV:32
=dst_symbol_addr.3
1 : 2655651600 { -1639315696 } : BV:32
=dst_symbol_addr.4
1 : 2373322496 { -1921644800 } : BV:32
=input_stack_pointer_const
1 : 1368915964 : BV:32
=input.src.llvm-mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2373450495 { -1921516801 } : BV:32
=stack.size
1 : 288292864 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2353789695 { -1941177601 } : BV:32
=input.dst.mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2373322496 { -1921644800 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2353661696 { -1941305600 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2023102463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2655779599 { -1639187697 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2022974464 : BV:32
=memlabel-mem-esp_begin
1 : 1080623104 : BV:32
=memlabel-mem-esp_end
1 : 1368915967 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2655651600 { -1639315696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 448 : BV:32
=unaliased_memslot.2
1 : 17 : BV:32
=unaliased_memslot.7
1 : 112 : BV:32
=unaliased_memslot.4
1 : 213 : BV:32
=unaliased_memslot.5
1 : 126 : BV:32
=unaliased_memslot.6
1 : 10 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 226 : BV:32
=unaliased_memslot.9
1 : 61 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
652467361
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60
=pc L0%0%1_L0%0%1 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1627348992 : BV:32
=symbol.4
1 : 1614545920 : BV:32
=symbol.1
1 : 1097699488 : BV:32
=symbol.2
1 : 1214732496 : BV:32
=dst_symbol_addr.1
1 : 1097699488 : BV:32
=dst_symbol_addr.2
1 : 1214732496 : BV:32
=dst_symbol_addr.3
1 : 1627348992 : BV:32
=dst_symbol_addr.4
1 : 1614545920 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1614673919 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1097827487 : BV:32
=input.dst.mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1614545920 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1097699488 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1214860495 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1627476991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1214732496 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1627348992 : BV:32
=commonMEM.nonstack.mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 64 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1029560978
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60 nodece_path
=pc L0%0%1_L0%0%1 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 60 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1627348992 : BV:32
=symbol.4
1 : 1614545920 : BV:32
=symbol.1
1 : 1097699488 : BV:32
=symbol.2
1 : 1214732496 : BV:32
=dst_symbol_addr.1
1 : 1097699488 : BV:32
=dst_symbol_addr.2
1 : 1214732496 : BV:32
=dst_symbol_addr.3
1 : 1627348992 : BV:32
=dst_symbol_addr.4
1 : 1614545920 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1614673919 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1097827487 : BV:32
=input.dst.mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1614545920 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1097699488 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1214860495 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1627476991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1214732496 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1627348992 : BV:32
=commonMEM.nonstack.mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 64 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1029560978
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61
=pc L0%0%1_L0%0%1 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294687104 { -280192 } : BV:32
=symbol.4
1 : 621568 : BV:32
=symbol.1
1 : 4228095888 { -66871408 } : BV:32
=symbol.2
1 : 17664 : BV:32
=dst_symbol_addr.1
1 : 4228095888 { -66871408 } : BV:32
=dst_symbol_addr.2
1 : 17664 : BV:32
=dst_symbol_addr.3
1 : 4294687104 { -280192 } : BV:32
=dst_symbol_addr.4
1 : 621568 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4228091900 { -66875396 } : BV:32
=input.src.llvm-mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 749567 : BV:32
=stack.size
1 : 4194336768 { -100630528 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4228223887 { -66743409 } : BV:32
=input.dst.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 621568 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4228095888 { -66871408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 145663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294815103 { -152193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 17664 : BV:32
=memlabel-mem-esp_begin
1 : 33755136 : BV:32
=memlabel-mem-esp_end
1 : 4228091903 { -66875393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294687104 { -280192 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 235798532 : BV:32
=unaliased_memslot.0
1 : 235798528 : BV:32
=unaliased_memslot.3
1 : 235798631 : BV:32
=unaliased_memslot.2
1 : 235798528 : BV:32
=unaliased_memslot.7
1 : 235798578 : BV:32
=unaliased_memslot.4
1 : 235798631 : BV:32
=unaliased_memslot.5
1 : 235798542 : BV:32
=unaliased_memslot.6
1 : 235798589 : BV:32
=unaliased_memslot.10
1 : 235798542 : BV:32
=unaliased_memslot.8
1 : 235798578 : BV:32
=unaliased_memslot.9
1 : 235798578 : BV:32
=unaliased_memslot.11
1 : 235798542 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302256187
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61 nodece_path
=pc L0%0%1_L0%0%1 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 61 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294687104 { -280192 } : BV:32
=symbol.4
1 : 621568 : BV:32
=symbol.1
1 : 4228095888 { -66871408 } : BV:32
=symbol.2
1 : 17664 : BV:32
=dst_symbol_addr.1
1 : 4228095888 { -66871408 } : BV:32
=dst_symbol_addr.2
1 : 17664 : BV:32
=dst_symbol_addr.3
1 : 4294687104 { -280192 } : BV:32
=dst_symbol_addr.4
1 : 621568 : BV:32
=input_stack_pointer_const
1 : 4228091900 { -66875396 } : BV:32
=input.src.llvm-mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 749567 : BV:32
=stack.size
1 : 4194336768 { -100630528 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4228223887 { -66743409 } : BV:32
=input.dst.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 621568 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4228095888 { -66871408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 145663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294815103 { -152193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 17664 : BV:32
=memlabel-mem-esp_begin
1 : 33755136 : BV:32
=memlabel-mem-esp_end
1 : 4228091903 { -66875393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294687104 { -280192 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 235798532 : BV:32
=unaliased_memslot.0
1 : 235798528 : BV:32
=unaliased_memslot.3
1 : 235798631 : BV:32
=unaliased_memslot.2
1 : 235798528 : BV:32
=unaliased_memslot.7
1 : 235798578 : BV:32
=unaliased_memslot.4
1 : 235798631 : BV:32
=unaliased_memslot.5
1 : 235798542 : BV:32
=unaliased_memslot.6
1 : 235798589 : BV:32
=unaliased_memslot.10
1 : 235798542 : BV:32
=unaliased_memslot.8
1 : 235798578 : BV:32
=unaliased_memslot.9
1 : 235798578 : BV:32
=unaliased_memslot.11
1 : 235798542 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302256187
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62
=pc L0%0%1_L0%0%1 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2985265344 { -1309701952 } : BV:32
=symbol.4
1 : 2971788288 { -1323179008 } : BV:32
=symbol.1
1 : 2147453104 : BV:32
=symbol.2
1 : 1331459904 : BV:32
=dst_symbol_addr.1
1 : 2147453104 : BV:32
=dst_symbol_addr.2
1 : 1331459904 : BV:32
=dst_symbol_addr.3
1 : 2985265344 { -1309701952 } : BV:32
=dst_symbol_addr.4
1 : 2971788288 { -1323179008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1132462076 : BV:32
=input.src.llvm-mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2971916287 { -1323051009 } : BV:32
=stack.size
1 : 1123811328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147581103 { -2147386193 } : BV:32
=input.dst.mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2971788288 { -1323179008 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147453104 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1331587903 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2985393343 { -1309573953 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1331459904 : BV:32
=memlabel-mem-esp_begin
1 : 8650752 : BV:32
=memlabel-mem-esp_end
1 : 1132462079 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2985265344 { -1309701952 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 5 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 19 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 127 : BV:32
=unaliased_memslot.11
1 : 53 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
806636938
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62 nodece_path
=pc L0%0%1_L0%0%1 nodece 62 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 62 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2985265344 { -1309701952 } : BV:32
=symbol.4
1 : 2971788288 { -1323179008 } : BV:32
=symbol.1
1 : 2147453104 : BV:32
=symbol.2
1 : 1331459904 : BV:32
=dst_symbol_addr.1
1 : 2147453104 : BV:32
=dst_symbol_addr.2
1 : 1331459904 : BV:32
=dst_symbol_addr.3
1 : 2985265344 { -1309701952 } : BV:32
=dst_symbol_addr.4
1 : 2971788288 { -1323179008 } : BV:32
=input_stack_pointer_const
1 : 1132462076 : BV:32
=input.src.llvm-mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2971916287 { -1323051009 } : BV:32
=stack.size
1 : 1123811328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147581103 { -2147386193 } : BV:32
=input.dst.mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2971788288 { -1323179008 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147453104 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1331587903 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2985393343 { -1309573953 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1331459904 : BV:32
=memlabel-mem-esp_begin
1 : 8650752 : BV:32
=memlabel-mem-esp_end
1 : 1132462079 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2985265344 { -1309701952 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 5 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 19 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 127 : BV:32
=unaliased_memslot.11
1 : 53 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
806636938
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63
=pc L0%0%1_L0%0%1 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342180352 : BV:32
=symbol.4
1 : 1286627856 : BV:32
=symbol.1
1 : 1879047680 : BV:32
=symbol.2
1 : 1689340672 : BV:32
=dst_symbol_addr.1
1 : 1879047680 : BV:32
=dst_symbol_addr.2
1 : 1689340672 : BV:32
=dst_symbol_addr.3
1 : 1342180352 : BV:32
=dst_symbol_addr.4
1 : 1286627856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1286755855 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1879175679 : BV:32
=input.dst.mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1286627856 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1879047680 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1689468671 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342308351 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1689340672 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342180352 : BV:32
=commonMEM.nonstack.mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=unaliased_memslot.11
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2023431017
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63 nodece_path
=pc L0%0%1_L0%0%1 nodece 63 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 63 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342180352 : BV:32
=symbol.4
1 : 1286627856 : BV:32
=symbol.1
1 : 1879047680 : BV:32
=symbol.2
1 : 1689340672 : BV:32
=dst_symbol_addr.1
1 : 1879047680 : BV:32
=dst_symbol_addr.2
1 : 1689340672 : BV:32
=dst_symbol_addr.3
1 : 1342180352 : BV:32
=dst_symbol_addr.4
1 : 1286627856 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1286755855 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1879175679 : BV:32
=input.dst.mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1286627856 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1879047680 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1689468671 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342308351 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1689340672 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342180352 : BV:32
=commonMEM.nonstack.mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=unaliased_memslot.11
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2023431017
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64
=pc L0%0%1_L0%0%1 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4026458912 { -268508384 } : BV:32
=symbol.4
1 : 3221192848 { -1073774448 } : BV:32
=symbol.1
1 : 2147418144 : BV:32
=symbol.2
1 : 4285022800 { -9944496 } : BV:32
=dst_symbol_addr.1
1 : 2147418144 : BV:32
=dst_symbol_addr.2
1 : 4285022800 { -9944496 } : BV:32
=dst_symbol_addr.3
1 : 4026458912 { -268508384 } : BV:32
=dst_symbol_addr.4
1 : 3221192848 { -1073774448 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1665724412 : BV:32
=input.src.llvm-mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3221320847 { -1073646449 } : BV:32
=stack.size
1 : 793337856 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147546143 { -2147421153 } : BV:32
=input.dst.mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3221192848 { -1073774448 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147418144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285150799 { -9816497 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4026586911 { -268380385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4285022800 { -9944496 } : BV:32
=memlabel-mem-esp_begin
1 : 872386560 : BV:32
=memlabel-mem-esp_end
1 : 1665724415 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4026458912 { -268508384 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 65535 : BV:32
=unaliased_memslot.0
1 : 65532 : BV:32
=unaliased_memslot.3
1 : 271 : BV:32
=unaliased_memslot.2
1 : 65399 : BV:32
=unaliased_memslot.7
1 : 63 : BV:32
=unaliased_memslot.4
1 : 65341 : BV:32
=unaliased_memslot.5
1 : 449 : BV:32
=unaliased_memslot.6
1 : 29 : BV:32
=unaliased_memslot.10
1 : 56 : BV:32
=unaliased_memslot.8
1 : 65143 : BV:32
=unaliased_memslot.9
1 : 13 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
166730292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64 nodece_path
=pc L0%0%1_L0%0%1 nodece 64 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 64 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4026458912 { -268508384 } : BV:32
=symbol.4
1 : 3221192848 { -1073774448 } : BV:32
=symbol.1
1 : 2147418144 : BV:32
=symbol.2
1 : 4285022800 { -9944496 } : BV:32
=dst_symbol_addr.1
1 : 2147418144 : BV:32
=dst_symbol_addr.2
1 : 4285022800 { -9944496 } : BV:32
=dst_symbol_addr.3
1 : 4026458912 { -268508384 } : BV:32
=dst_symbol_addr.4
1 : 3221192848 { -1073774448 } : BV:32
=input_stack_pointer_const
1 : 1665724412 : BV:32
=input.src.llvm-mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3221320847 { -1073646449 } : BV:32
=stack.size
1 : 793337856 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147546143 { -2147421153 } : BV:32
=input.dst.mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3221192848 { -1073774448 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147418144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285150799 { -9816497 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4026586911 { -268380385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4285022800 { -9944496 } : BV:32
=memlabel-mem-esp_begin
1 : 872386560 : BV:32
=memlabel-mem-esp_end
1 : 1665724415 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4026458912 { -268508384 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 65535 : BV:32
=unaliased_memslot.0
1 : 65532 : BV:32
=unaliased_memslot.3
1 : 271 : BV:32
=unaliased_memslot.2
1 : 65399 : BV:32
=unaliased_memslot.7
1 : 63 : BV:32
=unaliased_memslot.4
1 : 65341 : BV:32
=unaliased_memslot.5
1 : 449 : BV:32
=unaliased_memslot.6
1 : 29 : BV:32
=unaliased_memslot.10
1 : 56 : BV:32
=unaliased_memslot.8
1 : 65143 : BV:32
=unaliased_memslot.9
1 : 13 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
166730292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65
=pc L0%0%1_L0%0%1 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3220056064 { -1074911232 } : BV:32
=symbol.4
1 : 2204026880 { -2090940416 } : BV:32
=symbol.1
1 : 2200800256 { -2094167040 } : BV:32
=symbol.2
1 : 1211009024 : BV:32
=dst_symbol_addr.1
1 : 2200800256 { -2094167040 } : BV:32
=dst_symbol_addr.2
1 : 1211009024 : BV:32
=dst_symbol_addr.3
1 : 3220056064 { -1074911232 } : BV:32
=dst_symbol_addr.4
1 : 2204026880 { -2090940416 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1155497980 : BV:32
=input.src.llvm-mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2204154879 { -2090812417 } : BV:32
=stack.size
1 : 75448320 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2200928255 { -2094039041 } : BV:32
=input.dst.mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2204026880 { -2090940416 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2200800256 { -2094167040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1211137023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3220184063 { -1074783233 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1211009024 : BV:32
=memlabel-mem-esp_begin
1 : 1080049664 : BV:32
=memlabel-mem-esp_end
1 : 1155497983 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3220056064 { -1074911232 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 61 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 177 : BV:32
=unaliased_memslot.4
1 : 2 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 48 : BV:32
=unaliased_memslot.8
1 : 148 : BV:32
=unaliased_memslot.9
1 : 205 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
284589771
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65 nodece_path
=pc L0%0%1_L0%0%1 nodece 65 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 65 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3220056064 { -1074911232 } : BV:32
=symbol.4
1 : 2204026880 { -2090940416 } : BV:32
=symbol.1
1 : 2200800256 { -2094167040 } : BV:32
=symbol.2
1 : 1211009024 : BV:32
=dst_symbol_addr.1
1 : 2200800256 { -2094167040 } : BV:32
=dst_symbol_addr.2
1 : 1211009024 : BV:32
=dst_symbol_addr.3
1 : 3220056064 { -1074911232 } : BV:32
=dst_symbol_addr.4
1 : 2204026880 { -2090940416 } : BV:32
=input_stack_pointer_const
1 : 1155497980 : BV:32
=input.src.llvm-mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2204154879 { -2090812417 } : BV:32
=stack.size
1 : 75448320 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2200928255 { -2094039041 } : BV:32
=input.dst.mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2204026880 { -2090940416 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2200800256 { -2094167040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1211137023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3220184063 { -1074783233 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1211009024 : BV:32
=memlabel-mem-esp_begin
1 : 1080049664 : BV:32
=memlabel-mem-esp_end
1 : 1155497983 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3220056064 { -1074911232 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 61 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 177 : BV:32
=unaliased_memslot.4
1 : 2 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 48 : BV:32
=unaliased_memslot.8
1 : 148 : BV:32
=unaliased_memslot.9
1 : 205 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
284589771
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66
=pc L0%0%1_L0%0%1 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 976912384 : BV:32
=symbol.4
1 : 3388936704 { -906030592 } : BV:32
=symbol.1
1 : 821952512 : BV:32
=symbol.2
1 : 368994320 : BV:32
=dst_symbol_addr.1
1 : 821952512 : BV:32
=dst_symbol_addr.2
1 : 368994320 : BV:32
=dst_symbol_addr.3
1 : 976912384 : BV:32
=dst_symbol_addr.4
1 : 3388936704 { -906030592 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147483644 : BV:32
=input.src.llvm-mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3389064703 { -905902593 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822080511 : BV:32
=input.dst.mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3388936704 { -906030592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 821952512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 369122319 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 977040383 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 368994320 : BV:32
=memlabel-mem-esp_begin
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 976912384 : BV:32
=commonMEM.nonstack.mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502859928
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66 nodece_path
=pc L0%0%1_L0%0%1 nodece 66 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 66 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 976912384 : BV:32
=symbol.4
1 : 3388936704 { -906030592 } : BV:32
=symbol.1
1 : 821952512 : BV:32
=symbol.2
1 : 368994320 : BV:32
=dst_symbol_addr.1
1 : 821952512 : BV:32
=dst_symbol_addr.2
1 : 368994320 : BV:32
=dst_symbol_addr.3
1 : 976912384 : BV:32
=dst_symbol_addr.4
1 : 3388936704 { -906030592 } : BV:32
=input_stack_pointer_const
1 : 2147483644 : BV:32
=input.src.llvm-mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3389064703 { -905902593 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822080511 : BV:32
=input.dst.mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3388936704 { -906030592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 821952512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 369122319 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 977040383 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 368994320 : BV:32
=memlabel-mem-esp_begin
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 976912384 : BV:32
=commonMEM.nonstack.mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502859928
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67
=pc L0%0%1_L0%0%1 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287057570
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67 nodece_path
=pc L0%0%1_L0%0%1 nodece 67 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 67 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287057570
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68
=pc L0%0%1_L0%0%1 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1129250011
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68 nodece_path
=pc L0%0%1_L0%0%1 nodece 68 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 68 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1129250011
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69
=pc L0%0%1_L0%0%1 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 246 , m_adder -> 161)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 246 , m_adder -> 161)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
21764689
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69 nodece_path
=pc L0%0%1_L0%0%1 nodece 69 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 69 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 246 , m_adder -> 161)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 246 , m_adder -> 161)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
21764689
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70
=pc L0%0%1_L0%0%1 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294185872 { -781424 } : BV:32
=symbol.4
1 : 663456 : BV:32
=symbol.1
1 : 4293655584 { -1311712 } : BV:32
=symbol.2
1 : 4293496816 { -1470480 } : BV:32
=dst_symbol_addr.1
1 : 4293655584 { -1311712 } : BV:32
=dst_symbol_addr.2
1 : 4293496816 { -1470480 } : BV:32
=dst_symbol_addr.3
1 : 4294185872 { -781424 } : BV:32
=dst_symbol_addr.4
1 : 663456 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4293398524 { -1568772 } : BV:32
=input.src.llvm-mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 791455 : BV:32
=stack.size
1 : 4291301376 { -3665920 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293783583 { -1183713 } : BV:32
=input.dst.mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 663456 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293655584 { -1311712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4293624815 { -1342481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294313871 { -653425 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293496816 { -1470480 } : BV:32
=memlabel-mem-esp_begin
1 : 2097152 : BV:32
=memlabel-mem-esp_end
1 : 4293398527 { -1568769 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294185872 { -781424 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 118 : BV:32
=unaliased_memslot.2
1 : 118 : BV:32
=unaliased_memslot.7
1 : 51 : BV:32
=unaliased_memslot.4
1 : 47 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.6
1 : 51 : BV:32
=unaliased_memslot.10
1 : 47 : BV:32
=unaliased_memslot.8
1 : 51 : BV:32
=unaliased_memslot.9
1 : 47 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
311931809
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70 nodece_path
=pc L0%0%1_L0%0%1 nodece 70 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 70 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294185872 { -781424 } : BV:32
=symbol.4
1 : 663456 : BV:32
=symbol.1
1 : 4293655584 { -1311712 } : BV:32
=symbol.2
1 : 4293496816 { -1470480 } : BV:32
=dst_symbol_addr.1
1 : 4293655584 { -1311712 } : BV:32
=dst_symbol_addr.2
1 : 4293496816 { -1470480 } : BV:32
=dst_symbol_addr.3
1 : 4294185872 { -781424 } : BV:32
=dst_symbol_addr.4
1 : 663456 : BV:32
=input_stack_pointer_const
1 : 4293398524 { -1568772 } : BV:32
=input.src.llvm-mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 791455 : BV:32
=stack.size
1 : 4291301376 { -3665920 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293783583 { -1183713 } : BV:32
=input.dst.mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 663456 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293655584 { -1311712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4293624815 { -1342481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294313871 { -653425 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293496816 { -1470480 } : BV:32
=memlabel-mem-esp_begin
1 : 2097152 : BV:32
=memlabel-mem-esp_end
1 : 4293398527 { -1568769 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294185872 { -781424 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 118 : BV:32
=unaliased_memslot.2
1 : 118 : BV:32
=unaliased_memslot.7
1 : 51 : BV:32
=unaliased_memslot.4
1 : 47 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.6
1 : 51 : BV:32
=unaliased_memslot.10
1 : 47 : BV:32
=unaliased_memslot.8
1 : 51 : BV:32
=unaliased_memslot.9
1 : 47 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
311931809
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71
=pc L0%0%1_L0%0%1 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3077898752 { -1217068544 } : BV:32
=symbol.4
1 : 2025818048 : BV:32
=symbol.1
1 : 1073613824 : BV:32
=symbol.2
1 : 887037888 : BV:32
=dst_symbol_addr.1
1 : 1073613824 : BV:32
=dst_symbol_addr.2
1 : 887037888 : BV:32
=dst_symbol_addr.3
1 : 3077898752 { -1217068544 } : BV:32
=dst_symbol_addr.4
1 : 2025818048 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 65011708 : BV:32
=input.src.llvm-mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2025946047 : BV:32
=stack.size
1 : 63963136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073741823 : BV:32
=input.dst.mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2025818048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073613824 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 887165887 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3078026751 { -1216940545 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 887037888 : BV:32
=memlabel-mem-esp_begin
1 : 1048576 : BV:32
=memlabel-mem-esp_end
1 : 65011711 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3077898752 { -1217068544 } : BV:32
=commonMEM.nonstack.mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.3
1 : 87 : BV:32
=unaliased_memslot.2
1 : 51 : BV:32
=unaliased_memslot.7
1 : 16 : BV:32
=unaliased_memslot.4
1 : 41 : BV:32
=unaliased_memslot.5
1 : 99 : BV:32
=unaliased_memslot.6
1 : 32 : BV:32
=unaliased_memslot.10
1 : 40 : BV:32
=unaliased_memslot.8
1 : 83 : BV:32
=unaliased_memslot.9
1 : 38 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1443478145
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71 nodece_path
=pc L0%0%1_L0%0%1 nodece 71 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 71 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3077898752 { -1217068544 } : BV:32
=symbol.4
1 : 2025818048 : BV:32
=symbol.1
1 : 1073613824 : BV:32
=symbol.2
1 : 887037888 : BV:32
=dst_symbol_addr.1
1 : 1073613824 : BV:32
=dst_symbol_addr.2
1 : 887037888 : BV:32
=dst_symbol_addr.3
1 : 3077898752 { -1217068544 } : BV:32
=dst_symbol_addr.4
1 : 2025818048 : BV:32
=input_stack_pointer_const
1 : 65011708 : BV:32
=input.src.llvm-mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2025946047 : BV:32
=stack.size
1 : 63963136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073741823 : BV:32
=input.dst.mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2025818048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073613824 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 887165887 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3078026751 { -1216940545 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 887037888 : BV:32
=memlabel-mem-esp_begin
1 : 1048576 : BV:32
=memlabel-mem-esp_end
1 : 65011711 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3077898752 { -1217068544 } : BV:32
=commonMEM.nonstack.mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.3
1 : 87 : BV:32
=unaliased_memslot.2
1 : 51 : BV:32
=unaliased_memslot.7
1 : 16 : BV:32
=unaliased_memslot.4
1 : 41 : BV:32
=unaliased_memslot.5
1 : 99 : BV:32
=unaliased_memslot.6
1 : 32 : BV:32
=unaliased_memslot.10
1 : 40 : BV:32
=unaliased_memslot.8
1 : 83 : BV:32
=unaliased_memslot.9
1 : 38 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1443478145
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72
=pc L0%0%1_L0%0%1 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=commonMEM.nonstack.mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1322467930
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72 nodece_path
=pc L0%0%1_L0%0%1 nodece 72 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 72 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=commonMEM.nonstack.mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1322467930
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73
=pc L0%0%1_L0%0%1 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1073677376 : BV:32
=symbol.4
1 : 1610676320 : BV:32
=symbol.1
1 : 3221224448 { -1073742848 } : BV:32
=symbol.2
1 : 2147355760 : BV:32
=dst_symbol_addr.1
1 : 3221224448 { -1073742848 } : BV:32
=dst_symbol_addr.2
1 : 2147355760 : BV:32
=dst_symbol_addr.3
1 : 1073677376 : BV:32
=dst_symbol_addr.4
1 : 1610676320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294811644 { -155652 } : BV:32
=input.src.llvm-mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1610804319 : BV:32
=stack.size
1 : 1073459200 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3221352447 { -1073614849 } : BV:32
=input.dst.mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1610676320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221224448 { -1073742848 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147483759 { -2147483537 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1073805375 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147355760 : BV:32
=memlabel-mem-esp_begin
1 : 3221352448 { -1073614848 } : BV:32
=memlabel-mem-esp_end
1 : 4294811647 { -155649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1073677376 : BV:32
=commonMEM.nonstack.mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 4294967041 { -255 } : BV:32
=unaliased_memslot.2
1 : 4294967281 { -15 } : BV:32
=unaliased_memslot.7
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.4
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.5
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.6
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.10
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.8
1 : 4294967049 { -247 } : BV:32
=unaliased_memslot.9
1 : 4294967047 { -249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1864652544
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73 nodece_path
=pc L0%0%1_L0%0%1 nodece 73 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 73 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1073677376 : BV:32
=symbol.4
1 : 1610676320 : BV:32
=symbol.1
1 : 3221224448 { -1073742848 } : BV:32
=symbol.2
1 : 2147355760 : BV:32
=dst_symbol_addr.1
1 : 3221224448 { -1073742848 } : BV:32
=dst_symbol_addr.2
1 : 2147355760 : BV:32
=dst_symbol_addr.3
1 : 1073677376 : BV:32
=dst_symbol_addr.4
1 : 1610676320 : BV:32
=input_stack_pointer_const
1 : 4294811644 { -155652 } : BV:32
=input.src.llvm-mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1610804319 : BV:32
=stack.size
1 : 1073459200 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3221352447 { -1073614849 } : BV:32
=input.dst.mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1610676320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221224448 { -1073742848 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147483759 { -2147483537 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1073805375 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147355760 : BV:32
=memlabel-mem-esp_begin
1 : 3221352448 { -1073614848 } : BV:32
=memlabel-mem-esp_end
1 : 4294811647 { -155649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1073677376 : BV:32
=commonMEM.nonstack.mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 4294967041 { -255 } : BV:32
=unaliased_memslot.2
1 : 4294967281 { -15 } : BV:32
=unaliased_memslot.7
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.4
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.5
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.6
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.10
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.8
1 : 4294967049 { -247 } : BV:32
=unaliased_memslot.9
1 : 4294967047 { -249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1864652544
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74
=pc L0%0%1_L0%0%1 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 856937440 : BV:32
=symbol.4
1 : 829543312 : BV:32
=symbol.1
1 : 822072272 : BV:32
=symbol.2
1 : 796781568 : BV:32
=dst_symbol_addr.1
1 : 822072272 : BV:32
=dst_symbol_addr.2
1 : 796781568 : BV:32
=dst_symbol_addr.3
1 : 856937440 : BV:32
=dst_symbol_addr.4
1 : 829543312 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 774340604 : BV:32
=input.src.llvm-mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 829671311 : BV:32
=stack.size
1 : 471957504 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822200271 : BV:32
=input.dst.mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 829543312 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 822072272 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 796909567 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 857065439 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 796781568 : BV:32
=memlabel-mem-esp_begin
1 : 302383104 : BV:32
=memlabel-mem-esp_end
1 : 774340607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 856937440 : BV:32
=commonMEM.nonstack.mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 15 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
269374550
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74 nodece_path
=pc L0%0%1_L0%0%1 nodece 74 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 74 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 856937440 : BV:32
=symbol.4
1 : 829543312 : BV:32
=symbol.1
1 : 822072272 : BV:32
=symbol.2
1 : 796781568 : BV:32
=dst_symbol_addr.1
1 : 822072272 : BV:32
=dst_symbol_addr.2
1 : 796781568 : BV:32
=dst_symbol_addr.3
1 : 856937440 : BV:32
=dst_symbol_addr.4
1 : 829543312 : BV:32
=input_stack_pointer_const
1 : 774340604 : BV:32
=input.src.llvm-mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 829671311 : BV:32
=stack.size
1 : 471957504 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822200271 : BV:32
=input.dst.mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 829543312 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 822072272 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 796909567 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 857065439 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 796781568 : BV:32
=memlabel-mem-esp_begin
1 : 302383104 : BV:32
=memlabel-mem-esp_end
1 : 774340607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 856937440 : BV:32
=commonMEM.nonstack.mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 15 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
269374550
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75
=pc L0%0%1_L0%0%1 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=commonMEM.nonstack.mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1844208513
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75 nodece_path
=pc L0%0%1_L0%0%1 nodece 75 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 75 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=commonMEM.nonstack.mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1844208513
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76
=pc L0%0%1_L0%0%1 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294443040 { -524256 } : BV:32
=symbol.4
1 : 4294834176 { -133120 } : BV:32
=symbol.1
1 : 4294705536 { -261760 } : BV:32
=symbol.2
1 : 4286316544 { -8650752 } : BV:32
=dst_symbol_addr.1
1 : 4294705536 { -261760 } : BV:32
=dst_symbol_addr.2
1 : 4286316544 { -8650752 } : BV:32
=dst_symbol_addr.3
1 : 4294443040 { -524256 } : BV:32
=dst_symbol_addr.4
1 : 4294834176 { -133120 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3489398780 { -805568516 } : BV:32
=input.src.llvm-mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4294962175 { -5121 } : BV:32
=stack.size
1 : 3489394688 { -805572608 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294833535 { -133761 } : BV:32
=input.dst.mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4294834176 { -133120 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294705536 { -261760 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4286444543 { -8522753 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294571039 { -396257 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286316544 { -8650752 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-esp_end
1 : 3489398783 { -805568513 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294443040 { -524256 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294901821 { -65475 } : BV:32
=unaliased_memslot.0
1 : 4294967236 { -60 } : BV:32
=unaliased_memslot.3
1 : 4294901791 { -65505 } : BV:32
=unaliased_memslot.2
1 : 4294967099 { -197 } : BV:32
=unaliased_memslot.7
1 : 4294901772 { -65524 } : BV:32
=unaliased_memslot.4
1 : 4294901775 { -65521 } : BV:32
=unaliased_memslot.5
1 : 4294967278 { -18 } : BV:32
=unaliased_memslot.6
1 : 4294901773 { -65523 } : BV:32
=unaliased_memslot.8
1 : 4294901979 { -65317 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1024641629
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76 nodece_path
=pc L0%0%1_L0%0%1 nodece 76 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 76 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294443040 { -524256 } : BV:32
=symbol.4
1 : 4294834176 { -133120 } : BV:32
=symbol.1
1 : 4294705536 { -261760 } : BV:32
=symbol.2
1 : 4286316544 { -8650752 } : BV:32
=dst_symbol_addr.1
1 : 4294705536 { -261760 } : BV:32
=dst_symbol_addr.2
1 : 4286316544 { -8650752 } : BV:32
=dst_symbol_addr.3
1 : 4294443040 { -524256 } : BV:32
=dst_symbol_addr.4
1 : 4294834176 { -133120 } : BV:32
=input_stack_pointer_const
1 : 3489398780 { -805568516 } : BV:32
=input.src.llvm-mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4294962175 { -5121 } : BV:32
=stack.size
1 : 3489394688 { -805572608 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294833535 { -133761 } : BV:32
=input.dst.mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4294834176 { -133120 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294705536 { -261760 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4286444543 { -8522753 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294571039 { -396257 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286316544 { -8650752 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-esp_end
1 : 3489398783 { -805568513 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294443040 { -524256 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294901821 { -65475 } : BV:32
=unaliased_memslot.0
1 : 4294967236 { -60 } : BV:32
=unaliased_memslot.3
1 : 4294901791 { -65505 } : BV:32
=unaliased_memslot.2
1 : 4294967099 { -197 } : BV:32
=unaliased_memslot.7
1 : 4294901772 { -65524 } : BV:32
=unaliased_memslot.4
1 : 4294901775 { -65521 } : BV:32
=unaliased_memslot.5
1 : 4294967278 { -18 } : BV:32
=unaliased_memslot.6
1 : 4294901773 { -65523 } : BV:32
=unaliased_memslot.8
1 : 4294901979 { -65317 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1024641629
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77
=pc L0%0%1_L0%0%1 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147288576 : BV:32
=symbol.4
1 : 1073548288 : BV:32
=symbol.1
1 : 536779248 : BV:32
=symbol.2
1 : 269142912 : BV:32
=dst_symbol_addr.1
1 : 536779248 : BV:32
=dst_symbol_addr.2
1 : 269142912 : BV:32
=dst_symbol_addr.3
1 : 2147288576 : BV:32
=dst_symbol_addr.4
1 : 1073548288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 233537532 : BV:32
=input.src.llvm-mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1073676287 : BV:32
=stack.size
1 : 99053568 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536907247 : BV:32
=input.dst.mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1073548288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536779248 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 269270911 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147416575 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 269142912 : BV:32
=memlabel-mem-esp_begin
1 : 134483968 : BV:32
=memlabel-mem-esp_end
1 : 233537535 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147288576 : BV:32
=commonMEM.nonstack.mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 15 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 20 : BV:32
=unaliased_memslot.7
1 : 7 : BV:32
=unaliased_memslot.4
1 : 4 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 21 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
617577122
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77 nodece_path
=pc L0%0%1_L0%0%1 nodece 77 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 77 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147288576 : BV:32
=symbol.4
1 : 1073548288 : BV:32
=symbol.1
1 : 536779248 : BV:32
=symbol.2
1 : 269142912 : BV:32
=dst_symbol_addr.1
1 : 536779248 : BV:32
=dst_symbol_addr.2
1 : 269142912 : BV:32
=dst_symbol_addr.3
1 : 2147288576 : BV:32
=dst_symbol_addr.4
1 : 1073548288 : BV:32
=input_stack_pointer_const
1 : 233537532 : BV:32
=input.src.llvm-mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1073676287 : BV:32
=stack.size
1 : 99053568 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536907247 : BV:32
=input.dst.mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1073548288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536779248 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 269270911 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147416575 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 269142912 : BV:32
=memlabel-mem-esp_begin
1 : 134483968 : BV:32
=memlabel-mem-esp_end
1 : 233537535 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147288576 : BV:32
=commonMEM.nonstack.mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 15 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 20 : BV:32
=unaliased_memslot.7
1 : 7 : BV:32
=unaliased_memslot.4
1 : 4 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 21 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
617577122
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78
=pc L0%0%1_L0%0%1 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 976912384 : BV:32
=symbol.4
1 : 3388936704 { -906030592 } : BV:32
=symbol.1
1 : 821952512 : BV:32
=symbol.2
1 : 368994320 : BV:32
=dst_symbol_addr.1
1 : 821952512 : BV:32
=dst_symbol_addr.2
1 : 368994320 : BV:32
=dst_symbol_addr.3
1 : 976912384 : BV:32
=dst_symbol_addr.4
1 : 3388936704 { -906030592 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147483644 : BV:32
=input.src.llvm-mem
1 : (( 368994328 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3389064703 { -905902593 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822080511 : BV:32
=input.dst.mem
1 : (( 368994328 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3388936704 { -906030592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 821952512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 369122319 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 977040383 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 368994320 : BV:32
=memlabel-mem-esp_begin
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 976912384 : BV:32
=commonMEM.nonstack.mem
1 : (( 368994328 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 2 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1800447351
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78 nodece_path
=pc L0%0%1_L0%0%1 nodece 78 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 78 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 976912384 : BV:32
=symbol.4
1 : 3388936704 { -906030592 } : BV:32
=symbol.1
1 : 821952512 : BV:32
=symbol.2
1 : 368994320 : BV:32
=dst_symbol_addr.1
1 : 821952512 : BV:32
=dst_symbol_addr.2
1 : 368994320 : BV:32
=dst_symbol_addr.3
1 : 976912384 : BV:32
=dst_symbol_addr.4
1 : 3388936704 { -906030592 } : BV:32
=input_stack_pointer_const
1 : 2147483644 : BV:32
=input.src.llvm-mem
1 : (( 368994328 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3389064703 { -905902593 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822080511 : BV:32
=input.dst.mem
1 : (( 368994328 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3388936704 { -906030592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 821952512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 369122319 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 977040383 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 368994320 : BV:32
=memlabel-mem-esp_begin
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 976912384 : BV:32
=commonMEM.nonstack.mem
1 : (( 368994328 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 2 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1800447351
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79
=pc L0%0%1_L0%0%1 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 402653168 : BV:32
=symbol.4
1 : 234761232 : BV:32
=symbol.1
1 : 3360566288 { -934401008 } : BV:32
=symbol.2
1 : 1967120 : BV:32
=dst_symbol_addr.1
1 : 3360566288 { -934401008 } : BV:32
=dst_symbol_addr.2
1 : 1967120 : BV:32
=dst_symbol_addr.3
1 : 402653168 : BV:32
=dst_symbol_addr.4
1 : 234761232 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2818269180 { -1476698116 } : BV:32
=input.src.llvm-mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 234889231 : BV:32
=stack.size
1 : 2281697280 { -2013270016 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3360694287 { -934273009 } : BV:32
=input.dst.mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 234761232 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3360566288 { -934401008 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2095119 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 402781167 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1967120 : BV:32
=memlabel-mem-esp_begin
1 : 536571904 : BV:32
=memlabel-mem-esp_end
1 : 2818269183 { -1476698113 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 402653168 : BV:32
=commonMEM.nonstack.mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 33685504 : BV:32
=unaliased_memslot.0
1 : 33685504 : BV:32
=unaliased_memslot.3
1 : 33685506 : BV:32
=unaliased_memslot.2
1 : 33685506 : BV:32
=unaliased_memslot.7
1 : 33685506 : BV:32
=unaliased_memslot.4
1 : 33685536 : BV:32
=unaliased_memslot.5
1 : 33685506 : BV:32
=unaliased_memslot.6
1 : 33685506 : BV:32
=unaliased_memslot.10
1 : 33685536 : BV:32
=unaliased_memslot.8
1 : 33685506 : BV:32
=unaliased_memslot.9
1 : 33685536 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1994766608
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79 nodece_path
=pc L0%0%1_L0%0%1 nodece 79 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 79 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 402653168 : BV:32
=symbol.4
1 : 234761232 : BV:32
=symbol.1
1 : 3360566288 { -934401008 } : BV:32
=symbol.2
1 : 1967120 : BV:32
=dst_symbol_addr.1
1 : 3360566288 { -934401008 } : BV:32
=dst_symbol_addr.2
1 : 1967120 : BV:32
=dst_symbol_addr.3
1 : 402653168 : BV:32
=dst_symbol_addr.4
1 : 234761232 : BV:32
=input_stack_pointer_const
1 : 2818269180 { -1476698116 } : BV:32
=input.src.llvm-mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 234889231 : BV:32
=stack.size
1 : 2281697280 { -2013270016 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3360694287 { -934273009 } : BV:32
=input.dst.mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 234761232 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3360566288 { -934401008 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2095119 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 402781167 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1967120 : BV:32
=memlabel-mem-esp_begin
1 : 536571904 : BV:32
=memlabel-mem-esp_end
1 : 2818269183 { -1476698113 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 402653168 : BV:32
=commonMEM.nonstack.mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 33685504 : BV:32
=unaliased_memslot.0
1 : 33685504 : BV:32
=unaliased_memslot.3
1 : 33685506 : BV:32
=unaliased_memslot.2
1 : 33685506 : BV:32
=unaliased_memslot.7
1 : 33685506 : BV:32
=unaliased_memslot.4
1 : 33685536 : BV:32
=unaliased_memslot.5
1 : 33685506 : BV:32
=unaliased_memslot.6
1 : 33685506 : BV:32
=unaliased_memslot.10
1 : 33685536 : BV:32
=unaliased_memslot.8
1 : 33685506 : BV:32
=unaliased_memslot.9
1 : 33685536 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1994766608
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80
=pc L0%0%1_L0%0%1 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221160288 { -1073807008 } : BV:32
=symbol.4
1 : 2153644064 { -2141323232 } : BV:32
=symbol.1
1 : 2151608656 { -2143358640 } : BV:32
=symbol.2
1 : 1281230848 : BV:32
=dst_symbol_addr.1
1 : 2151608656 { -2143358640 } : BV:32
=dst_symbol_addr.2
1 : 1281230848 : BV:32
=dst_symbol_addr.3
1 : 3221160288 { -1073807008 } : BV:32
=dst_symbol_addr.4
1 : 2153644064 { -2141323232 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1071611900 : BV:32
=input.src.llvm-mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2153772063 { -2141195233 } : BV:32
=stack.size
1 : 360804352 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2151736655 { -2143230641 } : BV:32
=input.dst.mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2153644064 { -2141323232 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2151608656 { -2143358640 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1281358847 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221288287 { -1073679009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1281230848 : BV:32
=memlabel-mem-esp_begin
1 : 710807552 : BV:32
=memlabel-mem-esp_end
1 : 1071611903 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221160288 { -1073807008 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.7
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 5 : BV:32
=unaliased_memslot.6
1 : 4 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 3 : BV:32
=unaliased_memslot.9
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1465724345
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80 nodece_path
=pc L0%0%1_L0%0%1 nodece 80 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 80 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3221160288 { -1073807008 } : BV:32
=symbol.4
1 : 2153644064 { -2141323232 } : BV:32
=symbol.1
1 : 2151608656 { -2143358640 } : BV:32
=symbol.2
1 : 1281230848 : BV:32
=dst_symbol_addr.1
1 : 2151608656 { -2143358640 } : BV:32
=dst_symbol_addr.2
1 : 1281230848 : BV:32
=dst_symbol_addr.3
1 : 3221160288 { -1073807008 } : BV:32
=dst_symbol_addr.4
1 : 2153644064 { -2141323232 } : BV:32
=input_stack_pointer_const
1 : 1071611900 : BV:32
=input.src.llvm-mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2153772063 { -2141195233 } : BV:32
=stack.size
1 : 360804352 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2151736655 { -2143230641 } : BV:32
=input.dst.mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2153644064 { -2141323232 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2151608656 { -2143358640 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1281358847 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221288287 { -1073679009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1281230848 : BV:32
=memlabel-mem-esp_begin
1 : 710807552 : BV:32
=memlabel-mem-esp_end
1 : 1071611903 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221160288 { -1073807008 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.7
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 5 : BV:32
=unaliased_memslot.6
1 : 4 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 3 : BV:32
=unaliased_memslot.9
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1465724345
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81
=pc L0%0%1_L0%0%1 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342180352 : BV:32
=symbol.4
1 : 1286627856 : BV:32
=symbol.1
1 : 1879047680 : BV:32
=symbol.2
1 : 1689340672 : BV:32
=dst_symbol_addr.1
1 : 1879047680 : BV:32
=dst_symbol_addr.2
1 : 1689340672 : BV:32
=dst_symbol_addr.3
1 : 1342180352 : BV:32
=dst_symbol_addr.4
1 : 1286627856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1879047684 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1286755855 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1879175679 : BV:32
=input.dst.mem
1 : (( 1879047684 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1286627856 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1879047680 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1689468671 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342308351 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1689340672 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342180352 : BV:32
=commonMEM.nonstack.mem
1 : (( 1879047684 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
734548334
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81 nodece_path
=pc L0%0%1_L0%0%1 nodece 81 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 81 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1342180352 : BV:32
=symbol.4
1 : 1286627856 : BV:32
=symbol.1
1 : 1879047680 : BV:32
=symbol.2
1 : 1689340672 : BV:32
=dst_symbol_addr.1
1 : 1879047680 : BV:32
=dst_symbol_addr.2
1 : 1689340672 : BV:32
=dst_symbol_addr.3
1 : 1342180352 : BV:32
=dst_symbol_addr.4
1 : 1286627856 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1879047684 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1286755855 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1879175679 : BV:32
=input.dst.mem
1 : (( 1879047684 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1286627856 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1879047680 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1689468671 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342308351 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1689340672 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342180352 : BV:32
=commonMEM.nonstack.mem
1 : (( 1879047684 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
734548334
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82
=pc L0%0%1_L0%0%1 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 135104 : BV:32
=symbol.4
1 : 392192 : BV:32
=symbol.1
1 : 2112 : BV:32
=symbol.2
1 : 264192 : BV:32
=dst_symbol_addr.1
1 : 2112 : BV:32
=dst_symbol_addr.2
1 : 264192 : BV:32
=dst_symbol_addr.3
1 : 135104 : BV:32
=dst_symbol_addr.4
1 : 392192 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 520191 : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130111 : BV:32
=input.dst.mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 392192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 392191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 263103 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 264192 : BV:32
=memlabel-mem-esp_begin
1 : 520192 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 135104 : BV:32
=commonMEM.nonstack.mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 50528256 : BV:32
=unaliased_memslot.0
1 : 50528256 : BV:32
=unaliased_memslot.3
1 : 50528259 : BV:32
=unaliased_memslot.2
1 : 50528256 : BV:32
=unaliased_memslot.7
1 : 50528256 : BV:32
=unaliased_memslot.4
1 : 50528259 : BV:32
=unaliased_memslot.5
1 : 50528256 : BV:32
=unaliased_memslot.6
1 : 50528257 : BV:32
=unaliased_memslot.10
1 : 50528256 : BV:32
=unaliased_memslot.8
1 : 50528256 : BV:32
=unaliased_memslot.9
1 : 50528256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
750630257
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82 nodece_path
=pc L0%0%1_L0%0%1 nodece 82 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 82 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 135104 : BV:32
=symbol.4
1 : 392192 : BV:32
=symbol.1
1 : 2112 : BV:32
=symbol.2
1 : 264192 : BV:32
=dst_symbol_addr.1
1 : 2112 : BV:32
=dst_symbol_addr.2
1 : 264192 : BV:32
=dst_symbol_addr.3
1 : 135104 : BV:32
=dst_symbol_addr.4
1 : 392192 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 520191 : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130111 : BV:32
=input.dst.mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 392192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 392191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 263103 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 264192 : BV:32
=memlabel-mem-esp_begin
1 : 520192 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 135104 : BV:32
=commonMEM.nonstack.mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 50528256 : BV:32
=unaliased_memslot.0
1 : 50528256 : BV:32
=unaliased_memslot.3
1 : 50528259 : BV:32
=unaliased_memslot.2
1 : 50528256 : BV:32
=unaliased_memslot.7
1 : 50528256 : BV:32
=unaliased_memslot.4
1 : 50528259 : BV:32
=unaliased_memslot.5
1 : 50528256 : BV:32
=unaliased_memslot.6
1 : 50528257 : BV:32
=unaliased_memslot.10
1 : 50528256 : BV:32
=unaliased_memslot.8
1 : 50528256 : BV:32
=unaliased_memslot.9
1 : 50528256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
750630257
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83
=pc L0%0%1_L0%0%1 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4011054048 { -283913248 } : BV:32
=symbol.4
1 : 2918306704 { -1376660592 } : BV:32
=symbol.1
1 : 2399130576 { -1895836720 } : BV:32
=symbol.2
1 : 570289152 : BV:32
=dst_symbol_addr.1
1 : 2399130576 { -1895836720 } : BV:32
=dst_symbol_addr.2
1 : 570289152 : BV:32
=dst_symbol_addr.3
1 : 4011054048 { -283913248 } : BV:32
=dst_symbol_addr.4
1 : 2918306704 { -1376660592 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 551911420 : BV:32
=input.src.llvm-mem
1 : (( 570289156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2918434703 { -1376532593 } : BV:32
=stack.size
1 : 283344896 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2399258575 { -1895708721 } : BV:32
=input.dst.mem
1 : (( 570289156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2918306704 { -1376660592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2399130576 { -1895836720 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 570417151 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4011182047 { -283785249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 570289152 : BV:32
=memlabel-mem-esp_begin
1 : 268566528 : BV:32
=memlabel-mem-esp_end
1 : 551911423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4011054048 { -283913248 } : BV:32
=commonMEM.nonstack.mem
1 : (( 570289156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
421136977
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83 nodece_path
=pc L0%0%1_L0%0%1 nodece 83 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 83 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4011054048 { -283913248 } : BV:32
=symbol.4
1 : 2918306704 { -1376660592 } : BV:32
=symbol.1
1 : 2399130576 { -1895836720 } : BV:32
=symbol.2
1 : 570289152 : BV:32
=dst_symbol_addr.1
1 : 2399130576 { -1895836720 } : BV:32
=dst_symbol_addr.2
1 : 570289152 : BV:32
=dst_symbol_addr.3
1 : 4011054048 { -283913248 } : BV:32
=dst_symbol_addr.4
1 : 2918306704 { -1376660592 } : BV:32
=input_stack_pointer_const
1 : 551911420 : BV:32
=input.src.llvm-mem
1 : (( 570289156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2918434703 { -1376532593 } : BV:32
=stack.size
1 : 283344896 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2399258575 { -1895708721 } : BV:32
=input.dst.mem
1 : (( 570289156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2918306704 { -1376660592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2399130576 { -1895836720 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 570417151 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4011182047 { -283785249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 570289152 : BV:32
=memlabel-mem-esp_begin
1 : 268566528 : BV:32
=memlabel-mem-esp_end
1 : 551911423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4011054048 { -283913248 } : BV:32
=commonMEM.nonstack.mem
1 : (( 570289156 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
421136977
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84
=pc L0%0%1_L0%0%1 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 478151168 : BV:32
=symbol.4
1 : 1813086224 : BV:32
=symbol.1
1 : 1878920704 : BV:32
=symbol.2
1 : 479244288 : BV:32
=dst_symbol_addr.1
1 : 1878920704 : BV:32
=dst_symbol_addr.2
1 : 479244288 : BV:32
=dst_symbol_addr.3
1 : 478151168 : BV:32
=dst_symbol_addr.4
1 : 1813086224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 479244288 ) -> 1, ( 478151168 ) -> 1, ( 478151172 ) -> 1, ( 479244292 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1813214223 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1879048703 : BV:32
=input.dst.mem
1 : (( 479244288 ) -> 1, ( 478151168 ) -> 1, ( 478151172 ) -> 1, ( 479244292 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1813086224 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1878920704 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 479372287 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 478279167 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 479244288 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 478151168 : BV:32
=commonMEM.nonstack.mem
1 : (( 479244288 ) -> 1, ( 478151168 ) -> 1, ( 478151172 ) -> 1, ( 479244292 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 2 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1372824807
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84 nodece_path
=pc L0%0%1_L0%0%1 nodece 84 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 84 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 478151168 : BV:32
=symbol.4
1 : 1813086224 : BV:32
=symbol.1
1 : 1878920704 : BV:32
=symbol.2
1 : 479244288 : BV:32
=dst_symbol_addr.1
1 : 1878920704 : BV:32
=dst_symbol_addr.2
1 : 479244288 : BV:32
=dst_symbol_addr.3
1 : 478151168 : BV:32
=dst_symbol_addr.4
1 : 1813086224 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 479244288 ) -> 1, ( 478151168 ) -> 1, ( 478151172 ) -> 1, ( 479244292 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1813214223 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1879048703 : BV:32
=input.dst.mem
1 : (( 479244288 ) -> 1, ( 478151168 ) -> 1, ( 478151172 ) -> 1, ( 479244292 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1813086224 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1878920704 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 479372287 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 478279167 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 479244288 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 478151168 : BV:32
=commonMEM.nonstack.mem
1 : (( 479244288 ) -> 1, ( 478151168 ) -> 1, ( 478151172 ) -> 1, ( 479244292 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 2 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1372824807
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85
=pc L0%0%1_L0%0%1 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1629779269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85 nodece_path
=pc L0%0%1_L0%0%1 nodece 85 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 85 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1629779269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86
=pc L0%0%1_L0%0%1 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
195786338
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86 nodece_path
=pc L0%0%1_L0%0%1 nodece 86 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 86 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
195786338
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 87
=pc L0%0%1_L0%0%1 nodece 87 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 240 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 240 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2020261837
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 87 nodece_path
=pc L0%0%1_L0%0%1 nodece 87 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 87 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 240 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 240 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2020261837
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 88
=pc L0%0%1_L0%0%1 nodece 88 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1778413934
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 88 nodece_path
=pc L0%0%1_L0%0%1 nodece 88 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 88 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1778413934
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 89
=pc L0%0%1_L0%0%1 nodece 89 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
134606994
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 89 nodece_path
=pc L0%0%1_L0%0%1 nodece 89 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 89 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
134606994
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 90
=pc L0%0%1_L0%0%1 nodece 90 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 132)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 132)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1464147094
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 90 nodece_path
=pc L0%0%1_L0%0%1 nodece 90 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 90 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 132)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 222 , m_adder -> 132)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1464147094
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2143707132 ) -> 0, ( 2143707135 ) -> 0, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2143707132 ) -> 255, ( 2143707135 ) -> 255, ( 2143707134 ) -> 255, ( 2143707133 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2143707132 ) -> 0, ( 2143707135 ) -> 128, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, () -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2143707132 ) -> 0, ( 2143707135 ) -> 0, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, () -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014822824
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2143707132 ) -> 0, ( 2143707135 ) -> 0, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, () -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014822824
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
235649157
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
235649157
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379736148
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2143707132 ) -> 0, ( 2143707135 ) -> 0, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, () -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379736148
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
655495367
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874880 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
655495367
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1407392292
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874884 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1407392292
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281830857
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 2143707132 ) -> 0, ( 2143707135 ) -> 0, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281830857
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386418627
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386418627
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156541312
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156541312
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 10219522 : BV:32
=unaliased_memslot.0
1 : 3636574 : BV:32
=unaliased_memslot.3
1 : 1127826782 : BV:32
=unaliased_memslot.2
1 : 4635487 : BV:32
=unaliased_memslot.7
1 : 56178255 : BV:32
=unaliased_memslot.4
1 : 1125731951 : BV:32
=unaliased_memslot.5
1 : 308082334 : BV:32
=unaliased_memslot.6
1 : 33192267 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635550270
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 2143707132 ) -> 0, ( 1610874880 ) -> 94, ( 2143707135 ) -> 0, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 2, ( 1342571520 ) -> 95, ( 1610874880 ) -> 94, ( 1610874881 ) -> 125, ( 1610874882 ) -> 55, ( 1610874883 ) -> 0, ( 2231265 ) -> 240, ( 2231266 ) -> 155, ( 2231267 ) -> 0, ( 1342571521 ) -> 187, ( 1342571522 ) -> 70, ( 1342571523 ) -> 0, ( 2231268 ) -> 111, ( 2231269 ) -> 78, ( 2231270 ) -> 25, ( 2231271 ) -> 67, ( 1342571524 ) -> 94, ( 1342571525 ) -> 69, ( 1342571526 ) -> 57, ( 1342571527 ) -> 67, ( 1610874888 ) -> 158, ( 1610874889 ) -> 246, ( 1610874890 ) -> 92, ( 1610874891 ) -> 18, ( 2231272 ) -> 75, ( 2231273 ) -> 121, ( 2231274 ) -> 250, ( 1342571528 ) -> 79, ( 1342571529 ) -> 54, ( 1342571530 ) -> 89, ( 1342571531 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 10219522 : BV:32
=unaliased_memslot.0
1 : 3636574 : BV:32
=unaliased_memslot.3
1 : 1127826782 : BV:32
=unaliased_memslot.2
1 : 4635487 : BV:32
=unaliased_memslot.7
1 : 56178255 : BV:32
=unaliased_memslot.4
1 : 1125731951 : BV:32
=unaliased_memslot.5
1 : 308082334 : BV:32
=unaliased_memslot.6
1 : 33192267 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635550270
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 5245153 : BV:32
=unaliased_memslot.0
1 : 6425585 : BV:32
=unaliased_memslot.3
1 : 3304891188 { -990076108 } : BV:32
=unaliased_memslot.2
1 : 10630487 : BV:32
=unaliased_memslot.7
1 : 14570811 : BV:32
=unaliased_memslot.4
1 : 313624607 : BV:32
=unaliased_memslot.5
1 : 247430669 : BV:32
=unaliased_memslot.6
1 : 7214888 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069110699
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 225, ( 1342571520 ) -> 87, ( 1610874880 ) -> 241, ( 1610874881 ) -> 11, ( 1610874882 ) -> 98, ( 2231265 ) -> 8, ( 2231266 ) -> 80, ( 1342571521 ) -> 53, ( 1342571522 ) -> 162, ( 2231268 ) -> 31, ( 2231269 ) -> 136, ( 2231270 ) -> 177, ( 2231271 ) -> 18, ( 1342571524 ) -> 52, ( 1342571525 ) -> 163, ( 1342571526 ) -> 252, ( 1342571527 ) -> 196, ( 1610874888 ) -> 13, ( 1610874889 ) -> 126, ( 1610874890 ) -> 191, ( 1610874891 ) -> 14, ( 2231272 ) -> 40, ( 2231273 ) -> 23, ( 2231274 ) -> 110, ( 1342571528 ) -> 59, ( 1342571529 ) -> 85, ( 1342571530 ) -> 222, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 5245153 : BV:32
=unaliased_memslot.0
1 : 6425585 : BV:32
=unaliased_memslot.3
1 : 3304891188 { -990076108 } : BV:32
=unaliased_memslot.2
1 : 10630487 : BV:32
=unaliased_memslot.7
1 : 14570811 : BV:32
=unaliased_memslot.4
1 : 313624607 : BV:32
=unaliased_memslot.5
1 : 247430669 : BV:32
=unaliased_memslot.6
1 : 7214888 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069110699
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 8388608 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712633417
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571522 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 8388608 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712633417
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 32768 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845563291
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874893 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 32768 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
845563291
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 538760755 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1066077375
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231268 ) -> 51, ( 2231269 ) -> 214, ( 2231270 ) -> 28, ( 2231271 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 538760755 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1066077375
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1130698571
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1130698571
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2220991241
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2143707132 ) -> 0, ( 2143707135 ) -> 0, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, () -> (RAC: m_multiplier -> 112 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2220991241
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 7 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
628966950
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874888 ) -> 1, ( 2231272 ) -> 7, ( 1342571528 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 7 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
628966950
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 7 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.4
1 : 24 : BV:32
=unaliased_memslot.5
1 : 7 : BV:32
=unaliased_memslot.6
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1520982030
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231272 ) -> 3, ( 1342571528 ) -> 7, ( 1610874892 ) -> 24, ( 2231276 ) -> 7, ( 1342571532 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 7 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.4
1 : 24 : BV:32
=unaliased_memslot.5
1 : 7 : BV:32
=unaliased_memslot.6
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1520982030
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1761250573
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1761250573
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
343945053
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1342571532 ) -> 255, ( 1342571533 ) -> 255, ( 1342571534 ) -> 255, ( 1342571535 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
343945053
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 2 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1579068977
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874880 ) -> 1, ( 2231272 ) -> 1, ( 1610874892 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 2 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1579068977
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 353703168 : BV:32
=unaliased_memslot.0
1 : 353703168 : BV:32
=unaliased_memslot.3
1 : 353703172 : BV:32
=unaliased_memslot.2
1 : 353703168 : BV:32
=unaliased_memslot.7
1 : 353703182 : BV:32
=unaliased_memslot.4
1 : 353703168 : BV:32
=unaliased_memslot.5
1 : 353703171 : BV:32
=unaliased_memslot.6
1 : 353703174 : BV:32
=unaliased_memslot.8
1 : 353703177 : BV:32
=unaliased_memslot.9
1 : 353703189 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
395191309
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 2143707132 ) -> 0, ( 1610874880 ) -> 0, ( 2143707135 ) -> 0, ( 2143707134 ) -> 0, ( 2143707133 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 0, ( 1342571520 ) -> 0, ( 1610874880 ) -> 0, ( 1342571524 ) -> 4, ( 1610874888 ) -> 0, ( 2231272 ) -> 3, ( 1342571528 ) -> 6, ( 1610874892 ) -> 14, ( 2231276 ) -> 9, () -> 21) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 353703168 : BV:32
=unaliased_memslot.0
1 : 353703168 : BV:32
=unaliased_memslot.3
1 : 353703172 : BV:32
=unaliased_memslot.2
1 : 353703168 : BV:32
=unaliased_memslot.7
1 : 353703182 : BV:32
=unaliased_memslot.4
1 : 353703168 : BV:32
=unaliased_memslot.5
1 : 353703171 : BV:32
=unaliased_memslot.6
1 : 353703174 : BV:32
=unaliased_memslot.8
1 : 353703177 : BV:32
=unaliased_memslot.9
1 : 353703189 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
395191309
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1431742587
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231264 ) -> 1, ( 1342571520 ) -> 1, ( 1610874892 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.7
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1431742587
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1610874888 ) -> 1, ( 1610874892 ) -> 1, ( 1342571532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 2231276 ) -> 1, ( 1342571532 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.dst.mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
849725352
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (( 1342571524 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
849725352
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14933990
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
14933990
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1499150323
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1499150323
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910210050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910210050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910210050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610874892 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476815996 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2231276 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342571532 : BV:32
=input.src.llvm-%arrayidx1
1 : 2231276 : BV:32
=input.src.llvm-%arrayidx
1 : 1610874892 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476815996 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342571532 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910210050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910210050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610874908 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476816012 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2231292 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342571548 : BV:32
=input.src.llvm-%arrayidx1
1 : 2231292 : BV:32
=input.src.llvm-%arrayidx
1 : 1610874908 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476816012 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342571548 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910210050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910210050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610874924 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476816028 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2231308 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342571564 : BV:32
=input.src.llvm-%arrayidx1
1 : 2231308 : BV:32
=input.src.llvm-%arrayidx
1 : 1610874924 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476816028 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342571564 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910210050
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
724148075
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610874956 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476816060 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2231340 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342571596 : BV:32
=input.src.llvm-%arrayidx1
1 : 2231340 : BV:32
=input.src.llvm-%arrayidx
1 : 1610874956 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476816060 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342571596 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
724148075
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408691647
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610875020 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476816124 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2231404 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342571660 : BV:32
=input.src.llvm-%arrayidx1
1 : 2231404 : BV:32
=input.src.llvm-%arrayidx
1 : 1610875020 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476816124 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342571660 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408691647
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
726181851
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610875148 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476816252 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2231532 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342571788 : BV:32
=input.src.llvm-%arrayidx1
1 : 2231532 : BV:32
=input.src.llvm-%arrayidx
1 : 1610875148 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476816252 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342571788 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
726181851
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1769789348
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610875404 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476816508 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2231788 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342572044 : BV:32
=input.src.llvm-%arrayidx1
1 : 2231788 : BV:32
=input.src.llvm-%arrayidx
1 : 1610875404 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476816508 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342572044 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1769789348
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1190497565
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610875916 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476817020 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2232300 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342572556 : BV:32
=input.src.llvm-%arrayidx1
1 : 2232300 : BV:32
=input.src.llvm-%arrayidx
1 : 1610875916 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476817020 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342572556 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1190497565
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
669635244
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610876940 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476818044 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2233324 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342573580 : BV:32
=input.src.llvm-%arrayidx1
1 : 2233324 : BV:32
=input.src.llvm-%arrayidx
1 : 1610876940 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476818044 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342573580 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
669635244
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
748051103
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610878988 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476820092 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2235372 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342575628 : BV:32
=input.src.llvm-%arrayidx1
1 : 2235372 : BV:32
=input.src.llvm-%arrayidx
1 : 1610878988 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476820092 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342575628 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
748051103
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1273986264
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610883084 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476824188 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2239468 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342579724 : BV:32
=input.src.llvm-%arrayidx1
1 : 2239468 : BV:32
=input.src.llvm-%arrayidx
1 : 1610883084 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476824188 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342579724 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1273986264
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1169053079
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610891276 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476832380 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2247660 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342587916 : BV:32
=input.src.llvm-%arrayidx1
1 : 2247660 : BV:32
=input.src.llvm-%arrayidx
1 : 1610891276 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476832380 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342587916 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1169053079
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
587632498
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610907660 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476848764 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2264044 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342604300 : BV:32
=input.src.llvm-%arrayidx1
1 : 2264044 : BV:32
=input.src.llvm-%arrayidx
1 : 1610907660 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476848764 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342604300 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
587632498
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069741529
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610940428 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476881532 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2296812 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342637068 : BV:32
=input.src.llvm-%arrayidx1
1 : 2296812 : BV:32
=input.src.llvm-%arrayidx
1 : 1610940428 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476881532 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342637068 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069741529
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
466805858
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1611002860 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 31996 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1476943964 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2359244 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 1342699500 : BV:32
=input.src.llvm-%arrayidx1
1 : 2359244 : BV:32
=input.src.llvm-%arrayidx
1 : 1611002860 : BV:32
=input.src.llvm-%arrayidx4
1 : 1476943964 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1342699500 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
466805858
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1952822940
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1952822940
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1312033081
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1312033081
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
296638053
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2143707132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 1342571520 : BV:32
=symbol.4
1 : 1476815984 : BV:32
=symbol.1
1 : 1610874880 : BV:32
=symbol.2
1 : 2231264 : BV:32
=dst_symbol_addr.1
1 : 1610874880 : BV:32
=dst_symbol_addr.2
1 : 2231264 : BV:32
=dst_symbol_addr.3
1 : 1342571520 : BV:32
=dst_symbol_addr.4
1 : 1476815984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2143707132 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1476943983 : BV:32
=input.dst.esp.L0%1%1
1 : 2143707132 : BV:32
=stack.size
1 : 127942656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1611002879 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1476815984 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610874880 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2359263 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342699519 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2231264 : BV:32
=memlabel-mem-esp_begin
1 : 2015764480 : BV:32
=memlabel-mem-esp_end
1 : 2143707135 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342571520 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
296638053
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3439316988 { -855650308 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=input.dst.esp.L0%1%1
1 : 3439316988 { -855650308 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3439316988 { -855650308 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=input.dst.esp.L0%1%1
1 : 3439316988 { -855650308 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294837276 { -130020 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 4051537548 { -243429748 } : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 3757968412 { -536998884 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 4294705292 { -262004 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3757968412 { -536998884 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294837276 { -130020 } : BV:32
=input.src.llvm-%arrayidx4
1 : 4051537548 { -243429748 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 4294705292 { -262004 } : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3439316988 { -855650308 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=input.dst.esp.L0%1%1
1 : 3439316988 { -855650308 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294837292 { -130004 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 4051537564 { -243429732 } : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 3757968428 { -536998868 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 4294705308 { -261988 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3757968428 { -536998868 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294837292 { -130004 } : BV:32
=input.src.llvm-%arrayidx4
1 : 4051537564 { -243429732 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 4294705308 { -261988 } : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3439316988 { -855650308 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4294705280 { -262016 } : BV:32
=symbol.4
1 : 4051537536 { -243429760 } : BV:32
=symbol.1
1 : 4294837264 { -130032 } : BV:32
=symbol.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.1
1 : 4294837264 { -130032 } : BV:32
=dst_symbol_addr.2
1 : 3757968400 { -536998896 } : BV:32
=dst_symbol_addr.3
1 : 4294705280 { -262016 } : BV:32
=dst_symbol_addr.4
1 : 4051537536 { -243429760 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3439316988 { -855650308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4051665535 { -243301761 } : BV:32
=input.dst.esp.L0%1%1
1 : 3439316988 { -855650308 } : BV:32
=stack.size
1 : 3439296512 { -855670784 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294965263 { -2033 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294837308 { -129988 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 4051537580 { -243429716 } : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 4051537536 { -243429760 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 3757968444 { -536998852 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837264 { -130032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3758096399 { -536870897 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294833279 { -134017 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 4294705324 { -261972 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3757968444 { -536998852 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294837308 { -129988 } : BV:32
=input.src.llvm-%arrayidx4
1 : 4051537580 { -243429716 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 4294705324 { -261972 } : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3757968400 { -536998896 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-esp_end
1 : 3439316991 { -855650305 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294705280 { -262016 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
157840563
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3598833632 { -696133664 } : BV:32
=symbol.4
1 : 2763969424 { -1530997872 } : BV:32
=symbol.1
1 : 2357185744 { -1937781552 } : BV:32
=symbol.2
1 : 1108208640 : BV:32
=dst_symbol_addr.1
1 : 2357185744 { -1937781552 } : BV:32
=dst_symbol_addr.2
1 : 1108208640 : BV:32
=dst_symbol_addr.3
1 : 3598833632 { -696133664 } : BV:32
=dst_symbol_addr.4
1 : 2763969424 { -1530997872 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 876707836 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2764097423 { -1530869873 } : BV:32
=stack.size
1 : 859668480 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2357313743 { -1937653553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2763969424 { -1530997872 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2357185744 { -1937781552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1108336639 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3598961631 { -696005665 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1108208640 : BV:32
=memlabel-mem-esp_begin
1 : 17039360 : BV:32
=memlabel-mem-esp_end
1 : 876707839 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3598833632 { -696133664 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1538044131
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 876707836 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3598833632 { -696133664 } : BV:32
=symbol.4
1 : 2763969424 { -1530997872 } : BV:32
=symbol.1
1 : 2357185744 { -1937781552 } : BV:32
=symbol.2
1 : 1108208640 : BV:32
=dst_symbol_addr.1
1 : 2357185744 { -1937781552 } : BV:32
=dst_symbol_addr.2
1 : 1108208640 : BV:32
=dst_symbol_addr.3
1 : 3598833632 { -696133664 } : BV:32
=dst_symbol_addr.4
1 : 2763969424 { -1530997872 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 876707836 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2764097423 { -1530869873 } : BV:32
=input.dst.esp.L0%1%1
1 : 876707836 : BV:32
=stack.size
1 : 859668480 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2357313743 { -1937653553 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2763969424 { -1530997872 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2357185744 { -1937781552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1108336639 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3598961631 { -696005665 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1108208640 : BV:32
=memlabel-mem-esp_begin
1 : 17039360 : BV:32
=memlabel-mem-esp_end
1 : 876707839 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3598833632 { -696133664 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1538044131
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 128 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 128 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333539335
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 128 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 128 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333539335
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 103157504 : BV:32
=symbol.4
1 : 2147418368 : BV:32
=symbol.1
1 : 184980096 : BV:32
=symbol.2
1 : 1275012336 : BV:32
=dst_symbol_addr.1
1 : 184980096 : BV:32
=dst_symbol_addr.2
1 : 1275012336 : BV:32
=dst_symbol_addr.3
1 : 103157504 : BV:32
=dst_symbol_addr.4
1 : 2147418368 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1140887548 : BV:32
=input.src.llvm-mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147546367 { -2147420929 } : BV:32
=stack.size
1 : 894521344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 185108095 : BV:32
=input.dst.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147418368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 184980096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1275140335 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 103285503 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1275012336 : BV:32
=memlabel-mem-esp_begin
1 : 246366208 : BV:32
=memlabel-mem-esp_end
1 : 1140887551 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 103157504 : BV:32
=commonMEM.nonstack.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 1845990 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1067604223
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1140887548 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 103157504 : BV:32
=symbol.4
1 : 2147418368 : BV:32
=symbol.1
1 : 184980096 : BV:32
=symbol.2
1 : 1275012336 : BV:32
=dst_symbol_addr.1
1 : 184980096 : BV:32
=dst_symbol_addr.2
1 : 1275012336 : BV:32
=dst_symbol_addr.3
1 : 103157504 : BV:32
=dst_symbol_addr.4
1 : 2147418368 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1140887548 : BV:32
=input.src.llvm-mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147546367 { -2147420929 } : BV:32
=input.dst.esp.L0%1%1
1 : 1140887548 : BV:32
=stack.size
1 : 894521344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 185108095 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147418368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 184980096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1275140335 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 103285503 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1275012336 : BV:32
=memlabel-mem-esp_begin
1 : 246366208 : BV:32
=memlabel-mem-esp_end
1 : 1140887551 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 103157504 : BV:32
=commonMEM.nonstack.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 1845990 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1067604223
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 103157504 : BV:32
=symbol.4
1 : 2147418368 : BV:32
=symbol.1
1 : 184980096 : BV:32
=symbol.2
1 : 1275012336 : BV:32
=dst_symbol_addr.1
1 : 184980096 : BV:32
=dst_symbol_addr.2
1 : 1275012336 : BV:32
=dst_symbol_addr.3
1 : 103157504 : BV:32
=dst_symbol_addr.4
1 : 2147418368 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1140887548 : BV:32
=input.src.llvm-mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147546367 { -2147420929 } : BV:32
=stack.size
1 : 894521344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 185108095 : BV:32
=input.dst.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147418368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 184980096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1275140335 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 103285503 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1275012336 : BV:32
=memlabel-mem-esp_begin
1 : 246366208 : BV:32
=memlabel-mem-esp_end
1 : 1140887551 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 103157504 : BV:32
=commonMEM.nonstack.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 1845990 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1067604223
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1140887548 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 1770014372 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 103157504 : BV:32
=symbol.4
1 : 2147418368 : BV:32
=symbol.1
1 : 184980096 : BV:32
=symbol.2
1 : 1275012336 : BV:32
=dst_symbol_addr.1
1 : 184980096 : BV:32
=dst_symbol_addr.2
1 : 1275012336 : BV:32
=dst_symbol_addr.3
1 : 103157504 : BV:32
=dst_symbol_addr.4
1 : 2147418368 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1140887548 : BV:32
=input.src.llvm-mem
1 : (( 2147418368 ) -> 164, ( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, ( 2147418371 ) -> 105, ( 2147418370 ) -> 128, ( 2147418369 ) -> 70, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147546367 { -2147420929 } : BV:32
=input.dst.esp.L0%1%1
1 : 1140887548 : BV:32
=stack.size
1 : 894521344 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 185108095 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 184980108 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (( 2147418368 ) -> 164, ( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, ( 2147418371 ) -> 105, ( 2147418370 ) -> 128, ( 2147418369 ) -> 70, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 2147418380 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 2147418368 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1275012348 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 184980096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1275140335 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 103285503 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 103157516 : BV:32
=input.src.llvm-%arrayidx1
1 : 1275012348 : BV:32
=input.src.llvm-%arrayidx
1 : 184980108 : BV:32
=input.src.llvm-%arrayidx4
1 : 2147418380 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 103157516 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1275012336 : BV:32
=memlabel-mem-esp_begin
1 : 246366208 : BV:32
=memlabel-mem-esp_end
1 : 1140887551 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 103157504 : BV:32
=commonMEM.nonstack.mem
1 : (( 184980096 ) -> 230, ( 184980098 ) -> 28, ( 184980097 ) -> 42, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 1845990 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1067604223
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2116848656 : BV:32
=symbol.4
1 : 1808208912 : BV:32
=symbol.1
1 : 1576930336 : BV:32
=symbol.2
1 : 1410859024 : BV:32
=dst_symbol_addr.1
1 : 1576930336 : BV:32
=dst_symbol_addr.2
1 : 1410859024 : BV:32
=dst_symbol_addr.3
1 : 2116848656 : BV:32
=dst_symbol_addr.4
1 : 1808208912 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 471597052 : BV:32
=input.src.llvm-mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1808336911 : BV:32
=stack.size
1 : 404455424 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1577058335 : BV:32
=input.dst.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1808208912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1576930336 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1410987023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2116976655 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1410859024 : BV:32
=memlabel-mem-esp_begin
1 : 67141632 : BV:32
=memlabel-mem-esp_end
1 : 471597055 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2116848656 : BV:32
=commonMEM.nonstack.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3371010 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
169687919
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 471597052 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2116848656 : BV:32
=symbol.4
1 : 1808208912 : BV:32
=symbol.1
1 : 1576930336 : BV:32
=symbol.2
1 : 1410859024 : BV:32
=dst_symbol_addr.1
1 : 1576930336 : BV:32
=dst_symbol_addr.2
1 : 1410859024 : BV:32
=dst_symbol_addr.3
1 : 2116848656 : BV:32
=dst_symbol_addr.4
1 : 1808208912 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 471597052 : BV:32
=input.src.llvm-mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1808336911 : BV:32
=input.dst.esp.L0%1%1
1 : 471597052 : BV:32
=stack.size
1 : 404455424 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1577058335 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1808208912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1576930336 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1410987023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2116976655 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1410859024 : BV:32
=memlabel-mem-esp_begin
1 : 67141632 : BV:32
=memlabel-mem-esp_end
1 : 471597055 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2116848656 : BV:32
=commonMEM.nonstack.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3371010 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
169687919
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2116848656 : BV:32
=symbol.4
1 : 1808208912 : BV:32
=symbol.1
1 : 1576930336 : BV:32
=symbol.2
1 : 1410859024 : BV:32
=dst_symbol_addr.1
1 : 1576930336 : BV:32
=dst_symbol_addr.2
1 : 1410859024 : BV:32
=dst_symbol_addr.3
1 : 2116848656 : BV:32
=dst_symbol_addr.4
1 : 1808208912 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 471597052 : BV:32
=input.src.llvm-mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1808336911 : BV:32
=stack.size
1 : 404455424 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1577058335 : BV:32
=input.dst.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1808208912 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1576930336 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1410987023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2116976655 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1410859024 : BV:32
=memlabel-mem-esp_begin
1 : 67141632 : BV:32
=memlabel-mem-esp_end
1 : 471597055 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2116848656 : BV:32
=commonMEM.nonstack.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3371010 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
169687919
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 471597052 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 3519922180 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2116848656 : BV:32
=symbol.4
1 : 1808208912 : BV:32
=symbol.1
1 : 1576930336 : BV:32
=symbol.2
1 : 1410859024 : BV:32
=dst_symbol_addr.1
1 : 1576930336 : BV:32
=dst_symbol_addr.2
1 : 1410859024 : BV:32
=dst_symbol_addr.3
1 : 2116848656 : BV:32
=dst_symbol_addr.4
1 : 1808208912 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 471597052 : BV:32
=input.src.llvm-mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, ( 1808208912 ) -> 4, ( 1808208913 ) -> 192, ( 1808208915 ) -> 209, ( 1808208914 ) -> 205, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1808336911 : BV:32
=input.dst.esp.L0%1%1
1 : 471597052 : BV:32
=stack.size
1 : 404455424 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1577058335 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1576930348 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, ( 1808208912 ) -> 4, ( 1808208913 ) -> 192, ( 1808208915 ) -> 209, ( 1808208914 ) -> 205, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1808208924 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1808208912 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1410859036 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1576930336 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1410987023 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2116976655 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 2116848668 : BV:32
=input.src.llvm-%arrayidx1
1 : 1410859036 : BV:32
=input.src.llvm-%arrayidx
1 : 1576930348 : BV:32
=input.src.llvm-%arrayidx4
1 : 1808208924 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 2116848668 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1410859024 : BV:32
=memlabel-mem-esp_begin
1 : 67141632 : BV:32
=memlabel-mem-esp_end
1 : 471597055 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2116848656 : BV:32
=commonMEM.nonstack.mem
1 : (( 1576930336 ) -> 2, ( 1576930337 ) -> 112, ( 1576930338 ) -> 51, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3371010 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
169687919
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1302985728 : BV:32
=symbol.4
1 : 166201344 : BV:32
=symbol.1
1 : 1302204416 : BV:32
=symbol.2
1 : 1970176 : BV:32
=dst_symbol_addr.1
1 : 1302204416 : BV:32
=dst_symbol_addr.2
1 : 1970176 : BV:32
=dst_symbol_addr.3
1 : 1302985728 : BV:32
=dst_symbol_addr.4
1 : 166201344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 166329343 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1302332415 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 166201344 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1302204416 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2098175 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1303113727 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1970176 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1302985728 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1999701161
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1302985728 : BV:32
=symbol.4
1 : 166201344 : BV:32
=symbol.1
1 : 1302204416 : BV:32
=symbol.2
1 : 1970176 : BV:32
=dst_symbol_addr.1
1 : 1302204416 : BV:32
=dst_symbol_addr.2
1 : 1970176 : BV:32
=dst_symbol_addr.3
1 : 1302985728 : BV:32
=dst_symbol_addr.4
1 : 166201344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 166329343 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1302332415 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 166201344 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1302204416 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2098175 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1303113727 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1970176 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1302985728 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1999701161
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 849346816 : BV:32
=symbol.4
1 : 2147355936 : BV:32
=symbol.1
1 : 580911360 : BV:32
=symbol.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.1
1 : 580911360 : BV:32
=dst_symbol_addr.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.3
1 : 849346816 : BV:32
=dst_symbol_addr.4
1 : 2147355936 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3224616956 { -1070350340 } : BV:32
=input.src.llvm-mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147483935 { -2147483361 } : BV:32
=stack.size
1 : 468791296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 581039359 : BV:32
=input.dst.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147355936 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 580911360 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4074895679 { -220071617 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 849474815 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4074767680 { -220199616 } : BV:32
=memlabel-mem-esp_begin
1 : 2755825664 { -1539141632 } : BV:32
=memlabel-mem-esp_end
1 : 3224616959 { -1070350337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 849346816 : BV:32
=commonMEM.nonstack.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 438167 : BV:32
=unaliased_memslot.0
1 : 4294946561 { -20735 } : BV:32
=unaliased_memslot.2
1 : 438017 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1346293807
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3224616956 { -1070350340 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 849346816 : BV:32
=symbol.4
1 : 2147355936 : BV:32
=symbol.1
1 : 580911360 : BV:32
=symbol.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.1
1 : 580911360 : BV:32
=dst_symbol_addr.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.3
1 : 849346816 : BV:32
=dst_symbol_addr.4
1 : 2147355936 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3224616956 { -1070350340 } : BV:32
=input.src.llvm-mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147483935 { -2147483361 } : BV:32
=input.dst.esp.L0%1%1
1 : 3224616956 { -1070350340 } : BV:32
=stack.size
1 : 468791296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 581039359 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4074767680 ) -> 151, ( 3224616958 ) -> 0, ( 3224616957 ) -> 0, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, ( 3224616956 ) -> 0, ( 3224616959 ) -> 0, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147355936 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 580911360 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4074895679 { -220071617 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 849474815 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4074767680 { -220199616 } : BV:32
=memlabel-mem-esp_begin
1 : 2755825664 { -1539141632 } : BV:32
=memlabel-mem-esp_end
1 : 3224616959 { -1070350337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 849346816 : BV:32
=commonMEM.nonstack.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 438167 : BV:32
=unaliased_memslot.0
1 : 4294946561 { -20735 } : BV:32
=unaliased_memslot.2
1 : 438017 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1346293807
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 849346816 : BV:32
=symbol.4
1 : 2147355936 : BV:32
=symbol.1
1 : 580911360 : BV:32
=symbol.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.1
1 : 580911360 : BV:32
=dst_symbol_addr.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.3
1 : 849346816 : BV:32
=dst_symbol_addr.4
1 : 2147355936 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3224616956 { -1070350340 } : BV:32
=input.src.llvm-mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147483935 { -2147483361 } : BV:32
=stack.size
1 : 468791296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 581039359 : BV:32
=input.dst.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147355936 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 580911360 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4074895679 { -220071617 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 849474815 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4074767680 { -220199616 } : BV:32
=memlabel-mem-esp_begin
1 : 2755825664 { -1539141632 } : BV:32
=memlabel-mem-esp_end
1 : 3224616959 { -1070350337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 849346816 : BV:32
=commonMEM.nonstack.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 438167 : BV:32
=unaliased_memslot.0
1 : 4294946561 { -20735 } : BV:32
=unaliased_memslot.2
1 : 438017 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1346293807
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3224616956 { -1070350340 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 761827587300137200298248206452828736 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 849346816 : BV:32
=symbol.4
1 : 2147355936 : BV:32
=symbol.1
1 : 580911360 : BV:32
=symbol.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.1
1 : 580911360 : BV:32
=dst_symbol_addr.2
1 : 4074767680 { -220199616 } : BV:32
=dst_symbol_addr.3
1 : 849346816 : BV:32
=dst_symbol_addr.4
1 : 2147355936 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3224616956 { -1070350340 } : BV:32
=input.src.llvm-mem
1 : (( 2147355950 ) -> 146, ( 2147355951 ) -> 0, ( 2147355948 ) -> 0, ( 2147355942 ) -> 146, ( 2147355941 ) -> 185, ( 2147355940 ) -> 0, ( 2147355939 ) -> 46, ( 2147355938 ) -> 68, ( 2147355937 ) -> 170, ( 4074767680 ) -> 151, ( 2147355936 ) -> 64, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, ( 2147355949 ) -> 185, ( 2147355947 ) -> 0, ( 2147355946 ) -> 146, ( 2147355945 ) -> 185, ( 2147355944 ) -> 0, ( 2147355943 ) -> 0, () -> 175) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147483935 { -2147483361 } : BV:32
=input.dst.esp.L0%1%1
1 : 3224616956 { -1070350340 } : BV:32
=stack.size
1 : 468791296 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 2947526575 { -1347440721 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 581039359 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 580911372 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (( 2147355950 ) -> 146, ( 2147355951 ) -> 0, ( 2147355948 ) -> 0, ( 2147355942 ) -> 146, ( 2147355941 ) -> 185, ( 2147355940 ) -> 0, ( 2147355939 ) -> 46, ( 2147355938 ) -> 68, ( 2147355937 ) -> 170, ( 4074767680 ) -> 151, ( 3224616958 ) -> 0, ( 3224616957 ) -> 0, ( 2147355936 ) -> 64, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, ( 3224616956 ) -> 0, ( 3224616959 ) -> 0, ( 2147355949 ) -> 185, ( 2147355947 ) -> 0, ( 2147355946 ) -> 146, ( 2147355945 ) -> 185, ( 2147355944 ) -> 0, ( 2147355943 ) -> 0, () -> 175) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 9615616 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 2147355948 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 2147355936 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 4074767692 { -220199604 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 580911360 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4074895679 { -220071617 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 849474815 : BV:32
=input.src.llvm-%mul
1 : 3956455841 { -338511455 } : BV:32
=input.src.llvm-%arrayidx2
1 : 849346828 : BV:32
=input.src.llvm-%arrayidx1
1 : 4074767692 { -220199604 } : BV:32
=input.src.llvm-%arrayidx
1 : 580911372 : BV:32
=input.src.llvm-%arrayidx4
1 : 2147355948 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 2947526575 { -1347440721 } : BV:32
=input.src.llvm-%add
1 : 2609015120 { -1685952176 } : BV:32
=input.src.llvm-%0
1 : 2947526575 { -1347440721 } : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 849346828 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4074767680 { -220199616 } : BV:32
=memlabel-mem-esp_begin
1 : 2755825664 { -1539141632 } : BV:32
=memlabel-mem-esp_end
1 : 3224616959 { -1070350337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 849346816 : BV:32
=commonMEM.nonstack.mem
1 : (( 4074767680 ) -> 151, ( 580911360 ) -> 1, ( 849346816 ) -> 1, ( 849346819 ) -> 0, ( 4074767683 ) -> 0, ( 4074767682 ) -> 6, ( 580911363 ) -> 255, ( 580911362 ) -> 255, ( 849346818 ) -> 6, () -> 175) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 438167 : BV:32
=unaliased_memslot.0
1 : 4294946561 { -20735 } : BV:32
=unaliased_memslot.2
1 : 438017 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1346293807
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 66
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3841982464 { -452984832 } : BV:32
=symbol.4
1 : 3758096384 { -536870912 } : BV:32
=symbol.1
1 : 3229622272 { -1065345024 } : BV:32
=symbol.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.1
1 : 3229622272 { -1065345024 } : BV:32
=dst_symbol_addr.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.3
1 : 3841982464 { -452984832 } : BV:32
=dst_symbol_addr.4
1 : 3758096384 { -536870912 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2986278908 { -1308688388 } : BV:32
=input.src.llvm-mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3758224383 { -536742913 } : BV:32
=stack.size
1 : 1262940160 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3229750271 { -1065217025 } : BV:32
=input.dst.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3758096384 { -536870912 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3229622272 { -1065345024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3217159167 { -1077808129 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842110463 { -452856833 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3217031168 { -1077936128 } : BV:32
=memlabel-mem-esp_begin
1 : 1723338752 : BV:32
=memlabel-mem-esp_end
1 : 2986278911 { -1308688385 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3841982464 { -452984832 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1717880 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
227068632
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2986278908 { -1308688388 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3841982464 { -452984832 } : BV:32
=symbol.4
1 : 3758096384 { -536870912 } : BV:32
=symbol.1
1 : 3229622272 { -1065345024 } : BV:32
=symbol.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.1
1 : 3229622272 { -1065345024 } : BV:32
=dst_symbol_addr.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.3
1 : 3841982464 { -452984832 } : BV:32
=dst_symbol_addr.4
1 : 3758096384 { -536870912 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2986278908 { -1308688388 } : BV:32
=input.src.llvm-mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3758224383 { -536742913 } : BV:32
=input.dst.esp.L0%1%1
1 : 2986278908 { -1308688388 } : BV:32
=stack.size
1 : 1262940160 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3229750271 { -1065217025 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3758096384 { -536870912 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3229622272 { -1065345024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3217159167 { -1077808129 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842110463 { -452856833 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3217031168 { -1077936128 } : BV:32
=memlabel-mem-esp_begin
1 : 1723338752 : BV:32
=memlabel-mem-esp_end
1 : 2986278911 { -1308688385 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3841982464 { -452984832 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1717880 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
227068632
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 67
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3841982464 { -452984832 } : BV:32
=symbol.4
1 : 3758096384 { -536870912 } : BV:32
=symbol.1
1 : 3229622272 { -1065345024 } : BV:32
=symbol.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.1
1 : 3229622272 { -1065345024 } : BV:32
=dst_symbol_addr.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.3
1 : 3841982464 { -452984832 } : BV:32
=dst_symbol_addr.4
1 : 3758096384 { -536870912 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2986278908 { -1308688388 } : BV:32
=input.src.llvm-mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3758224383 { -536742913 } : BV:32
=stack.size
1 : 1262940160 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3229750271 { -1065217025 } : BV:32
=input.dst.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3758096384 { -536870912 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3229622272 { -1065345024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3217159167 { -1077808129 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842110463 { -452856833 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3217031168 { -1077936128 } : BV:32
=memlabel-mem-esp_begin
1 : 1723338752 : BV:32
=memlabel-mem-esp_end
1 : 2986278911 { -1308688385 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3841982464 { -452984832 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1717880 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
227068632
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2986278908 { -1308688388 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3841982464 { -452984832 } : BV:32
=symbol.4
1 : 3758096384 { -536870912 } : BV:32
=symbol.1
1 : 3229622272 { -1065345024 } : BV:32
=symbol.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.1
1 : 3229622272 { -1065345024 } : BV:32
=dst_symbol_addr.2
1 : 3217031168 { -1077936128 } : BV:32
=dst_symbol_addr.3
1 : 3841982464 { -452984832 } : BV:32
=dst_symbol_addr.4
1 : 3758096384 { -536870912 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2986278908 { -1308688388 } : BV:32
=input.src.llvm-mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3758224383 { -536742913 } : BV:32
=input.dst.esp.L0%1%1
1 : 2986278908 { -1308688388 } : BV:32
=stack.size
1 : 1262940160 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3229750271 { -1065217025 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3229622284 { -1065345012 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 3758096396 { -536870900 } : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 3758096384 { -536870912 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 3217031180 { -1077936116 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3229622272 { -1065345024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3217159167 { -1077808129 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842110463 { -452856833 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 3841982476 { -452984820 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3217031180 { -1077936116 } : BV:32
=input.src.llvm-%arrayidx
1 : 3229622284 { -1065345012 } : BV:32
=input.src.llvm-%arrayidx4
1 : 3758096396 { -536870900 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 3841982476 { -452984820 } : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3217031168 { -1077936128 } : BV:32
=memlabel-mem-esp_begin
1 : 1723338752 : BV:32
=memlabel-mem-esp_end
1 : 2986278911 { -1308688385 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3841982464 { -452984832 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3217031170 ) -> 26, ( 3217031169 ) -> 54, ( 3217031168 ) -> 120, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1717880 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
227068632
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 68
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1470005248 : BV:32
=symbol.4
1 : 13910544 : BV:32
=symbol.1
1 : 519308544 : BV:32
=symbol.2
1 : 43126272 : BV:32
=dst_symbol_addr.1
1 : 519308544 : BV:32
=dst_symbol_addr.2
1 : 43126272 : BV:32
=dst_symbol_addr.3
1 : 1470005248 : BV:32
=dst_symbol_addr.4
1 : 13910544 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 14038543 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 519436543 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 13910544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 519308544 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 43254271 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1470133247 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 43126272 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1470005248 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1126737257
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1470005248 : BV:32
=symbol.4
1 : 13910544 : BV:32
=symbol.1
1 : 519308544 : BV:32
=symbol.2
1 : 43126272 : BV:32
=dst_symbol_addr.1
1 : 519308544 : BV:32
=dst_symbol_addr.2
1 : 43126272 : BV:32
=dst_symbol_addr.3
1 : 1470005248 : BV:32
=dst_symbol_addr.4
1 : 13910544 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 14038543 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 519436543 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 13910544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 519308544 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 43254271 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1470133247 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 43126272 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1470005248 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1126737257
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 69
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1300607328
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3288309756 { -1006657540 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=input.dst.esp.L0%1%1
1 : 3288309756 { -1006657540 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 3288309758 ) -> 255, ( 3288309756 ) -> 255, ( 3288309757 ) -> 255, ( 3288309759 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1300607328
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 70
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4011054048 { -283913248 } : BV:32
=symbol.4
1 : 3992048528 { -302918768 } : BV:32
=symbol.1
1 : 3472872400 { -822094896 } : BV:32
=symbol.2
1 : 1644030976 : BV:32
=dst_symbol_addr.1
1 : 3472872400 { -822094896 } : BV:32
=dst_symbol_addr.2
1 : 1644030976 : BV:32
=dst_symbol_addr.3
1 : 4011054048 { -283913248 } : BV:32
=dst_symbol_addr.4
1 : 3992048528 { -302918768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 788889596 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3992176527 { -302790769 } : BV:32
=stack.size
1 : 520323072 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3473000399 { -821966897 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3992048528 { -302918768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3472872400 { -822094896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1644158975 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4011182047 { -283785249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1644030976 : BV:32
=memlabel-mem-esp_begin
1 : 268566528 : BV:32
=memlabel-mem-esp_end
1 : 788889599 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4011054048 { -283913248 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1715198105
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 788889596 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4011054048 { -283913248 } : BV:32
=symbol.4
1 : 3992048528 { -302918768 } : BV:32
=symbol.1
1 : 3472872400 { -822094896 } : BV:32
=symbol.2
1 : 1644030976 : BV:32
=dst_symbol_addr.1
1 : 3472872400 { -822094896 } : BV:32
=dst_symbol_addr.2
1 : 1644030976 : BV:32
=dst_symbol_addr.3
1 : 4011054048 { -283913248 } : BV:32
=dst_symbol_addr.4
1 : 3992048528 { -302918768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 788889596 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3992176527 { -302790769 } : BV:32
=input.dst.esp.L0%1%1
1 : 788889596 : BV:32
=stack.size
1 : 520323072 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3473000399 { -821966897 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 788889599 ) -> 255, ( 788889596 ) -> 255, ( 788889598 ) -> 255, ( 788889597 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3992048528 { -302918768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3472872400 { -822094896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1644158975 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4011182047 { -283785249 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1644030976 : BV:32
=memlabel-mem-esp_begin
1 : 268566528 : BV:32
=memlabel-mem-esp_end
1 : 788889599 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4011054048 { -283913248 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1715198105
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 71
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 72
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 142928934035772379681427724009591131492 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1277135886 ) -> 135, ( 1277135882 ) -> 93, ( 1277135873 ) -> 205, ( 1277135880 ) -> 164, ( 1277135876 ) -> 68, ( 1277135885 ) -> 28, ( 1277135874 ) -> 121, ( 1277135881 ) -> 123, ( 1277135872 ) -> 100, ( 1277135883 ) -> 146, ( 1277135877 ) -> 165, ( 1277135887 ) -> 107, ( 1277135884 ) -> 132, ( 1277135878 ) -> 229, ( 1277135875 ) -> 17, ( 1277135879 ) -> 134, () -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 2094147710 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610550300 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 1277135886 ) -> 135, ( 1277135882 ) -> 93, ( 1277135873 ) -> 205, ( 1277135880 ) -> 164, ( 1277135876 ) -> 68, ( 1277135885 ) -> 28, ( 1277135874 ) -> 121, ( 1277135881 ) -> 123, ( 4294967293 ) -> 0, ( 1277135872 ) -> 100, ( 1277135883 ) -> 146, ( 1277135877 ) -> 165, ( 1277135887 ) -> 107, ( 4294967294 ) -> 0, ( 1277135884 ) -> 132, ( 1277135878 ) -> 229, ( 1277135875 ) -> 17, ( 1277135879 ) -> 134, () -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 1804016772 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1277135884 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1552485388 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%mul
1 : 2233441796 { -2061525500 } : BV:32
=input.src.llvm-%arrayidx2
1 : 1552285708 : BV:32
=input.src.llvm-%arrayidx1
1 : 1552485388 : BV:32
=input.src.llvm-%arrayidx
1 : 1610550300 : BV:32
=input.src.llvm-%arrayidx4
1 : 1277135884 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 2094147710 : BV:32
=input.src.llvm-%add
1 : 2710726178 { -1584241118 } : BV:32
=input.src.llvm-%0
1 : 477284382 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1552285708 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 73
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 32042982653732749339965143504772981732 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1277135886 ) -> 135, ( 1277135882 ) -> 93, ( 1277135873 ) -> 205, ( 1277135880 ) -> 164, ( 1277135876 ) -> 68, ( 1277135885 ) -> 28, ( 1277135874 ) -> 121, ( 1277135881 ) -> 123, ( 1277135872 ) -> 100, ( 1277135883 ) -> 146, ( 1277135877 ) -> 165, ( 1277135887 ) -> 107, ( 1277135884 ) -> 132, ( 1277135878 ) -> 229, ( 1277135875 ) -> 17, ( 1277135879 ) -> 134, ( 1277135900 ) -> 4, ( 1277135896 ) -> 36, ( 1277135890 ) -> 208, ( 1277135891 ) -> 22, ( 1277135893 ) -> 193, ( 1277135892 ) -> 196, ( 1277135888 ) -> 228, ( 1277135895 ) -> 244, ( 1277135899 ) -> 213, ( 1277135898 ) -> 212, ( 1277135903 ) -> 24, ( 1277135894 ) -> 230, ( 1277135902 ) -> 27, ( 1277135897 ) -> 178, ( 1277135901 ) -> 65, ( 1277135889 ) -> 227, () -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 477284382 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610550316 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 1277135886 ) -> 135, ( 1277135882 ) -> 93, ( 1277135873 ) -> 205, ( 1277135880 ) -> 164, ( 1277135876 ) -> 68, ( 1277135885 ) -> 28, ( 1277135874 ) -> 121, ( 1277135881 ) -> 123, ( 4294967293 ) -> 0, ( 1277135872 ) -> 100, ( 1277135883 ) -> 146, ( 1277135877 ) -> 165, ( 1277135887 ) -> 107, ( 4294967294 ) -> 0, ( 1277135884 ) -> 132, ( 1277135878 ) -> 229, ( 1277135875 ) -> 17, ( 1277135879 ) -> 134, ( 1277135900 ) -> 4, ( 1277135896 ) -> 36, ( 1277135890 ) -> 208, ( 1277135891 ) -> 22, ( 1277135893 ) -> 193, ( 1277135892 ) -> 196, ( 1277135888 ) -> 228, ( 1277135895 ) -> 244, ( 1277135899 ) -> 213, ( 1277135898 ) -> 212, ( 1277135903 ) -> 24, ( 1277135894 ) -> 230, ( 1277135902 ) -> 27, ( 1277135897 ) -> 178, ( 1277135901 ) -> 65, ( 1277135889 ) -> 227, () -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 404439300 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1277135900 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1552485404 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%mul
1 : 1730601860 : BV:32
=input.src.llvm-%arrayidx2
1 : 1552285724 : BV:32
=input.src.llvm-%arrayidx1
1 : 1552485404 : BV:32
=input.src.llvm-%arrayidx
1 : 1610550316 : BV:32
=input.src.llvm-%arrayidx4
1 : 1277135900 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 477284382 : BV:32
=input.src.llvm-%add
1 : 590957634 : BV:32
=input.src.llvm-%0
1 : 3155323070 { -1139644226 } : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1552285724 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 74
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 20295258876902240915771996916103544420 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1277135886 ) -> 135, ( 1277135882 ) -> 93, ( 1277135873 ) -> 205, ( 1277135880 ) -> 164, ( 1277135876 ) -> 68, ( 1277135885 ) -> 28, ( 1277135874 ) -> 121, ( 1277135881 ) -> 123, ( 1277135872 ) -> 100, ( 1277135883 ) -> 146, ( 1277135877 ) -> 165, ( 1277135887 ) -> 107, ( 1277135884 ) -> 132, ( 1277135878 ) -> 229, ( 1277135875 ) -> 17, ( 1277135879 ) -> 134, ( 1277135900 ) -> 4, ( 1277135896 ) -> 36, ( 1277135890 ) -> 208, ( 1277135891 ) -> 22, ( 1277135893 ) -> 193, ( 1277135913 ) -> 68, ( 1277135892 ) -> 196, ( 1277135888 ) -> 228, ( 1277135895 ) -> 244, ( 1277135899 ) -> 213, ( 1277135898 ) -> 212, ( 1277135904 ) -> 100, ( 1277135903 ) -> 24, ( 1277135894 ) -> 230, ( 1277135902 ) -> 27, ( 1277135917 ) -> 185, ( 1277135897 ) -> 178, ( 1277135914 ) -> 22, ( 1277135916 ) -> 132, ( 1277135901 ) -> 65, ( 1277135889 ) -> 227, ( 1277135912 ) -> 164, ( 1277135907 ) -> 134, ( 1277135910 ) -> 163, ( 1277135908 ) -> 68, ( 1277135915 ) -> 161, ( 1277135909 ) -> 150, ( 1277135918 ) -> 68, ( 1277135911 ) -> 84, ( 1277135906 ) -> 120, ( 1277135919 ) -> 15, ( 1277135905 ) -> 126, () -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 3155323070 { -1139644226 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610550332 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 1277135886 ) -> 135, ( 1277135882 ) -> 93, ( 1277135873 ) -> 205, ( 1277135880 ) -> 164, ( 1277135876 ) -> 68, ( 1277135885 ) -> 28, ( 1277135874 ) -> 121, ( 1277135881 ) -> 123, ( 4294967293 ) -> 0, ( 1277135872 ) -> 100, ( 1277135883 ) -> 146, ( 1277135877 ) -> 165, ( 1277135887 ) -> 107, ( 4294967294 ) -> 0, ( 1277135884 ) -> 132, ( 1277135878 ) -> 229, ( 1277135875 ) -> 17, ( 1277135879 ) -> 134, ( 1277135900 ) -> 4, ( 1277135896 ) -> 36, ( 1277135890 ) -> 208, ( 1277135891 ) -> 22, ( 1277135893 ) -> 193, ( 1277135913 ) -> 68, ( 1277135892 ) -> 196, ( 1277135888 ) -> 228, ( 1277135895 ) -> 244, ( 1277135899 ) -> 213, ( 1277135898 ) -> 212, ( 1277135904 ) -> 100, ( 1277135903 ) -> 24, ( 1277135894 ) -> 230, ( 1277135902 ) -> 27, ( 1277135917 ) -> 185, ( 1277135897 ) -> 178, ( 1277135914 ) -> 22, ( 1277135916 ) -> 132, ( 1277135901 ) -> 65, ( 1277135889 ) -> 227, ( 1277135912 ) -> 164, ( 1277135907 ) -> 134, ( 1277135910 ) -> 163, ( 1277135908 ) -> 68, ( 1277135915 ) -> 161, ( 1277135909 ) -> 150, ( 1277135918 ) -> 68, ( 1277135911 ) -> 84, ( 1277135906 ) -> 120, ( 1277135919 ) -> 15, ( 1277135905 ) -> 126, () -> (RAC: m_multiplier -> 170 , m_adder -> 134)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 256162180 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1277135916 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1552485420 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%mul
1 : 4120046852 { -174920444 } : BV:32
=input.src.llvm-%arrayidx2
1 : 1552285740 : BV:32
=input.src.llvm-%arrayidx1
1 : 1552485420 : BV:32
=input.src.llvm-%arrayidx
1 : 1610550332 : BV:32
=input.src.llvm-%arrayidx4
1 : 1277135916 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 3155323070 { -1139644226 } : BV:32
=input.src.llvm-%add
1 : 1380250978 : BV:32
=input.src.llvm-%0
1 : 1555171422 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1552285740 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3029252584
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 75
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
737161521
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3288309756 { -1006657540 } : BV:32
=input.dst.exreg.0.5
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=input.dst.esp.L0%1%1
1 : 3288309756 { -1006657540 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
737161521
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 76
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 77
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 56411538094737640705538548845037391632 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1277135886 ) -> 112, ( 1277135882 ) -> 231, ( 1277135873 ) -> 143, ( 1277135880 ) -> 144, ( 1277135876 ) -> 16, ( 1277135885 ) -> 119, ( 1277135874 ) -> 10, ( 1277135881 ) -> 137, ( 1277135872 ) -> 16, ( 1277135883 ) -> 25, ( 1277135877 ) -> 228, ( 1277135887 ) -> 42, ( 1277135884 ) -> 144, ( 1277135878 ) -> 33, ( 1277135875 ) -> 246, ( 1277135879 ) -> 221, () -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 3978781083 { -316186213 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610550300 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1277135886 ) -> 112, ( 1277135882 ) -> 231, ( 1277135873 ) -> 143, ( 1277135880 ) -> 144, ( 1277135876 ) -> 16, ( 1277135885 ) -> 119, ( 1277135874 ) -> 10, ( 1277135881 ) -> 137, ( 4294967293 ) -> 0, ( 1277135872 ) -> 16, ( 1277135883 ) -> 25, ( 1277135877 ) -> 228, ( 1277135887 ) -> 42, ( 4294967294 ) -> 0, ( 1277135884 ) -> 144, ( 1277135878 ) -> 33, ( 1277135875 ) -> 246, ( 1277135879 ) -> 221, () -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 712013712 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1277135884 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1552485388 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%mul
1 : 3765490649 { -529476647 } : BV:32
=input.src.llvm-%arrayidx2
1 : 1552285708 : BV:32
=input.src.llvm-%arrayidx1
1 : 1552485388 : BV:32
=input.src.llvm-%arrayidx
1 : 1610550300 : BV:32
=input.src.llvm-%arrayidx4
1 : 1277135884 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 3978781083 { -316186213 } : BV:32
=input.src.llvm-%add
1 : 771266004 : BV:32
=input.src.llvm-%0
1 : 1300742651 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1552285708 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 78
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 285041450942132621245475543526719729168 { -55240915978805842217899063905048482288 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1277135886 ) -> 112, ( 1277135882 ) -> 231, ( 1277135873 ) -> 143, ( 1277135880 ) -> 144, ( 1277135876 ) -> 16, ( 1277135885 ) -> 119, ( 1277135874 ) -> 10, ( 1277135881 ) -> 137, ( 1277135872 ) -> 16, ( 1277135883 ) -> 25, ( 1277135877 ) -> 228, ( 1277135887 ) -> 42, ( 1277135884 ) -> 144, ( 1277135878 ) -> 33, ( 1277135875 ) -> 246, ( 1277135879 ) -> 221, ( 1277135900 ) -> 144, ( 1277135896 ) -> 144, ( 1277135890 ) -> 49, ( 1277135891 ) -> 218, ( 1277135893 ) -> 69, ( 1277135892 ) -> 16, ( 1277135888 ) -> 16, ( 1277135895 ) -> 188, ( 1277135899 ) -> 64, ( 1277135898 ) -> 101, ( 1277135903 ) -> 214, ( 1277135894 ) -> 110, ( 1277135902 ) -> 112, ( 1277135897 ) -> 12, ( 1277135901 ) -> 252, ( 1277135889 ) -> 174, () -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 1300742651 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610550316 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1277135886 ) -> 112, ( 1277135882 ) -> 231, ( 1277135873 ) -> 143, ( 1277135880 ) -> 144, ( 1277135876 ) -> 16, ( 1277135885 ) -> 119, ( 1277135874 ) -> 10, ( 1277135881 ) -> 137, ( 4294967293 ) -> 0, ( 1277135872 ) -> 16, ( 1277135883 ) -> 25, ( 1277135877 ) -> 228, ( 1277135887 ) -> 42, ( 4294967294 ) -> 0, ( 1277135884 ) -> 144, ( 1277135878 ) -> 33, ( 1277135875 ) -> 246, ( 1277135879 ) -> 221, ( 1277135900 ) -> 144, ( 1277135896 ) -> 144, ( 1277135890 ) -> 49, ( 1277135891 ) -> 218, ( 1277135893 ) -> 69, ( 1277135892 ) -> 16, ( 1277135888 ) -> 16, ( 1277135895 ) -> 188, ( 1277135899 ) -> 64, ( 1277135898 ) -> 101, ( 1277135903 ) -> 214, ( 1277135894 ) -> 110, ( 1277135902 ) -> 112, ( 1277135897 ) -> 12, ( 1277135901 ) -> 252, ( 1277135889 ) -> 174, () -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 3597728912 { -697238384 } : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1277135900 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1552485404 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%mul
1 : 666266649 : BV:32
=input.src.llvm-%arrayidx2
1 : 1552285724 : BV:32
=input.src.llvm-%arrayidx1
1 : 1552485404 : BV:32
=input.src.llvm-%arrayidx
1 : 1610550316 : BV:32
=input.src.llvm-%arrayidx4
1 : 1277135900 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 1300742651 : BV:32
=input.src.llvm-%add
1 : 3583872372 { -711094924 } : BV:32
=input.src.llvm-%0
1 : 2917605723 { -1377361573 } : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1552285724 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 79
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 58920918381352215265134817676530629904 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1277135886 ) -> 112, ( 1277135882 ) -> 231, ( 1277135873 ) -> 143, ( 1277135880 ) -> 144, ( 1277135876 ) -> 16, ( 1277135885 ) -> 119, ( 1277135874 ) -> 10, ( 1277135881 ) -> 137, ( 1277135872 ) -> 16, ( 1277135883 ) -> 25, ( 1277135877 ) -> 228, ( 1277135887 ) -> 42, ( 1277135884 ) -> 144, ( 1277135878 ) -> 33, ( 1277135875 ) -> 246, ( 1277135879 ) -> 221, ( 1277135900 ) -> 144, ( 1277135896 ) -> 144, ( 1277135890 ) -> 49, ( 1277135891 ) -> 218, ( 1277135893 ) -> 69, ( 1277135913 ) -> 223, ( 1277135892 ) -> 16, ( 1277135888 ) -> 16, ( 1277135895 ) -> 188, ( 1277135899 ) -> 64, ( 1277135898 ) -> 101, ( 1277135904 ) -> 16, ( 1277135903 ) -> 214, ( 1277135894 ) -> 110, ( 1277135902 ) -> 112, ( 1277135917 ) -> 193, ( 1277135897 ) -> 12, ( 1277135914 ) -> 25, ( 1277135916 ) -> 144, ( 1277135901 ) -> 252, ( 1277135889 ) -> 174, ( 1277135912 ) -> 144, ( 1277135907 ) -> 205, ( 1277135910 ) -> 212, ( 1277135908 ) -> 16, ( 1277135915 ) -> 44, ( 1277135909 ) -> 6, ( 1277135918 ) -> 83, ( 1277135911 ) -> 222, ( 1277135906 ) -> 241, ( 1277135919 ) -> 44, ( 1277135905 ) -> 61, () -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 2917605723 { -1377361573 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1610550332 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1277135886 ) -> 112, ( 1277135882 ) -> 231, ( 1277135873 ) -> 143, ( 1277135880 ) -> 144, ( 1277135876 ) -> 16, ( 1277135885 ) -> 119, ( 1277135874 ) -> 10, ( 1277135881 ) -> 137, ( 4294967293 ) -> 0, ( 1277135872 ) -> 16, ( 1277135883 ) -> 25, ( 1277135877 ) -> 228, ( 1277135887 ) -> 42, ( 4294967294 ) -> 0, ( 1277135884 ) -> 144, ( 1277135878 ) -> 33, ( 1277135875 ) -> 246, ( 1277135879 ) -> 221, ( 1277135900 ) -> 144, ( 1277135896 ) -> 144, ( 1277135890 ) -> 49, ( 1277135891 ) -> 218, ( 1277135893 ) -> 69, ( 1277135913 ) -> 223, ( 1277135892 ) -> 16, ( 1277135888 ) -> 16, ( 1277135895 ) -> 188, ( 1277135899 ) -> 64, ( 1277135898 ) -> 101, ( 1277135904 ) -> 16, ( 1277135903 ) -> 214, ( 1277135894 ) -> 110, ( 1277135902 ) -> 112, ( 1277135917 ) -> 193, ( 1277135897 ) -> 12, ( 1277135914 ) -> 25, ( 1277135916 ) -> 144, ( 1277135901 ) -> 252, ( 1277135889 ) -> 174, ( 1277135912 ) -> 144, ( 1277135907 ) -> 205, ( 1277135910 ) -> 212, ( 1277135908 ) -> 16, ( 1277135915 ) -> 44, ( 1277135909 ) -> 6, ( 1277135918 ) -> 83, ( 1277135911 ) -> 222, ( 1277135906 ) -> 241, ( 1277135919 ) -> 44, ( 1277135905 ) -> 61, () -> (RAC: m_multiplier -> 198 , m_adder -> 83)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 743686544 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1277135916 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1552485420 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%mul
1 : 882021977 : BV:32
=input.src.llvm-%arrayidx2
1 : 1552285740 : BV:32
=input.src.llvm-%arrayidx1
1 : 1552485420 : BV:32
=input.src.llvm-%arrayidx
1 : 1610550332 : BV:32
=input.src.llvm-%arrayidx4
1 : 1277135916 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 2917605723 { -1377361573 } : BV:32
=input.src.llvm-%add
1 : 1104812052 : BV:32
=input.src.llvm-%0
1 : 222790075 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1552285740 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2354858602
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 80
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 178147536 : BV:32
=symbol.4
1 : 150861920 : BV:32
=symbol.1
1 : 251525472 : BV:32
=symbol.2
1 : 192544976 : BV:32
=dst_symbol_addr.1
1 : 251525472 : BV:32
=dst_symbol_addr.2
1 : 192544976 : BV:32
=dst_symbol_addr.3
1 : 178147536 : BV:32
=dst_symbol_addr.4
1 : 150861920 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294737916 { -229380 } : BV:32
=input.src.llvm-mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 150989919 : BV:32
=stack.size
1 : 4026236928 { -268730368 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 251653471 : BV:32
=input.dst.mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 150861920 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 251525472 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 192672975 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 178275535 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 192544976 : BV:32
=memlabel-mem-esp_begin
1 : 268500992 : BV:32
=memlabel-mem-esp_end
1 : 4294737919 { -229377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 178147536 : BV:32
=commonMEM.nonstack.mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 236 : BV:32
=unaliased_memslot.0
1 : 65295 : BV:32
=unaliased_memslot.3
1 : 65343 : BV:32
=unaliased_memslot.2
1 : 13 : BV:32
=unaliased_memslot.7
1 : 50 : BV:32
=unaliased_memslot.4
1 : 61 : BV:32
=unaliased_memslot.5
1 : 65408 : BV:32
=unaliased_memslot.6
1 : 453 : BV:32
=unaliased_memslot.10
1 : 65489 : BV:32
=unaliased_memslot.8
1 : 351 : BV:32
=unaliased_memslot.9
1 : 65463 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
288367555
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294737916 { -229380 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 178147536 : BV:32
=symbol.4
1 : 150861920 : BV:32
=symbol.1
1 : 251525472 : BV:32
=symbol.2
1 : 192544976 : BV:32
=dst_symbol_addr.1
1 : 251525472 : BV:32
=dst_symbol_addr.2
1 : 192544976 : BV:32
=dst_symbol_addr.3
1 : 178147536 : BV:32
=dst_symbol_addr.4
1 : 150861920 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294737916 { -229380 } : BV:32
=input.src.llvm-mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 150989919 : BV:32
=input.dst.esp.L0%1%1
1 : 4294737916 { -229380 } : BV:32
=stack.size
1 : 4026236928 { -268730368 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 251653471 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 150861920 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 251525472 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 192672975 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 178275535 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 192544976 : BV:32
=memlabel-mem-esp_begin
1 : 268500992 : BV:32
=memlabel-mem-esp_end
1 : 4294737919 { -229377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 178147536 : BV:32
=commonMEM.nonstack.mem
1 : (( 192544976 ) -> 236, ( 251525472 ) -> 15, ( 192544989 ) -> 255, ( 251525477 ) -> 255, ( 178147545 ) -> 255, ( 251525484 ) -> 128, ( 251525476 ) -> 63, ( 178147536 ) -> 13, ( 178147544 ) -> 183, ( 178147540 ) -> 197, ( 192544985 ) -> 1, ( 178147541 ) -> 1, ( 251525473 ) -> 255, ( 251525480 ) -> 50, ( 192544984 ) -> 95, ( 192544980 ) -> 61, ( 251525485 ) -> 255, ( 192544988 ) -> 209, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 236 : BV:32
=unaliased_memslot.0
1 : 65295 : BV:32
=unaliased_memslot.3
1 : 65343 : BV:32
=unaliased_memslot.2
1 : 13 : BV:32
=unaliased_memslot.7
1 : 50 : BV:32
=unaliased_memslot.4
1 : 61 : BV:32
=unaliased_memslot.5
1 : 65408 : BV:32
=unaliased_memslot.6
1 : 453 : BV:32
=unaliased_memslot.10
1 : 65489 : BV:32
=unaliased_memslot.8
1 : 351 : BV:32
=unaliased_memslot.9
1 : 65463 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
288367555
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 81
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2655651600 { -1639315696 } : BV:32
=symbol.4
1 : 2373322496 { -1921644800 } : BV:32
=symbol.1
1 : 2353661696 { -1941305600 } : BV:32
=symbol.2
1 : 2022974464 : BV:32
=dst_symbol_addr.1
1 : 2353661696 { -1941305600 } : BV:32
=dst_symbol_addr.2
1 : 2022974464 : BV:32
=dst_symbol_addr.3
1 : 2655651600 { -1639315696 } : BV:32
=dst_symbol_addr.4
1 : 2373322496 { -1921644800 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1368915964 : BV:32
=input.src.llvm-mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2373450495 { -1921516801 } : BV:32
=stack.size
1 : 288292864 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2353789695 { -1941177601 } : BV:32
=input.dst.mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2373322496 { -1921644800 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2353661696 { -1941305600 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2023102463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2655779599 { -1639187697 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2022974464 : BV:32
=memlabel-mem-esp_begin
1 : 1080623104 : BV:32
=memlabel-mem-esp_end
1 : 1368915967 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2655651600 { -1639315696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 448 : BV:32
=unaliased_memslot.2
1 : 17 : BV:32
=unaliased_memslot.7
1 : 112 : BV:32
=unaliased_memslot.4
1 : 213 : BV:32
=unaliased_memslot.5
1 : 126 : BV:32
=unaliased_memslot.6
1 : 10 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 226 : BV:32
=unaliased_memslot.9
1 : 61 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
652467361
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1368915964 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2655651600 { -1639315696 } : BV:32
=symbol.4
1 : 2373322496 { -1921644800 } : BV:32
=symbol.1
1 : 2353661696 { -1941305600 } : BV:32
=symbol.2
1 : 2022974464 : BV:32
=dst_symbol_addr.1
1 : 2353661696 { -1941305600 } : BV:32
=dst_symbol_addr.2
1 : 2022974464 : BV:32
=dst_symbol_addr.3
1 : 2655651600 { -1639315696 } : BV:32
=dst_symbol_addr.4
1 : 2373322496 { -1921644800 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1368915964 : BV:32
=input.src.llvm-mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2373450495 { -1921516801 } : BV:32
=input.dst.esp.L0%1%1
1 : 1368915964 : BV:32
=stack.size
1 : 288292864 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2353789695 { -1941177601 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2373322496 { -1921644800 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2353661696 { -1941305600 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2023102463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2655779599 { -1639187697 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2022974464 : BV:32
=memlabel-mem-esp_begin
1 : 1080623104 : BV:32
=memlabel-mem-esp_end
1 : 1368915967 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2655651600 { -1639315696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2022974472 ) -> 226, ( 2353661704 ) -> 112, ( 2353661708 ) -> 126, ( 2353661701 ) -> 1, ( 2655651608 ) -> 61, ( 2655651600 ) -> 17, ( 2353661700 ) -> 192, ( 2655651604 ) -> 10, ( 2022974468 ) -> 213, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 448 : BV:32
=unaliased_memslot.2
1 : 17 : BV:32
=unaliased_memslot.7
1 : 112 : BV:32
=unaliased_memslot.4
1 : 213 : BV:32
=unaliased_memslot.5
1 : 126 : BV:32
=unaliased_memslot.6
1 : 10 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 226 : BV:32
=unaliased_memslot.9
1 : 61 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
652467361
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 82
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1627348992 : BV:32
=symbol.4
1 : 1614545920 : BV:32
=symbol.1
1 : 1097699488 : BV:32
=symbol.2
1 : 1214732496 : BV:32
=dst_symbol_addr.1
1 : 1097699488 : BV:32
=dst_symbol_addr.2
1 : 1214732496 : BV:32
=dst_symbol_addr.3
1 : 1627348992 : BV:32
=dst_symbol_addr.4
1 : 1614545920 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1614673919 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1097827487 : BV:32
=input.dst.mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1614545920 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1097699488 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1214860495 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1627476991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1214732496 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1627348992 : BV:32
=commonMEM.nonstack.mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 64 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1029560978
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 82 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1627348992 : BV:32
=symbol.4
1 : 1614545920 : BV:32
=symbol.1
1 : 1097699488 : BV:32
=symbol.2
1 : 1214732496 : BV:32
=dst_symbol_addr.1
1 : 1097699488 : BV:32
=dst_symbol_addr.2
1 : 1214732496 : BV:32
=dst_symbol_addr.3
1 : 1627348992 : BV:32
=dst_symbol_addr.4
1 : 1614545920 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1614673919 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1097827487 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1614545920 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1097699488 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1214860495 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1627476991 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1214732496 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1627348992 : BV:32
=commonMEM.nonstack.mem
1 : (( 1097699500 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 64 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1029560978
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 83
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294687104 { -280192 } : BV:32
=symbol.4
1 : 621568 : BV:32
=symbol.1
1 : 4228095888 { -66871408 } : BV:32
=symbol.2
1 : 17664 : BV:32
=dst_symbol_addr.1
1 : 4228095888 { -66871408 } : BV:32
=dst_symbol_addr.2
1 : 17664 : BV:32
=dst_symbol_addr.3
1 : 4294687104 { -280192 } : BV:32
=dst_symbol_addr.4
1 : 621568 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4228091900 { -66875396 } : BV:32
=input.src.llvm-mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 749567 : BV:32
=stack.size
1 : 4194336768 { -100630528 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4228223887 { -66743409 } : BV:32
=input.dst.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 621568 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4228095888 { -66871408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 145663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294815103 { -152193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 17664 : BV:32
=memlabel-mem-esp_begin
1 : 33755136 : BV:32
=memlabel-mem-esp_end
1 : 4228091903 { -66875393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294687104 { -280192 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 235798532 : BV:32
=unaliased_memslot.0
1 : 235798528 : BV:32
=unaliased_memslot.3
1 : 235798631 : BV:32
=unaliased_memslot.2
1 : 235798528 : BV:32
=unaliased_memslot.7
1 : 235798578 : BV:32
=unaliased_memslot.4
1 : 235798631 : BV:32
=unaliased_memslot.5
1 : 235798542 : BV:32
=unaliased_memslot.6
1 : 235798589 : BV:32
=unaliased_memslot.10
1 : 235798542 : BV:32
=unaliased_memslot.8
1 : 235798578 : BV:32
=unaliased_memslot.9
1 : 235798578 : BV:32
=unaliased_memslot.11
1 : 235798542 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302256187
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 83 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4228091900 { -66875396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294687104 { -280192 } : BV:32
=symbol.4
1 : 621568 : BV:32
=symbol.1
1 : 4228095888 { -66871408 } : BV:32
=symbol.2
1 : 17664 : BV:32
=dst_symbol_addr.1
1 : 4228095888 { -66871408 } : BV:32
=dst_symbol_addr.2
1 : 17664 : BV:32
=dst_symbol_addr.3
1 : 4294687104 { -280192 } : BV:32
=dst_symbol_addr.4
1 : 621568 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4228091900 { -66875396 } : BV:32
=input.src.llvm-mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 749567 : BV:32
=input.dst.esp.L0%1%1
1 : 4228091900 { -66875396 } : BV:32
=stack.size
1 : 4194336768 { -100630528 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4228223887 { -66743409 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294687104 ) -> 0, ( 4228091902 ) -> 0, ( 4228091901 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, ( 4228091900 ) -> 0, ( 4228091903 ) -> 0, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 621568 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4228095888 { -66871408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 145663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294815103 { -152193 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 17664 : BV:32
=memlabel-mem-esp_begin
1 : 33755136 : BV:32
=memlabel-mem-esp_end
1 : 4228091903 { -66875393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294687104 { -280192 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 235798532 : BV:32
=unaliased_memslot.0
1 : 235798528 : BV:32
=unaliased_memslot.3
1 : 235798631 : BV:32
=unaliased_memslot.2
1 : 235798528 : BV:32
=unaliased_memslot.7
1 : 235798578 : BV:32
=unaliased_memslot.4
1 : 235798631 : BV:32
=unaliased_memslot.5
1 : 235798542 : BV:32
=unaliased_memslot.6
1 : 235798589 : BV:32
=unaliased_memslot.10
1 : 235798542 : BV:32
=unaliased_memslot.8
1 : 235798578 : BV:32
=unaliased_memslot.9
1 : 235798578 : BV:32
=unaliased_memslot.11
1 : 235798542 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302256187
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 84
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294687104 { -280192 } : BV:32
=symbol.4
1 : 621568 : BV:32
=symbol.1
1 : 4228095888 { -66871408 } : BV:32
=symbol.2
1 : 17664 : BV:32
=dst_symbol_addr.1
1 : 4228095888 { -66871408 } : BV:32
=dst_symbol_addr.2
1 : 17664 : BV:32
=dst_symbol_addr.3
1 : 4294687104 { -280192 } : BV:32
=dst_symbol_addr.4
1 : 621568 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4228091900 { -66875396 } : BV:32
=input.src.llvm-mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 749567 : BV:32
=stack.size
1 : 4194336768 { -100630528 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4228223887 { -66743409 } : BV:32
=input.dst.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 621568 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4228095888 { -66871408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 145663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294815103 { -152193 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 17664 : BV:32
=memlabel-mem-esp_begin
1 : 33755136 : BV:32
=memlabel-mem-esp_end
1 : 4228091903 { -66875393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294687104 { -280192 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 235798532 : BV:32
=unaliased_memslot.0
1 : 235798528 : BV:32
=unaliased_memslot.3
1 : 235798631 : BV:32
=unaliased_memslot.2
1 : 235798528 : BV:32
=unaliased_memslot.7
1 : 235798578 : BV:32
=unaliased_memslot.4
1 : 235798631 : BV:32
=unaliased_memslot.5
1 : 235798542 : BV:32
=unaliased_memslot.6
1 : 235798589 : BV:32
=unaliased_memslot.10
1 : 235798542 : BV:32
=unaliased_memslot.8
1 : 235798578 : BV:32
=unaliased_memslot.9
1 : 235798578 : BV:32
=unaliased_memslot.11
1 : 235798542 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302256187
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 84 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4228091900 { -66875396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 236730692381446430596079882859437883392 { -103551674539492032867294724572330328064 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4294687104 { -280192 } : BV:32
=symbol.4
1 : 621568 : BV:32
=symbol.1
1 : 4228095888 { -66871408 } : BV:32
=symbol.2
1 : 17664 : BV:32
=dst_symbol_addr.1
1 : 4228095888 { -66871408 } : BV:32
=dst_symbol_addr.2
1 : 17664 : BV:32
=dst_symbol_addr.3
1 : 4294687104 { -280192 } : BV:32
=dst_symbol_addr.4
1 : 621568 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4228091900 { -66875396 } : BV:32
=input.src.llvm-mem
1 : (( 621574 ) -> 198, ( 621575 ) -> 137, ( 4294687104 ) -> 0, ( 621568 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, ( 621573 ) -> 68, ( 621572 ) -> 196, ( 621571 ) -> 0, ( 621570 ) -> 0, ( 621569 ) -> 0, ( 621583 ) -> 178, ( 621582 ) -> 24, ( 621581 ) -> 172, ( 621577 ) -> 56, ( 621579 ) -> 145, ( 621576 ) -> 100, ( 621580 ) -> 68, ( 621578 ) -> 235, () -> 14) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 749567 : BV:32
=input.dst.esp.L0%1%1
1 : 4228091900 { -66875396 } : BV:32
=stack.size
1 : 4194336768 { -100630528 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 235798542 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4228223887 { -66743409 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4228095900 { -66871396 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.dst.mem
1 : (( 621574 ) -> 198, ( 621575 ) -> 137, ( 4294687104 ) -> 0, ( 4228091902 ) -> 0, ( 4228091901 ) -> 0, ( 621568 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, ( 4228091900 ) -> 0, ( 4228091903 ) -> 0, ( 621573 ) -> 68, ( 621572 ) -> 196, ( 621571 ) -> 0, ( 621570 ) -> 0, ( 621569 ) -> 0, ( 621583 ) -> 178, ( 621582 ) -> 24, ( 621581 ) -> 172, ( 621577 ) -> 56, ( 621579 ) -> 145, ( 621576 ) -> 100, ( 621580 ) -> 68, ( 621578 ) -> 235, () -> 14) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 2987961412 { -1307005884 } : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 621580 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 621568 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 17676 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4228095888 { -66871408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 145663 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294815103 { -152193 } : BV:32
=input.src.llvm-%mul
1 : 2307391684 { -1987575612 } : BV:32
=input.src.llvm-%arrayidx2
1 : 4294687116 { -280180 } : BV:32
=input.src.llvm-%arrayidx1
1 : 17676 : BV:32
=input.src.llvm-%arrayidx
1 : 4228095900 { -66871396 } : BV:32
=input.src.llvm-%arrayidx4
1 : 621580 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 235798542 : BV:32
=input.src.llvm-%add
1 : 2543190226 { -1751777070 } : BV:32
=input.src.llvm-%0
1 : 235798542 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 4294687116 { -280180 } : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 17664 : BV:32
=memlabel-mem-esp_begin
1 : 33755136 : BV:32
=memlabel-mem-esp_end
1 : 4228091903 { -66875393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294687104 { -280192 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294687104 ) -> 0, ( 4228095888 ) -> 0, ( 17664 ) -> 4, ( 4228095893 ) -> 0, ( 4294687113 ) -> 0, ( 4294687108 ) -> 61, ( 4294687112 ) -> 50, ( 4228095889 ) -> 0, ( 4228095896 ) -> 50, ( 17669 ) -> 0, ( 4294687117 ) -> 0, ( 17665 ) -> 0, ( 17677 ) -> 0, ( 4294687109 ) -> 0, ( 17668 ) -> 103, ( 4294687105 ) -> 0, ( 17673 ) -> 0, ( 17672 ) -> 50, ( 4228095897 ) -> 0, ( 4228095901 ) -> 0, ( 4228095892 ) -> 103, () -> 14) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 235798532 : BV:32
=unaliased_memslot.0
1 : 235798528 : BV:32
=unaliased_memslot.3
1 : 235798631 : BV:32
=unaliased_memslot.2
1 : 235798528 : BV:32
=unaliased_memslot.7
1 : 235798578 : BV:32
=unaliased_memslot.4
1 : 235798631 : BV:32
=unaliased_memslot.5
1 : 235798542 : BV:32
=unaliased_memslot.6
1 : 235798589 : BV:32
=unaliased_memslot.10
1 : 235798542 : BV:32
=unaliased_memslot.8
1 : 235798578 : BV:32
=unaliased_memslot.9
1 : 235798578 : BV:32
=unaliased_memslot.11
1 : 235798542 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302256187
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 85
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2985265344 { -1309701952 } : BV:32
=symbol.4
1 : 2971788288 { -1323179008 } : BV:32
=symbol.1
1 : 2147453104 : BV:32
=symbol.2
1 : 1331459904 : BV:32
=dst_symbol_addr.1
1 : 2147453104 : BV:32
=dst_symbol_addr.2
1 : 1331459904 : BV:32
=dst_symbol_addr.3
1 : 2985265344 { -1309701952 } : BV:32
=dst_symbol_addr.4
1 : 2971788288 { -1323179008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1132462076 : BV:32
=input.src.llvm-mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2971916287 { -1323051009 } : BV:32
=stack.size
1 : 1123811328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147581103 { -2147386193 } : BV:32
=input.dst.mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2971788288 { -1323179008 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147453104 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1331587903 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2985393343 { -1309573953 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1331459904 : BV:32
=memlabel-mem-esp_begin
1 : 8650752 : BV:32
=memlabel-mem-esp_end
1 : 1132462079 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2985265344 { -1309701952 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 5 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 19 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 127 : BV:32
=unaliased_memslot.11
1 : 53 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
806636938
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 85 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1132462076 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2985265344 { -1309701952 } : BV:32
=symbol.4
1 : 2971788288 { -1323179008 } : BV:32
=symbol.1
1 : 2147453104 : BV:32
=symbol.2
1 : 1331459904 : BV:32
=dst_symbol_addr.1
1 : 2147453104 : BV:32
=dst_symbol_addr.2
1 : 1331459904 : BV:32
=dst_symbol_addr.3
1 : 2985265344 { -1309701952 } : BV:32
=dst_symbol_addr.4
1 : 2971788288 { -1323179008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1132462076 : BV:32
=input.src.llvm-mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2971916287 { -1323051009 } : BV:32
=input.dst.esp.L0%1%1
1 : 1132462076 : BV:32
=stack.size
1 : 1123811328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147581103 { -2147386193 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2971788288 { -1323179008 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147453104 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1331587903 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2985393343 { -1309573953 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1331459904 : BV:32
=memlabel-mem-esp_begin
1 : 8650752 : BV:32
=memlabel-mem-esp_end
1 : 1132462079 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2985265344 { -1309701952 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1331459904 ) -> 7, ( 2147453112 ) -> 1, ( 2985265356 ) -> 53, ( 1331459912 ) -> 1, ( 2985265352 ) -> 127, ( 2147453108 ) -> 5, ( 2985265348 ) -> 1, ( 1331459908 ) -> 19, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 5 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 19 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 127 : BV:32
=unaliased_memslot.11
1 : 53 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
806636938
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 86
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342180352 : BV:32
=symbol.4
1 : 1286627856 : BV:32
=symbol.1
1 : 1879047680 : BV:32
=symbol.2
1 : 1689340672 : BV:32
=dst_symbol_addr.1
1 : 1879047680 : BV:32
=dst_symbol_addr.2
1 : 1689340672 : BV:32
=dst_symbol_addr.3
1 : 1342180352 : BV:32
=dst_symbol_addr.4
1 : 1286627856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1286755855 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1879175679 : BV:32
=input.dst.mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1286627856 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1879047680 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1689468671 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342308351 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1689340672 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342180352 : BV:32
=commonMEM.nonstack.mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=unaliased_memslot.11
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2023431017
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 86 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342180352 : BV:32
=symbol.4
1 : 1286627856 : BV:32
=symbol.1
1 : 1879047680 : BV:32
=symbol.2
1 : 1689340672 : BV:32
=dst_symbol_addr.1
1 : 1879047680 : BV:32
=dst_symbol_addr.2
1 : 1689340672 : BV:32
=dst_symbol_addr.3
1 : 1342180352 : BV:32
=dst_symbol_addr.4
1 : 1286627856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1286755855 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1879175679 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1286627856 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1879047680 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1689468671 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342308351 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1689340672 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342180352 : BV:32
=commonMEM.nonstack.mem
1 : (( 1879047680 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=unaliased_memslot.11
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2023431017
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 87
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4026458912 { -268508384 } : BV:32
=symbol.4
1 : 3221192848 { -1073774448 } : BV:32
=symbol.1
1 : 2147418144 : BV:32
=symbol.2
1 : 4285022800 { -9944496 } : BV:32
=dst_symbol_addr.1
1 : 2147418144 : BV:32
=dst_symbol_addr.2
1 : 4285022800 { -9944496 } : BV:32
=dst_symbol_addr.3
1 : 4026458912 { -268508384 } : BV:32
=dst_symbol_addr.4
1 : 3221192848 { -1073774448 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1665724412 : BV:32
=input.src.llvm-mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3221320847 { -1073646449 } : BV:32
=stack.size
1 : 793337856 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147546143 { -2147421153 } : BV:32
=input.dst.mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3221192848 { -1073774448 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147418144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285150799 { -9816497 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4026586911 { -268380385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4285022800 { -9944496 } : BV:32
=memlabel-mem-esp_begin
1 : 872386560 : BV:32
=memlabel-mem-esp_end
1 : 1665724415 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4026458912 { -268508384 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 65535 : BV:32
=unaliased_memslot.0
1 : 65532 : BV:32
=unaliased_memslot.3
1 : 271 : BV:32
=unaliased_memslot.2
1 : 65399 : BV:32
=unaliased_memslot.7
1 : 63 : BV:32
=unaliased_memslot.4
1 : 65341 : BV:32
=unaliased_memslot.5
1 : 449 : BV:32
=unaliased_memslot.6
1 : 29 : BV:32
=unaliased_memslot.10
1 : 56 : BV:32
=unaliased_memslot.8
1 : 65143 : BV:32
=unaliased_memslot.9
1 : 13 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
166730292
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 87 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1665724412 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4026458912 { -268508384 } : BV:32
=symbol.4
1 : 3221192848 { -1073774448 } : BV:32
=symbol.1
1 : 2147418144 : BV:32
=symbol.2
1 : 4285022800 { -9944496 } : BV:32
=dst_symbol_addr.1
1 : 2147418144 : BV:32
=dst_symbol_addr.2
1 : 4285022800 { -9944496 } : BV:32
=dst_symbol_addr.3
1 : 4026458912 { -268508384 } : BV:32
=dst_symbol_addr.4
1 : 3221192848 { -1073774448 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1665724412 : BV:32
=input.src.llvm-mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3221320847 { -1073646449 } : BV:32
=input.dst.esp.L0%1%1
1 : 1665724412 : BV:32
=stack.size
1 : 793337856 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147546143 { -2147421153 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3221192848 { -1073774448 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147418144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285150799 { -9816497 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4026586911 { -268380385 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4285022800 { -9944496 } : BV:32
=memlabel-mem-esp_begin
1 : 872386560 : BV:32
=memlabel-mem-esp_end
1 : 1665724415 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4026458912 { -268508384 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4026458912 ) -> 255, ( 4285022800 ) -> 252, ( 2147418149 ) -> 255, ( 4026458921 ) -> 254, ( 4026458920 ) -> 119, ( 2147418152 ) -> 29, ( 4285022801 ) -> 255, ( 4285022805 ) -> 1, ( 4026458917 ) -> 1, ( 2147418156 ) -> 61, ( 4026458913 ) -> 255, ( 2147418157 ) -> 255, ( 4026458924 ) -> 56, ( 2147418148 ) -> 119, ( 4026458916 ) -> 193, ( 4285022808 ) -> 63, ( 4285022804 ) -> 15, ( 4285022812 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 65535 : BV:32
=unaliased_memslot.0
1 : 65532 : BV:32
=unaliased_memslot.3
1 : 271 : BV:32
=unaliased_memslot.2
1 : 65399 : BV:32
=unaliased_memslot.7
1 : 63 : BV:32
=unaliased_memslot.4
1 : 65341 : BV:32
=unaliased_memslot.5
1 : 449 : BV:32
=unaliased_memslot.6
1 : 29 : BV:32
=unaliased_memslot.10
1 : 56 : BV:32
=unaliased_memslot.8
1 : 65143 : BV:32
=unaliased_memslot.9
1 : 13 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
166730292
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 88
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3220056064 { -1074911232 } : BV:32
=symbol.4
1 : 2204026880 { -2090940416 } : BV:32
=symbol.1
1 : 2200800256 { -2094167040 } : BV:32
=symbol.2
1 : 1211009024 : BV:32
=dst_symbol_addr.1
1 : 2200800256 { -2094167040 } : BV:32
=dst_symbol_addr.2
1 : 1211009024 : BV:32
=dst_symbol_addr.3
1 : 3220056064 { -1074911232 } : BV:32
=dst_symbol_addr.4
1 : 2204026880 { -2090940416 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1155497980 : BV:32
=input.src.llvm-mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2204154879 { -2090812417 } : BV:32
=stack.size
1 : 75448320 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2200928255 { -2094039041 } : BV:32
=input.dst.mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2204026880 { -2090940416 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2200800256 { -2094167040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1211137023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3220184063 { -1074783233 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1211009024 : BV:32
=memlabel-mem-esp_begin
1 : 1080049664 : BV:32
=memlabel-mem-esp_end
1 : 1155497983 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3220056064 { -1074911232 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 61 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 177 : BV:32
=unaliased_memslot.4
1 : 2 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 48 : BV:32
=unaliased_memslot.8
1 : 148 : BV:32
=unaliased_memslot.9
1 : 205 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
284589771
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 88 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1155497980 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3220056064 { -1074911232 } : BV:32
=symbol.4
1 : 2204026880 { -2090940416 } : BV:32
=symbol.1
1 : 2200800256 { -2094167040 } : BV:32
=symbol.2
1 : 1211009024 : BV:32
=dst_symbol_addr.1
1 : 2200800256 { -2094167040 } : BV:32
=dst_symbol_addr.2
1 : 1211009024 : BV:32
=dst_symbol_addr.3
1 : 3220056064 { -1074911232 } : BV:32
=dst_symbol_addr.4
1 : 2204026880 { -2090940416 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1155497980 : BV:32
=input.src.llvm-mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2204154879 { -2090812417 } : BV:32
=input.dst.esp.L0%1%1
1 : 1155497980 : BV:32
=stack.size
1 : 75448320 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2200928255 { -2094039041 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2204026880 { -2090940416 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2200800256 { -2094167040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1211137023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3220184063 { -1074783233 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1211009024 : BV:32
=memlabel-mem-esp_begin
1 : 1080049664 : BV:32
=memlabel-mem-esp_end
1 : 1155497983 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3220056064 { -1074911232 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3220056076 ) -> 48, ( 3220056072 ) -> 148, ( 1211009028 ) -> 61, ( 1211009032 ) -> 177, ( 1211009036 ) -> 205, ( 2200800268 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 61 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 177 : BV:32
=unaliased_memslot.4
1 : 2 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 48 : BV:32
=unaliased_memslot.8
1 : 148 : BV:32
=unaliased_memslot.9
1 : 205 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
284589771
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 89
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 976912384 : BV:32
=symbol.4
1 : 3388936704 { -906030592 } : BV:32
=symbol.1
1 : 821952512 : BV:32
=symbol.2
1 : 368994320 : BV:32
=dst_symbol_addr.1
1 : 821952512 : BV:32
=dst_symbol_addr.2
1 : 368994320 : BV:32
=dst_symbol_addr.3
1 : 976912384 : BV:32
=dst_symbol_addr.4
1 : 3388936704 { -906030592 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147483644 : BV:32
=input.src.llvm-mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3389064703 { -905902593 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822080511 : BV:32
=input.dst.mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3388936704 { -906030592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 821952512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 369122319 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 977040383 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 368994320 : BV:32
=memlabel-mem-esp_begin
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 976912384 : BV:32
=commonMEM.nonstack.mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502859928
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 89 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147483644 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 976912384 : BV:32
=symbol.4
1 : 3388936704 { -906030592 } : BV:32
=symbol.1
1 : 821952512 : BV:32
=symbol.2
1 : 368994320 : BV:32
=dst_symbol_addr.1
1 : 821952512 : BV:32
=dst_symbol_addr.2
1 : 368994320 : BV:32
=dst_symbol_addr.3
1 : 976912384 : BV:32
=dst_symbol_addr.4
1 : 3388936704 { -906030592 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147483644 : BV:32
=input.src.llvm-mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3389064703 { -905902593 } : BV:32
=input.dst.esp.L0%1%1
1 : 2147483644 : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822080511 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3388936704 { -906030592 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 821952512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 369122319 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 977040383 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 368994320 : BV:32
=memlabel-mem-esp_begin
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 976912384 : BV:32
=commonMEM.nonstack.mem
1 : (( 976912384 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502859928
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 90
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287057570
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 90 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3288309756 { -1006657540 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=input.dst.esp.L0%1%1
1 : 3288309756 { -1006657540 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
287057570
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 91
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 246 , m_adder -> 161)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 246 , m_adder -> 161)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
21764689
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 91 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 246 , m_adder -> 161)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 246 , m_adder -> 161)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
21764689
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 92
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294185872 { -781424 } : BV:32
=symbol.4
1 : 663456 : BV:32
=symbol.1
1 : 4293655584 { -1311712 } : BV:32
=symbol.2
1 : 4293496816 { -1470480 } : BV:32
=dst_symbol_addr.1
1 : 4293655584 { -1311712 } : BV:32
=dst_symbol_addr.2
1 : 4293496816 { -1470480 } : BV:32
=dst_symbol_addr.3
1 : 4294185872 { -781424 } : BV:32
=dst_symbol_addr.4
1 : 663456 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4293398524 { -1568772 } : BV:32
=input.src.llvm-mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 791455 : BV:32
=stack.size
1 : 4291301376 { -3665920 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293783583 { -1183713 } : BV:32
=input.dst.mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 663456 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293655584 { -1311712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4293624815 { -1342481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294313871 { -653425 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293496816 { -1470480 } : BV:32
=memlabel-mem-esp_begin
1 : 2097152 : BV:32
=memlabel-mem-esp_end
1 : 4293398527 { -1568769 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294185872 { -781424 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 118 : BV:32
=unaliased_memslot.2
1 : 118 : BV:32
=unaliased_memslot.7
1 : 51 : BV:32
=unaliased_memslot.4
1 : 47 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.6
1 : 51 : BV:32
=unaliased_memslot.10
1 : 47 : BV:32
=unaliased_memslot.8
1 : 51 : BV:32
=unaliased_memslot.9
1 : 47 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
311931809
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 92 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4293398524 { -1568772 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294185872 { -781424 } : BV:32
=symbol.4
1 : 663456 : BV:32
=symbol.1
1 : 4293655584 { -1311712 } : BV:32
=symbol.2
1 : 4293496816 { -1470480 } : BV:32
=dst_symbol_addr.1
1 : 4293655584 { -1311712 } : BV:32
=dst_symbol_addr.2
1 : 4293496816 { -1470480 } : BV:32
=dst_symbol_addr.3
1 : 4294185872 { -781424 } : BV:32
=dst_symbol_addr.4
1 : 663456 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4293398524 { -1568772 } : BV:32
=input.src.llvm-mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 791455 : BV:32
=input.dst.esp.L0%1%1
1 : 4293398524 { -1568772 } : BV:32
=stack.size
1 : 4291301376 { -3665920 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293783583 { -1183713 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 663456 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293655584 { -1311712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4293624815 { -1342481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294313871 { -653425 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293496816 { -1470480 } : BV:32
=memlabel-mem-esp_begin
1 : 2097152 : BV:32
=memlabel-mem-esp_end
1 : 4293398527 { -1568769 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294185872 { -781424 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4293655596 ) -> 47, ( 4294185884 ) -> 47, ( 4293655588 ) -> 118, ( 4294185876 ) -> 9, ( 4293655592 ) -> 51, ( 4294185880 ) -> 51, ( 4293496824 ) -> 51, ( 4293496820 ) -> 118, ( 4293496828 ) -> 47, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 118 : BV:32
=unaliased_memslot.2
1 : 118 : BV:32
=unaliased_memslot.7
1 : 51 : BV:32
=unaliased_memslot.4
1 : 47 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.6
1 : 51 : BV:32
=unaliased_memslot.10
1 : 47 : BV:32
=unaliased_memslot.8
1 : 51 : BV:32
=unaliased_memslot.9
1 : 47 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
311931809
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 93
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3077898752 { -1217068544 } : BV:32
=symbol.4
1 : 2025818048 : BV:32
=symbol.1
1 : 1073613824 : BV:32
=symbol.2
1 : 887037888 : BV:32
=dst_symbol_addr.1
1 : 1073613824 : BV:32
=dst_symbol_addr.2
1 : 887037888 : BV:32
=dst_symbol_addr.3
1 : 3077898752 { -1217068544 } : BV:32
=dst_symbol_addr.4
1 : 2025818048 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 65011708 : BV:32
=input.src.llvm-mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2025946047 : BV:32
=stack.size
1 : 63963136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073741823 : BV:32
=input.dst.mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2025818048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073613824 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 887165887 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3078026751 { -1216940545 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 887037888 : BV:32
=memlabel-mem-esp_begin
1 : 1048576 : BV:32
=memlabel-mem-esp_end
1 : 65011711 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3077898752 { -1217068544 } : BV:32
=commonMEM.nonstack.mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.3
1 : 87 : BV:32
=unaliased_memslot.2
1 : 51 : BV:32
=unaliased_memslot.7
1 : 16 : BV:32
=unaliased_memslot.4
1 : 41 : BV:32
=unaliased_memslot.5
1 : 99 : BV:32
=unaliased_memslot.6
1 : 32 : BV:32
=unaliased_memslot.10
1 : 40 : BV:32
=unaliased_memslot.8
1 : 83 : BV:32
=unaliased_memslot.9
1 : 38 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1443478145
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 93 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 65011708 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3077898752 { -1217068544 } : BV:32
=symbol.4
1 : 2025818048 : BV:32
=symbol.1
1 : 1073613824 : BV:32
=symbol.2
1 : 887037888 : BV:32
=dst_symbol_addr.1
1 : 1073613824 : BV:32
=dst_symbol_addr.2
1 : 887037888 : BV:32
=dst_symbol_addr.3
1 : 3077898752 { -1217068544 } : BV:32
=dst_symbol_addr.4
1 : 2025818048 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 65011708 : BV:32
=input.src.llvm-mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2025946047 : BV:32
=input.dst.esp.L0%1%1
1 : 65011708 : BV:32
=stack.size
1 : 63963136 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073741823 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2025818048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073613824 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 887165887 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3078026751 { -1216940545 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 887037888 : BV:32
=memlabel-mem-esp_begin
1 : 1048576 : BV:32
=memlabel-mem-esp_end
1 : 65011711 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3077898752 { -1217068544 } : BV:32
=commonMEM.nonstack.mem
1 : (( 887037888 ) -> 7, ( 887037892 ) -> 87, ( 3077898756 ) -> 99, ( 1073613828 ) -> 51, ( 887037896 ) -> 16, ( 3077898760 ) -> 83, ( 1073613832 ) -> 32, ( 3077898764 ) -> 40, ( 887037900 ) -> 38, ( 1073613836 ) -> 41, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.3
1 : 87 : BV:32
=unaliased_memslot.2
1 : 51 : BV:32
=unaliased_memslot.7
1 : 16 : BV:32
=unaliased_memslot.4
1 : 41 : BV:32
=unaliased_memslot.5
1 : 99 : BV:32
=unaliased_memslot.6
1 : 32 : BV:32
=unaliased_memslot.10
1 : 40 : BV:32
=unaliased_memslot.8
1 : 83 : BV:32
=unaliased_memslot.9
1 : 38 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1443478145
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 94
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=commonMEM.nonstack.mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1322467930
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 94 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=commonMEM.nonstack.mem
1 : (( 1552485376 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1322467930
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 95
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1073677376 : BV:32
=symbol.4
1 : 1610676320 : BV:32
=symbol.1
1 : 3221224448 { -1073742848 } : BV:32
=symbol.2
1 : 2147355760 : BV:32
=dst_symbol_addr.1
1 : 3221224448 { -1073742848 } : BV:32
=dst_symbol_addr.2
1 : 2147355760 : BV:32
=dst_symbol_addr.3
1 : 1073677376 : BV:32
=dst_symbol_addr.4
1 : 1610676320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294811644 { -155652 } : BV:32
=input.src.llvm-mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1610804319 : BV:32
=stack.size
1 : 1073459200 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3221352447 { -1073614849 } : BV:32
=input.dst.mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1610676320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221224448 { -1073742848 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147483759 { -2147483537 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1073805375 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147355760 : BV:32
=memlabel-mem-esp_begin
1 : 3221352448 { -1073614848 } : BV:32
=memlabel-mem-esp_end
1 : 4294811647 { -155649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1073677376 : BV:32
=commonMEM.nonstack.mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 4294967041 { -255 } : BV:32
=unaliased_memslot.2
1 : 4294967281 { -15 } : BV:32
=unaliased_memslot.7
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.4
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.5
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.6
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.10
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.8
1 : 4294967049 { -247 } : BV:32
=unaliased_memslot.9
1 : 4294967047 { -249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1864652544
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 95 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294811644 { -155652 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1073677376 : BV:32
=symbol.4
1 : 1610676320 : BV:32
=symbol.1
1 : 3221224448 { -1073742848 } : BV:32
=symbol.2
1 : 2147355760 : BV:32
=dst_symbol_addr.1
1 : 3221224448 { -1073742848 } : BV:32
=dst_symbol_addr.2
1 : 2147355760 : BV:32
=dst_symbol_addr.3
1 : 1073677376 : BV:32
=dst_symbol_addr.4
1 : 1610676320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294811644 { -155652 } : BV:32
=input.src.llvm-mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1610804319 : BV:32
=input.dst.esp.L0%1%1
1 : 4294811644 { -155652 } : BV:32
=stack.size
1 : 1073459200 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3221352447 { -1073614849 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294811646 ) -> 0, ( 4294811645 ) -> 0, ( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, ( 4294811644 ) -> 0, ( 4294811647 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1610676320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221224448 { -1073742848 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147483759 { -2147483537 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1073805375 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147355760 : BV:32
=memlabel-mem-esp_begin
1 : 3221352448 { -1073614848 } : BV:32
=memlabel-mem-esp_end
1 : 4294811647 { -155649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1073677376 : BV:32
=commonMEM.nonstack.mem
1 : (( 1073677388 ) -> 3, ( 3221224452 ) -> 241, ( 3221224456 ) -> 254, ( 1073677384 ) -> 9, ( 2147355768 ) -> 3, ( 2147355764 ) -> 1, ( 1073677380 ) -> 3, ( 2147355772 ) -> 7, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.3
1 : 4294967041 { -255 } : BV:32
=unaliased_memslot.2
1 : 4294967281 { -15 } : BV:32
=unaliased_memslot.7
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.4
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.5
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.6
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.10
1 : 4294967043 { -253 } : BV:32
=unaliased_memslot.8
1 : 4294967049 { -247 } : BV:32
=unaliased_memslot.9
1 : 4294967047 { -249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1864652544
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 96
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 856937440 : BV:32
=symbol.4
1 : 829543312 : BV:32
=symbol.1
1 : 822072272 : BV:32
=symbol.2
1 : 796781568 : BV:32
=dst_symbol_addr.1
1 : 822072272 : BV:32
=dst_symbol_addr.2
1 : 796781568 : BV:32
=dst_symbol_addr.3
1 : 856937440 : BV:32
=dst_symbol_addr.4
1 : 829543312 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 774340604 : BV:32
=input.src.llvm-mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 829671311 : BV:32
=stack.size
1 : 471957504 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822200271 : BV:32
=input.dst.mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 829543312 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 822072272 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 796909567 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 857065439 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 796781568 : BV:32
=memlabel-mem-esp_begin
1 : 302383104 : BV:32
=memlabel-mem-esp_end
1 : 774340607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 856937440 : BV:32
=commonMEM.nonstack.mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 15 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
269374550
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 96 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 774340604 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 856937440 : BV:32
=symbol.4
1 : 829543312 : BV:32
=symbol.1
1 : 822072272 : BV:32
=symbol.2
1 : 796781568 : BV:32
=dst_symbol_addr.1
1 : 822072272 : BV:32
=dst_symbol_addr.2
1 : 796781568 : BV:32
=dst_symbol_addr.3
1 : 856937440 : BV:32
=dst_symbol_addr.4
1 : 829543312 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 774340604 : BV:32
=input.src.llvm-mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 829671311 : BV:32
=input.dst.esp.L0%1%1
1 : 774340604 : BV:32
=stack.size
1 : 471957504 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 822200271 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 829543312 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 822072272 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 796909567 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 857065439 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 796781568 : BV:32
=memlabel-mem-esp_begin
1 : 302383104 : BV:32
=memlabel-mem-esp_end
1 : 774340607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 856937440 : BV:32
=commonMEM.nonstack.mem
1 : (( 856937452 ) -> 15, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 15 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
269374550
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 97
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.dst.mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=commonMEM.nonstack.mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1844208513
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 97 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1552285696 : BV:32
=symbol.4
1 : 1277135872 : BV:32
=symbol.1
1 : 1610550288 : BV:32
=symbol.2
1 : 1552485376 : BV:32
=dst_symbol_addr.1
1 : 1610550288 : BV:32
=dst_symbol_addr.2
1 : 1552485376 : BV:32
=dst_symbol_addr.3
1 : 1552285696 : BV:32
=dst_symbol_addr.4
1 : 1277135872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1277263871 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1610678287 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1277135872 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1610550288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1552613375 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1552413695 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1552485376 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1552285696 : BV:32
=commonMEM.nonstack.mem
1 : (( 1552285696 ) -> 1, ( 1552485376 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1844208513
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 98
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294443040 { -524256 } : BV:32
=symbol.4
1 : 4294834176 { -133120 } : BV:32
=symbol.1
1 : 4294705536 { -261760 } : BV:32
=symbol.2
1 : 4286316544 { -8650752 } : BV:32
=dst_symbol_addr.1
1 : 4294705536 { -261760 } : BV:32
=dst_symbol_addr.2
1 : 4286316544 { -8650752 } : BV:32
=dst_symbol_addr.3
1 : 4294443040 { -524256 } : BV:32
=dst_symbol_addr.4
1 : 4294834176 { -133120 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3489398780 { -805568516 } : BV:32
=input.src.llvm-mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4294962175 { -5121 } : BV:32
=stack.size
1 : 3489394688 { -805572608 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294833535 { -133761 } : BV:32
=input.dst.mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4294834176 { -133120 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294705536 { -261760 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4286444543 { -8522753 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294571039 { -396257 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286316544 { -8650752 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-esp_end
1 : 3489398783 { -805568513 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294443040 { -524256 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294901821 { -65475 } : BV:32
=unaliased_memslot.0
1 : 4294967236 { -60 } : BV:32
=unaliased_memslot.3
1 : 4294901791 { -65505 } : BV:32
=unaliased_memslot.2
1 : 4294967099 { -197 } : BV:32
=unaliased_memslot.7
1 : 4294901772 { -65524 } : BV:32
=unaliased_memslot.4
1 : 4294901775 { -65521 } : BV:32
=unaliased_memslot.5
1 : 4294967278 { -18 } : BV:32
=unaliased_memslot.6
1 : 4294901773 { -65523 } : BV:32
=unaliased_memslot.8
1 : 4294901979 { -65317 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1024641629
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 98 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3489398780 { -805568516 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294443040 { -524256 } : BV:32
=symbol.4
1 : 4294834176 { -133120 } : BV:32
=symbol.1
1 : 4294705536 { -261760 } : BV:32
=symbol.2
1 : 4286316544 { -8650752 } : BV:32
=dst_symbol_addr.1
1 : 4294705536 { -261760 } : BV:32
=dst_symbol_addr.2
1 : 4286316544 { -8650752 } : BV:32
=dst_symbol_addr.3
1 : 4294443040 { -524256 } : BV:32
=dst_symbol_addr.4
1 : 4294834176 { -133120 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3489398780 { -805568516 } : BV:32
=input.src.llvm-mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4294962175 { -5121 } : BV:32
=input.dst.esp.L0%1%1
1 : 3489398780 { -805568516 } : BV:32
=stack.size
1 : 3489394688 { -805572608 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294833535 { -133761 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 3489398782 ) -> 0, ( 3489398781 ) -> 0, ( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, ( 3489398780 ) -> 0, ( 3489398783 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4294834176 { -133120 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294705536 { -261760 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4286444543 { -8522753 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294571039 { -396257 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286316544 { -8650752 } : BV:32
=memlabel-mem-esp_begin
1 : 4096 : BV:32
=memlabel-mem-esp_end
1 : 3489398783 { -805568513 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294443040 { -524256 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294705545 ) -> 0, ( 4294705548 ) -> 59, ( 4286316552 ) -> 238, ( 4294705544 ) -> 15, ( 4294705540 ) -> 196, ( 4286316549 ) -> 0, ( 4286316557 ) -> 0, ( 4294443044 ) -> 31, ( 4294443052 ) -> 219, ( 4294443049 ) -> 0, ( 4294443048 ) -> 13, ( 4294443053 ) -> 0, ( 4286316556 ) -> 12, ( 4286316548 ) -> 61, ( 4294443045 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294901821 { -65475 } : BV:32
=unaliased_memslot.0
1 : 4294967236 { -60 } : BV:32
=unaliased_memslot.3
1 : 4294901791 { -65505 } : BV:32
=unaliased_memslot.2
1 : 4294967099 { -197 } : BV:32
=unaliased_memslot.7
1 : 4294901772 { -65524 } : BV:32
=unaliased_memslot.4
1 : 4294901775 { -65521 } : BV:32
=unaliased_memslot.5
1 : 4294967278 { -18 } : BV:32
=unaliased_memslot.6
1 : 4294901773 { -65523 } : BV:32
=unaliased_memslot.8
1 : 4294901979 { -65317 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1024641629
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 99
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147288576 : BV:32
=symbol.4
1 : 1073548288 : BV:32
=symbol.1
1 : 536779248 : BV:32
=symbol.2
1 : 269142912 : BV:32
=dst_symbol_addr.1
1 : 536779248 : BV:32
=dst_symbol_addr.2
1 : 269142912 : BV:32
=dst_symbol_addr.3
1 : 2147288576 : BV:32
=dst_symbol_addr.4
1 : 1073548288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 233537532 : BV:32
=input.src.llvm-mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1073676287 : BV:32
=stack.size
1 : 99053568 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536907247 : BV:32
=input.dst.mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1073548288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536779248 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 269270911 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147416575 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 269142912 : BV:32
=memlabel-mem-esp_begin
1 : 134483968 : BV:32
=memlabel-mem-esp_end
1 : 233537535 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147288576 : BV:32
=commonMEM.nonstack.mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 15 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 20 : BV:32
=unaliased_memslot.7
1 : 7 : BV:32
=unaliased_memslot.4
1 : 4 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 21 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
617577122
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 99 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 233537532 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2147288576 : BV:32
=symbol.4
1 : 1073548288 : BV:32
=symbol.1
1 : 536779248 : BV:32
=symbol.2
1 : 269142912 : BV:32
=dst_symbol_addr.1
1 : 536779248 : BV:32
=dst_symbol_addr.2
1 : 269142912 : BV:32
=dst_symbol_addr.3
1 : 2147288576 : BV:32
=dst_symbol_addr.4
1 : 1073548288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 233537532 : BV:32
=input.src.llvm-mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1073676287 : BV:32
=input.dst.esp.L0%1%1
1 : 233537532 : BV:32
=stack.size
1 : 99053568 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536907247 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1073548288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536779248 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 269270911 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147416575 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 269142912 : BV:32
=memlabel-mem-esp_begin
1 : 134483968 : BV:32
=memlabel-mem-esp_end
1 : 233537535 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147288576 : BV:32
=commonMEM.nonstack.mem
1 : (( 2147288584 ) -> 21, ( 536779260 ) -> 20, ( 2147288580 ) -> 1, ( 536779252 ) -> 15, ( 269142916 ) -> 1, ( 269142924 ) -> 7, ( 536779256 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 15 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.2
1 : 20 : BV:32
=unaliased_memslot.7
1 : 7 : BV:32
=unaliased_memslot.4
1 : 4 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 21 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
617577122
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 100
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 402653168 : BV:32
=symbol.4
1 : 234761232 : BV:32
=symbol.1
1 : 3360566288 { -934401008 } : BV:32
=symbol.2
1 : 1967120 : BV:32
=dst_symbol_addr.1
1 : 3360566288 { -934401008 } : BV:32
=dst_symbol_addr.2
1 : 1967120 : BV:32
=dst_symbol_addr.3
1 : 402653168 : BV:32
=dst_symbol_addr.4
1 : 234761232 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2818269180 { -1476698116 } : BV:32
=input.src.llvm-mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 234889231 : BV:32
=stack.size
1 : 2281697280 { -2013270016 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3360694287 { -934273009 } : BV:32
=input.dst.mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 234761232 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3360566288 { -934401008 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2095119 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 402781167 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1967120 : BV:32
=memlabel-mem-esp_begin
1 : 536571904 : BV:32
=memlabel-mem-esp_end
1 : 2818269183 { -1476698113 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 402653168 : BV:32
=commonMEM.nonstack.mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 33685504 : BV:32
=unaliased_memslot.0
1 : 33685504 : BV:32
=unaliased_memslot.3
1 : 33685506 : BV:32
=unaliased_memslot.2
1 : 33685506 : BV:32
=unaliased_memslot.7
1 : 33685506 : BV:32
=unaliased_memslot.4
1 : 33685536 : BV:32
=unaliased_memslot.5
1 : 33685506 : BV:32
=unaliased_memslot.6
1 : 33685506 : BV:32
=unaliased_memslot.10
1 : 33685536 : BV:32
=unaliased_memslot.8
1 : 33685506 : BV:32
=unaliased_memslot.9
1 : 33685536 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1994766608
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 100 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2818269180 { -1476698116 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 402653168 : BV:32
=symbol.4
1 : 234761232 : BV:32
=symbol.1
1 : 3360566288 { -934401008 } : BV:32
=symbol.2
1 : 1967120 : BV:32
=dst_symbol_addr.1
1 : 3360566288 { -934401008 } : BV:32
=dst_symbol_addr.2
1 : 1967120 : BV:32
=dst_symbol_addr.3
1 : 402653168 : BV:32
=dst_symbol_addr.4
1 : 234761232 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2818269180 { -1476698116 } : BV:32
=input.src.llvm-mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 234889231 : BV:32
=input.dst.esp.L0%1%1
1 : 2818269180 { -1476698116 } : BV:32
=stack.size
1 : 2281697280 { -2013270016 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3360694287 { -934273009 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 2818269182 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 2818269181 ) -> 0, ( 2818269180 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 2818269183 ) -> 0, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 234761232 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3360566288 { -934401008 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2095119 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 402781167 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1967120 : BV:32
=memlabel-mem-esp_begin
1 : 536571904 : BV:32
=memlabel-mem-esp_end
1 : 2818269183 { -1476698113 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 402653168 : BV:32
=commonMEM.nonstack.mem
1 : (( 1967129 ) -> 0, ( 1967121 ) -> 0, ( 402653177 ) -> 0, ( 402653168 ) -> 0, ( 1967120 ) -> 0, ( 402653180 ) -> 32, ( 402653169 ) -> 0, ( 3360566301 ) -> 0, ( 402653181 ) -> 0, ( 402653173 ) -> 0, ( 3360566293 ) -> 0, ( 3360566297 ) -> 0, ( 1967133 ) -> 0, ( 1967132 ) -> 32, ( 1967125 ) -> 0, ( 3360566300 ) -> 32, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 33685504 : BV:32
=unaliased_memslot.0
1 : 33685504 : BV:32
=unaliased_memslot.3
1 : 33685506 : BV:32
=unaliased_memslot.2
1 : 33685506 : BV:32
=unaliased_memslot.7
1 : 33685506 : BV:32
=unaliased_memslot.4
1 : 33685536 : BV:32
=unaliased_memslot.5
1 : 33685506 : BV:32
=unaliased_memslot.6
1 : 33685506 : BV:32
=unaliased_memslot.10
1 : 33685536 : BV:32
=unaliased_memslot.8
1 : 33685506 : BV:32
=unaliased_memslot.9
1 : 33685536 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1994766608
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 101
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221160288 { -1073807008 } : BV:32
=symbol.4
1 : 2153644064 { -2141323232 } : BV:32
=symbol.1
1 : 2151608656 { -2143358640 } : BV:32
=symbol.2
1 : 1281230848 : BV:32
=dst_symbol_addr.1
1 : 2151608656 { -2143358640 } : BV:32
=dst_symbol_addr.2
1 : 1281230848 : BV:32
=dst_symbol_addr.3
1 : 3221160288 { -1073807008 } : BV:32
=dst_symbol_addr.4
1 : 2153644064 { -2141323232 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1071611900 : BV:32
=input.src.llvm-mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2153772063 { -2141195233 } : BV:32
=stack.size
1 : 360804352 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2151736655 { -2143230641 } : BV:32
=input.dst.mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2153644064 { -2141323232 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2151608656 { -2143358640 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1281358847 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221288287 { -1073679009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1281230848 : BV:32
=memlabel-mem-esp_begin
1 : 710807552 : BV:32
=memlabel-mem-esp_end
1 : 1071611903 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221160288 { -1073807008 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.7
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 5 : BV:32
=unaliased_memslot.6
1 : 4 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 3 : BV:32
=unaliased_memslot.9
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1465724345
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 101 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1071611900 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3221160288 { -1073807008 } : BV:32
=symbol.4
1 : 2153644064 { -2141323232 } : BV:32
=symbol.1
1 : 2151608656 { -2143358640 } : BV:32
=symbol.2
1 : 1281230848 : BV:32
=dst_symbol_addr.1
1 : 2151608656 { -2143358640 } : BV:32
=dst_symbol_addr.2
1 : 1281230848 : BV:32
=dst_symbol_addr.3
1 : 3221160288 { -1073807008 } : BV:32
=dst_symbol_addr.4
1 : 2153644064 { -2141323232 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1071611900 : BV:32
=input.src.llvm-mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2153772063 { -2141195233 } : BV:32
=input.dst.esp.L0%1%1
1 : 1071611900 : BV:32
=stack.size
1 : 360804352 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2151736655 { -2143230641 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2153644064 { -2141323232 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2151608656 { -2143358640 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1281358847 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221288287 { -1073679009 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1281230848 : BV:32
=memlabel-mem-esp_begin
1 : 710807552 : BV:32
=memlabel-mem-esp_end
1 : 1071611903 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221160288 { -1073807008 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1281230856 ) -> 4, ( 3221160296 ) -> 3, ( 1281230852 ) -> 3, ( 1281230860 ) -> 3, ( 2151608664 ) -> 4, ( 2151608660 ) -> 4, ( 3221160292 ) -> 5, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.7
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 5 : BV:32
=unaliased_memslot.6
1 : 4 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 3 : BV:32
=unaliased_memslot.9
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1465724345
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 102
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 135104 : BV:32
=symbol.4
1 : 392192 : BV:32
=symbol.1
1 : 2112 : BV:32
=symbol.2
1 : 264192 : BV:32
=dst_symbol_addr.1
1 : 2112 : BV:32
=dst_symbol_addr.2
1 : 264192 : BV:32
=dst_symbol_addr.3
1 : 135104 : BV:32
=dst_symbol_addr.4
1 : 392192 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 520191 : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130111 : BV:32
=input.dst.mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 392192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 392191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 263103 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 264192 : BV:32
=memlabel-mem-esp_begin
1 : 520192 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 135104 : BV:32
=commonMEM.nonstack.mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 50528256 : BV:32
=unaliased_memslot.0
1 : 50528256 : BV:32
=unaliased_memslot.3
1 : 50528259 : BV:32
=unaliased_memslot.2
1 : 50528256 : BV:32
=unaliased_memslot.7
1 : 50528256 : BV:32
=unaliased_memslot.4
1 : 50528259 : BV:32
=unaliased_memslot.5
1 : 50528256 : BV:32
=unaliased_memslot.6
1 : 50528257 : BV:32
=unaliased_memslot.10
1 : 50528256 : BV:32
=unaliased_memslot.8
1 : 50528256 : BV:32
=unaliased_memslot.9
1 : 50528256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
750630257
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 102 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 135104 : BV:32
=symbol.4
1 : 392192 : BV:32
=symbol.1
1 : 2112 : BV:32
=symbol.2
1 : 264192 : BV:32
=dst_symbol_addr.1
1 : 2112 : BV:32
=dst_symbol_addr.2
1 : 264192 : BV:32
=dst_symbol_addr.3
1 : 135104 : BV:32
=dst_symbol_addr.4
1 : 392192 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 520191 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 130111 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 392192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 392191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 263103 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 264192 : BV:32
=memlabel-mem-esp_begin
1 : 520192 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 135104 : BV:32
=commonMEM.nonstack.mem
1 : (( 135109 ) -> 0, ( 264193 ) -> 0, ( 2125 ) -> 0, ( 2121 ) -> 0, ( 135104 ) -> 0, ( 264192 ) -> 0, ( 2124 ) -> 0, ( 135108 ) -> 1, ( 264200 ) -> 0, ( 264204 ) -> 0, ( 264205 ) -> 0, ( 2117 ) -> 0, ( 264197 ) -> 0, ( 135113 ) -> 0, ( 2113 ) -> 0, ( 135105 ) -> 0, ( 2112 ) -> 0, ( 135112 ) -> 0, ( 264201 ) -> 0, ( 2120 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 50528256 : BV:32
=unaliased_memslot.0
1 : 50528256 : BV:32
=unaliased_memslot.3
1 : 50528259 : BV:32
=unaliased_memslot.2
1 : 50528256 : BV:32
=unaliased_memslot.7
1 : 50528256 : BV:32
=unaliased_memslot.4
1 : 50528259 : BV:32
=unaliased_memslot.5
1 : 50528256 : BV:32
=unaliased_memslot.6
1 : 50528257 : BV:32
=unaliased_memslot.10
1 : 50528256 : BV:32
=unaliased_memslot.8
1 : 50528256 : BV:32
=unaliased_memslot.9
1 : 50528256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
750630257
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 103
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1629779269
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 103 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3288309756 { -1006657540 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3758030912 { -536936384 } : BV:32
=symbol.4
1 : 4261348368 { -33618928 } : BV:32
=symbol.1
1 : 3455975744 { -838991552 } : BV:32
=symbol.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.1
1 : 3455975744 { -838991552 } : BV:32
=dst_symbol_addr.2
1 : 4026433552 { -268533744 } : BV:32
=dst_symbol_addr.3
1 : 3758030912 { -536936384 } : BV:32
=dst_symbol_addr.4
1 : 4261348368 { -33618928 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3288309756 { -1006657540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261476367 { -33490929 } : BV:32
=input.dst.esp.L0%1%1
1 : 3288309756 { -1006657540 } : BV:32
=stack.size
1 : 3288268800 { -1006698496 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3456103743 { -838863553 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261348368 { -33618928 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3455975744 { -838991552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4026561551 { -268405745 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758158911 { -536808385 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4026433552 { -268533744 } : BV:32
=memlabel-mem-esp_begin
1 : 40960 : BV:32
=memlabel-mem-esp_end
1 : 3288309759 { -1006657537 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3758030912 { -536936384 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1629779269
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 104
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1778413934
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 104 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 1073889276 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3221836768 { -1073130528 } : BV:32
=symbol.4
1 : 2148094864 { -2146872432 } : BV:32
=symbol.1
1 : 2147505104 { -2147462192 } : BV:32
=symbol.2
1 : 2063330304 : BV:32
=dst_symbol_addr.1
1 : 2147505104 { -2147462192 } : BV:32
=dst_symbol_addr.2
1 : 2063330304 : BV:32
=dst_symbol_addr.3
1 : 3221836768 { -1073130528 } : BV:32
=dst_symbol_addr.4
1 : 2148094864 { -2146872432 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073889276 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2148222863 { -2146744433 } : BV:32
=input.dst.esp.L0%1%1
1 : 1073889276 : BV:32
=stack.size
1 : 1002930176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147633103 { -2147334193 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2148094864 { -2146872432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147505104 { -2147462192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2063458303 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221964767 { -1073002529 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2063330304 : BV:32
=memlabel-mem-esp_begin
1 : 70959104 : BV:32
=memlabel-mem-esp_end
1 : 1073889279 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221836768 { -1073130528 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1778413934
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 105
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4066816 : BV:32
=symbol.4
1 : 8263792 : BV:32
=symbol.1
1 : 1241909280 : BV:32
=symbol.2
1 : 1210190848 : BV:32
=dst_symbol_addr.1
1 : 1241909280 : BV:32
=dst_symbol_addr.2
1 : 1210190848 : BV:32
=dst_symbol_addr.3
1 : 4066816 : BV:32
=dst_symbol_addr.4
1 : 8263792 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1210190922 ) -> 0, ( 4066886 ) -> 0, ( 4066889 ) -> 0, ( 4066890 ) -> 0, ( 1241909348 ) -> 0, ( 4066888 ) -> 0, ( 4066887 ) -> 0, ( 4066892 ) -> 0, ( 4066891 ) -> 0, ( 4066885 ) -> 0, ( 1210190916 ) -> 0, ( 4066881 ) -> 0, ( 1241909344 ) -> 0, ( 4066884 ) -> 0, ( 1210190912 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 8391791 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 668995584 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1242037279 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=input.dst.mem
1 : (( 1210190922 ) -> 0, ( 4066886 ) -> 0, ( 4066889 ) -> 0, ( 4066890 ) -> 0, ( 1241909348 ) -> 0, ( 4066888 ) -> 0, ( 4066887 ) -> 0, ( 4066892 ) -> 0, ( 4066891 ) -> 0, ( 4066885 ) -> 0, ( 1210190916 ) -> 0, ( 4066881 ) -> 0, ( 1241909344 ) -> 0, ( 4066884 ) -> 0, ( 1210190912 ) -> 0, [ 3625971712; 4294967295 ] -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 8263792 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1241909280 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1210318847 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4194815 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1210190848 : BV:32
=memlabel-mem-esp_begin
1 : 3625971712 { -668995584 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4066816 : BV:32
=commonMEM.nonstack.mem
1 : (( 1210190922 ) -> 0, ( 4066886 ) -> 0, ( 4066889 ) -> 0, ( 4066890 ) -> 0, ( 1241909348 ) -> 0, ( 4066888 ) -> 0, ( 4066887 ) -> 0, ( 4066892 ) -> 0, ( 4066891 ) -> 0, ( 4066885 ) -> 0, ( 1210190916 ) -> 0, ( 4066881 ) -> 0, ( 1241909344 ) -> 0, ( 4066884 ) -> 0, ( 1210190912 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294902015 { -65281 } : BV:32
=unaliased_memslot.2
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.7
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.4
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.10
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.8
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.9
1 : 4294967040 { -256 } : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 4278255615 { -16711681 } : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1113879707
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 105 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 5151811267490056999045744056860672 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4066816 : BV:32
=symbol.4
1 : 8263792 : BV:32
=symbol.1
1 : 1241909280 : BV:32
=symbol.2
1 : 1210190848 : BV:32
=dst_symbol_addr.1
1 : 1241909280 : BV:32
=dst_symbol_addr.2
1 : 1210190848 : BV:32
=dst_symbol_addr.3
1 : 4066816 : BV:32
=dst_symbol_addr.4
1 : 8263792 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1210190922 ) -> 0, ( 4066886 ) -> 0, ( 8263871 ) -> 0, ( 4066889 ) -> 0, ( 4066890 ) -> 0, ( 1241909348 ) -> 0, ( 4066888 ) -> 0, ( 4066887 ) -> 0, ( 4066892 ) -> 0, ( 8263867 ) -> 0, ( 4066891 ) -> 0, ( 4066885 ) -> 0, ( 1210190916 ) -> 0, ( 4066881 ) -> 0, ( 8263866 ) -> 0, ( 1241909344 ) -> 0, ( 4066884 ) -> 0, ( 1210190912 ) -> 0, ( 8263870 ) -> 0, ( 8263869 ) -> 254, ( 8263864 ) -> 1, ( 8263856 ) -> 0, ( 8263868 ) -> 1, ( 8263862 ) -> 1, ( 8263865 ) -> 0, ( 8263861 ) -> 0, ( 8263863 ) -> 0, ( 8263860 ) -> 0, ( 8263858 ) -> 0, ( 8263857 ) -> 0, ( 8263859 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 8391791 : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=stack.size
1 : 668995584 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1242037279 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1241909356 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.dst.mem
1 : (( 1210190922 ) -> 0, ( 4066886 ) -> 0, ( 8263871 ) -> 0, ( 4066889 ) -> 0, ( 4066890 ) -> 0, ( 1241909348 ) -> 0, ( 4066888 ) -> 0, ( 4066887 ) -> 0, ( 4066892 ) -> 0, ( 8263867 ) -> 0, ( 4066891 ) -> 0, ( 4066885 ) -> 0, ( 1210190916 ) -> 0, ( 4066881 ) -> 0, ( 8263866 ) -> 0, ( 1241909344 ) -> 0, ( 4066884 ) -> 0, ( 1210190912 ) -> 0, ( 8263870 ) -> 0, ( 8263869 ) -> 254, ( 8263864 ) -> 1, ( 8263856 ) -> 0, ( 8263868 ) -> 1, ( 8263862 ) -> 1, ( 8263865 ) -> 0, ( 8263861 ) -> 0, ( 8263863 ) -> 0, ( 8263860 ) -> 0, ( 8263858 ) -> 0, ( 8263857 ) -> 0, ( 8263859 ) -> 0, [ 3625971712; 4294967295 ] -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 65025 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 8263868 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 8263792 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1210190924 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1241909280 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1210318847 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4194815 : BV:32
=input.src.llvm-%mul
1 : 256 : BV:32
=input.src.llvm-%arrayidx2
1 : 4066892 : BV:32
=input.src.llvm-%arrayidx1
1 : 1210190924 : BV:32
=input.src.llvm-%arrayidx
1 : 1241909356 : BV:32
=input.src.llvm-%arrayidx4
1 : 8263868 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 4294967040 { -256 } : BV:32
=input.src.llvm-%add
1 : 255 : BV:32
=input.src.llvm-%0
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 4066892 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1210190848 : BV:32
=memlabel-mem-esp_begin
1 : 3625971712 { -668995584 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4066816 : BV:32
=commonMEM.nonstack.mem
1 : (( 1210190922 ) -> 0, ( 4066886 ) -> 0, ( 4066889 ) -> 0, ( 4066890 ) -> 0, ( 1241909348 ) -> 0, ( 4066888 ) -> 0, ( 4066887 ) -> 0, ( 4066892 ) -> 0, ( 4066891 ) -> 0, ( 4066885 ) -> 0, ( 1210190916 ) -> 0, ( 4066881 ) -> 0, ( 1241909344 ) -> 0, ( 4066884 ) -> 0, ( 1210190912 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294902015 { -65281 } : BV:32
=unaliased_memslot.2
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.7
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.4
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.10
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.8
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.9
1 : 4294967040 { -256 } : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 4278255615 { -16711681 } : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1113879707
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 106
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221225468 { -1073741828 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 872195392 : BV:32
=symbol.4
1 : 2147483632 : BV:32
=symbol.1
1 : 234881008 : BV:32
=symbol.2
1 : 75303408 : BV:32
=dst_symbol_addr.1
1 : 234881008 : BV:32
=dst_symbol_addr.2
1 : 75303408 : BV:32
=dst_symbol_addr.3
1 : 872195392 : BV:32
=dst_symbol_addr.4
1 : 2147483632 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221225468 { -1073741828 } : BV:32
=input.src.llvm-mem
1 : (( 872195530 ) -> 40, ( 872195525 ) -> 66, ( 234881144 ) -> 4, ( 234881146 ) -> 8, ( 75303544 ) -> 4, ( 872195528 ) -> 3, ( 75303546 ) -> 2, ( 75303547 ) -> 195, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147611631 { -2147355665 } : BV:32
=input.dst.esp.L0%1%1
1 : 3221225468 { -1073741828 } : BV:32
=stack.size
1 : 1073606656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 235009007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=input.dst.mem
1 : (( 872195530 ) -> 40, ( 872195525 ) -> 66, ( 234881144 ) -> 4, ( 234881146 ) -> 8, ( 75303544 ) -> 4, ( 872195528 ) -> 3, ( 75303546 ) -> 2, ( 75303547 ) -> 195, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147483632 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 234881008 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 75431407 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 872323391 : BV:32
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 75303408 : BV:32
=memlabel-mem-esp_begin
1 : 2147618816 { -2147348480 } : BV:32
=memlabel-mem-esp_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 872195392 : BV:32
=commonMEM.nonstack.mem
1 : (( 872195530 ) -> 40, ( 872195525 ) -> 66, ( 234881144 ) -> 4, ( 234881146 ) -> 8, ( 75303544 ) -> 4, ( 872195528 ) -> 3, ( 75303546 ) -> 2, ( 75303547 ) -> 195, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 16896 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 524292 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 3271688196 { -1023279100 } : BV:32
=unaliased_memslot.12
1 : 2621443 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
455742194
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 106 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221225468 { -1073741828 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 16634824000263780313602195456 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 872195392 : BV:32
=symbol.4
1 : 2147483632 : BV:32
=symbol.1
1 : 234881008 : BV:32
=symbol.2
1 : 75303408 : BV:32
=dst_symbol_addr.1
1 : 234881008 : BV:32
=dst_symbol_addr.2
1 : 75303408 : BV:32
=dst_symbol_addr.3
1 : 872195392 : BV:32
=dst_symbol_addr.4
1 : 2147483632 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221225468 { -1073741828 } : BV:32
=input.src.llvm-mem
1 : (( 872195530 ) -> 40, ( 872195525 ) -> 66, ( 2147483769 ) -> 1, ( 234881144 ) -> 4, ( 234881146 ) -> 8, ( 75303544 ) -> 4, ( 872195528 ) -> 3, ( 75303546 ) -> 2, ( 2147483770 ) -> 192, ( 2147483771 ) -> 53, ( 75303547 ) -> 195, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147611631 { -2147355665 } : BV:32
=input.dst.esp.L0%1%1
1 : 3221225468 { -1073741828 } : BV:32
=stack.size
1 : 1073606656 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 235009007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 234881148 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.dst.mem
1 : (( 872195530 ) -> 40, ( 872195525 ) -> 66, ( 2147483769 ) -> 1, ( 234881144 ) -> 4, ( 234881146 ) -> 8, ( 75303544 ) -> 4, ( 872195528 ) -> 3, ( 75303546 ) -> 2, ( 2147483770 ) -> 192, ( 2147483771 ) -> 53, ( 75303547 ) -> 195, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 2147483772 { -2147483524 } : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 2147483632 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 75303548 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 234881008 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 75431407 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 872323391 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 872195532 : BV:32
=input.src.llvm-%arrayidx1
1 : 75303548 : BV:32
=input.src.llvm-%arrayidx
1 : 234881148 : BV:32
=input.src.llvm-%arrayidx4
1 : 2147483772 { -2147483524 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 872195532 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 75303408 : BV:32
=memlabel-mem-esp_begin
1 : 2147618816 { -2147348480 } : BV:32
=memlabel-mem-esp_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 872195392 : BV:32
=commonMEM.nonstack.mem
1 : (( 872195530 ) -> 40, ( 872195525 ) -> 66, ( 234881144 ) -> 4, ( 234881146 ) -> 8, ( 75303544 ) -> 4, ( 872195528 ) -> 3, ( 75303546 ) -> 2, ( 75303547 ) -> 195, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 16896 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 524292 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 3271688196 { -1023279100 } : BV:32
=unaliased_memslot.12
1 : 2621443 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
455742194
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 107
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2079977468 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147427536 : BV:32
=symbol.4
1 : 4261360000 { -33607296 } : BV:32
=symbol.1
1 : 4099502080 { -195465216 } : BV:32
=symbol.2
1 : 1141627008 : BV:32
=dst_symbol_addr.1
1 : 4099502080 { -195465216 } : BV:32
=dst_symbol_addr.2
1 : 1141627008 : BV:32
=dst_symbol_addr.3
1 : 2147427536 : BV:32
=dst_symbol_addr.4
1 : 4261360000 { -33607296 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2079977468 : BV:32
=input.src.llvm-mem
1 : (( 4099502340 ) -> 0, ( 2147427804 ) -> 4, ( 1141627269 ) -> 67, ( 2147427797 ) -> 132, ( 4099502341 ) -> 128, ( 2147427802 ) -> 0, ( 2147427796 ) -> 0, ( 4099502343 ) -> 0, ( 2147427793 ) -> 0, ( 1141627268 ) -> 0, ( 1141627270 ) -> 0, ( 4099502344 ) -> 0, ( 1141627276 ) -> 1, ( 2147427792 ) -> 0, ( 2147427803 ) -> 0, ( 2147427800 ) -> 1, ( 1141627274 ) -> 0, ( 2147427799 ) -> 0, ( 1141627275 ) -> 0, ( 4099502346 ) -> 0, ( 4099502348 ) -> 1, ( 2147427801 ) -> 1, ( 4099502347 ) -> 0, ( 1141627271 ) -> 0, ( 4099502337 ) -> 0, ( 1141627272 ) -> 28, ( 1141627265 ) -> 0, ( 4099502336 ) -> 0, ( 2147427798 ) -> 0, ( 1141627264 ) -> 0, ( 4099502342 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261487999 { -33479297 } : BV:32
=input.dst.esp.L0%1%1
1 : 2079977468 : BV:32
=stack.size
1 : 32501760 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4099630079 { -195337217 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=input.dst.mem
1 : (( 4099502340 ) -> 0, ( 2147427804 ) -> 4, ( 1141627269 ) -> 67, ( 2147427797 ) -> 132, ( 4099502341 ) -> 128, ( 2147427802 ) -> 0, ( 2147427796 ) -> 0, ( 4099502343 ) -> 0, ( 2147427793 ) -> 0, ( 1141627268 ) -> 0, ( 1141627270 ) -> 0, ( 4099502344 ) -> 0, ( 1141627276 ) -> 1, ( 2147427792 ) -> 0, ( 2147427803 ) -> 0, ( 2147427800 ) -> 1, ( 1141627274 ) -> 0, ( 2147427799 ) -> 0, ( 1141627275 ) -> 0, ( 4099502346 ) -> 0, ( 4099502348 ) -> 1, ( 2147427801 ) -> 1, ( 4099502347 ) -> 0, ( 1141627271 ) -> 0, ( 4099502337 ) -> 0, ( 1141627272 ) -> 28, ( 1141627265 ) -> 0, ( 4099502336 ) -> 0, ( 2147427798 ) -> 0, ( 1141627264 ) -> 0, ( 4099502342 ) -> 0, [ 2047475712; 2079977471 ] -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 4261360000 { -33607296 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4099502080 { -195465216 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1141755007 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147555535 { -2147411761 } : BV:32
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1141627008 : BV:32
=memlabel-mem-esp_begin
1 : 2047475712 : BV:32
=memlabel-mem-esp_end
1 : 2079977471 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147427536 : BV:32
=commonMEM.nonstack.mem
1 : (( 4099502340 ) -> 0, ( 2147427804 ) -> 4, ( 1141627269 ) -> 67, ( 2147427797 ) -> 132, ( 4099502341 ) -> 128, ( 2147427802 ) -> 0, ( 2147427796 ) -> 0, ( 4099502343 ) -> 0, ( 2147427793 ) -> 0, ( 1141627268 ) -> 0, ( 1141627270 ) -> 0, ( 4099502344 ) -> 0, ( 1141627276 ) -> 1, ( 2147427792 ) -> 0, ( 2147427803 ) -> 0, ( 2147427800 ) -> 1, ( 1141627274 ) -> 0, ( 2147427799 ) -> 0, ( 1141627275 ) -> 0, ( 4099502346 ) -> 0, ( 4099502348 ) -> 1, ( 2147427801 ) -> 1, ( 4099502347 ) -> 0, ( 1141627271 ) -> 0, ( 4099502337 ) -> 0, ( 1141627272 ) -> 28, ( 1141627265 ) -> 0, ( 4099502336 ) -> 0, ( 2147427798 ) -> 0, ( 1141627264 ) -> 0, ( 4099502342 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1077936128 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1077936128 : BV:32
=unaliased_memslot.2
1 : 1077936128 : BV:32
=unaliased_memslot.7
1 : 1077952513 : BV:32
=unaliased_memslot.4
1 : 17152 : BV:32
=unaliased_memslot.5
1 : 33792 : BV:32
=unaliased_memslot.6
1 : 32768 : BV:32
=unaliased_memslot.10
1 : 16384 : BV:32
=unaliased_memslot.8
1 : 1077952513 : BV:32
=unaliased_memslot.9
1 : 1077952516 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 16412 : BV:32
=unaliased_memslot.12
1 : 257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1803982799
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 107 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2079977468 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 317763377459971456839140120275638550528 { -22518989460967006624234487156129660928 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147427536 : BV:32
=symbol.4
1 : 4261360000 { -33607296 } : BV:32
=symbol.1
1 : 4099502080 { -195465216 } : BV:32
=symbol.2
1 : 1141627008 : BV:32
=dst_symbol_addr.1
1 : 4099502080 { -195465216 } : BV:32
=dst_symbol_addr.2
1 : 1141627008 : BV:32
=dst_symbol_addr.3
1 : 2147427536 : BV:32
=dst_symbol_addr.4
1 : 4261360000 { -33607296 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2079977468 : BV:32
=input.src.llvm-mem
1 : (( 4099502340 ) -> 0, ( 4261360271 ) -> 239, ( 2147427804 ) -> 4, ( 1141627269 ) -> 67, ( 2147427797 ) -> 132, ( 4099502341 ) -> 128, ( 4261360268 ) -> 25, ( 4261360265 ) -> 35, ( 4261360267 ) -> 109, ( 4261360269 ) -> 0, ( 2147427802 ) -> 0, ( 4261360259 ) -> 0, ( 4261360262 ) -> 0, ( 4261360261 ) -> 0, ( 4261360258 ) -> 0, ( 2147427796 ) -> 0, ( 4099502343 ) -> 0, ( 4261360260 ) -> 0, ( 2147427793 ) -> 0, ( 1141627268 ) -> 0, ( 1141627270 ) -> 0, ( 4099502344 ) -> 0, ( 4261360256 ) -> 0, ( 4261360257 ) -> 0, ( 1141627276 ) -> 1, ( 4261360266 ) -> 50, ( 2147427792 ) -> 0, ( 2147427803 ) -> 0, ( 2147427800 ) -> 1, ( 1141627274 ) -> 0, ( 2147427799 ) -> 0, ( 1141627275 ) -> 0, ( 4099502346 ) -> 0, ( 4099502348 ) -> 1, ( 2147427801 ) -> 1, ( 4099502347 ) -> 0, ( 1141627271 ) -> 0, ( 4099502337 ) -> 0, ( 1141627272 ) -> 28, ( 1141627265 ) -> 0, ( 4099502336 ) -> 0, ( 4261360264 ) -> 16, ( 2147427798 ) -> 0, ( 1141627264 ) -> 0, ( 4099502342 ) -> 0, ( 4261360270 ) -> 15, () -> 64) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 4261487999 { -33479297 } : BV:32
=input.dst.esp.L0%1%1
1 : 2079977468 : BV:32
=stack.size
1 : 32501760 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 1077952513 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4099630079 { -195337217 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4099502348 { -195464948 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.dst.mem
1 : (( 4099502340 ) -> 0, ( 4261360271 ) -> 239, ( 2147427804 ) -> 4, ( 1141627269 ) -> 67, ( 2147427797 ) -> 132, ( 4099502341 ) -> 128, ( 4261360268 ) -> 25, ( 4261360265 ) -> 35, ( 4261360267 ) -> 109, ( 4261360269 ) -> 0, ( 2147427802 ) -> 0, ( 4261360259 ) -> 0, ( 4261360262 ) -> 0, ( 4261360261 ) -> 0, ( 4261360258 ) -> 0, ( 2147427796 ) -> 0, ( 4099502343 ) -> 0, ( 4261360260 ) -> 0, ( 2147427793 ) -> 0, ( 1141627268 ) -> 0, ( 1141627270 ) -> 0, ( 4099502344 ) -> 0, ( 4261360256 ) -> 0, ( 4261360257 ) -> 0, ( 1141627276 ) -> 1, ( 4261360266 ) -> 50, ( 2147427792 ) -> 0, ( 2147427803 ) -> 0, ( 2147427800 ) -> 1, ( 1141627274 ) -> 0, ( 2147427799 ) -> 0, ( 1141627275 ) -> 0, ( 4099502346 ) -> 0, ( 4099502348 ) -> 1, ( 2147427801 ) -> 1, ( 4099502347 ) -> 0, ( 1141627271 ) -> 0, ( 4099502337 ) -> 0, ( 1141627272 ) -> 28, ( 1141627265 ) -> 0, ( 4099502336 ) -> 0, ( 4261360264 ) -> 16, ( 2147427798 ) -> 0, ( 1141627264 ) -> 0, ( 4099502342 ) -> 0, ( 4261360270 ) -> 15, [ 2047475712; 2079977471 ] -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 4010737689 { -284229607 } : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 4261360268 { -33607028 } : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 4261360000 { -33607296 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1141627276 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4099502080 { -195465216 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1141755007 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147555535 { -2147411761 } : BV:32
=input.src.llvm-%mul
1 : 1363230724 : BV:32
=input.src.llvm-%arrayidx2
1 : 2147427804 : BV:32
=input.src.llvm-%arrayidx1
1 : 1141627276 : BV:32
=input.src.llvm-%arrayidx
1 : 4099502348 { -195464948 } : BV:32
=input.src.llvm-%arrayidx4
1 : 4261360268 { -33607028 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 1077952516 : BV:32
=input.src.llvm-%add
1 : 2441183237 { -1853784059 } : BV:32
=input.src.llvm-%0
1 : 1077952513 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 2147427804 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1141627008 : BV:32
=memlabel-mem-esp_begin
1 : 2047475712 : BV:32
=memlabel-mem-esp_end
1 : 2079977471 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147427536 : BV:32
=commonMEM.nonstack.mem
1 : (( 4099502340 ) -> 0, ( 2147427804 ) -> 4, ( 1141627269 ) -> 67, ( 2147427797 ) -> 132, ( 4099502341 ) -> 128, ( 2147427802 ) -> 0, ( 2147427796 ) -> 0, ( 4099502343 ) -> 0, ( 2147427793 ) -> 0, ( 1141627268 ) -> 0, ( 1141627270 ) -> 0, ( 4099502344 ) -> 0, ( 1141627276 ) -> 1, ( 2147427792 ) -> 0, ( 2147427803 ) -> 0, ( 2147427800 ) -> 1, ( 1141627274 ) -> 0, ( 2147427799 ) -> 0, ( 1141627275 ) -> 0, ( 4099502346 ) -> 0, ( 4099502348 ) -> 1, ( 2147427801 ) -> 1, ( 4099502347 ) -> 0, ( 1141627271 ) -> 0, ( 4099502337 ) -> 0, ( 1141627272 ) -> 28, ( 1141627265 ) -> 0, ( 4099502336 ) -> 0, ( 2147427798 ) -> 0, ( 1141627264 ) -> 0, ( 4099502342 ) -> 0, () -> 64) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1077936128 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1077936128 : BV:32
=unaliased_memslot.2
1 : 1077936128 : BV:32
=unaliased_memslot.7
1 : 1077952513 : BV:32
=unaliased_memslot.4
1 : 17152 : BV:32
=unaliased_memslot.5
1 : 33792 : BV:32
=unaliased_memslot.6
1 : 32768 : BV:32
=unaliased_memslot.10
1 : 16384 : BV:32
=unaliased_memslot.8
1 : 1077952513 : BV:32
=unaliased_memslot.9
1 : 1077952516 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 16412 : BV:32
=unaliased_memslot.12
1 : 257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1803982799
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 108
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4291088380 { -3878916 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2249395200 { -2045572096 } : BV:32
=symbol.4
1 : 1860456416 : BV:32
=symbol.1
1 : 2699344640 { -1595622656 } : BV:32
=symbol.2
1 : 1089752576 : BV:32
=dst_symbol_addr.1
1 : 2699344640 { -1595622656 } : BV:32
=dst_symbol_addr.2
1 : 1089752576 : BV:32
=dst_symbol_addr.3
1 : 2249395200 { -2045572096 } : BV:32
=dst_symbol_addr.4
1 : 1860456416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291088380 { -3878916 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1860584415 : BV:32
=input.dst.esp.L0%1%1
1 : 4291088380 { -3878916 } : BV:32
=stack.size
1 : 1476427776 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2699472639 { -1595494657 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1860456416 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2699344640 { -1595622656 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1089880575 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2249523199 { -2045444097 } : BV:32
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1089752576 : BV:32
=memlabel-mem-esp_begin
1 : 2814660608 { -1480306688 } : BV:32
=memlabel-mem-esp_end
1 : 4291088383 { -3878913 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2249395200 { -2045572096 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1189537821
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 108 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4291088380 { -3878916 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2249395200 { -2045572096 } : BV:32
=symbol.4
1 : 1860456416 : BV:32
=symbol.1
1 : 2699344640 { -1595622656 } : BV:32
=symbol.2
1 : 1089752576 : BV:32
=dst_symbol_addr.1
1 : 2699344640 { -1595622656 } : BV:32
=dst_symbol_addr.2
1 : 1089752576 : BV:32
=dst_symbol_addr.3
1 : 2249395200 { -2045572096 } : BV:32
=dst_symbol_addr.4
1 : 1860456416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291088380 { -3878916 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1860584415 : BV:32
=input.dst.esp.L0%1%1
1 : 4291088380 { -3878916 } : BV:32
=stack.size
1 : 1476427776 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2699472639 { -1595494657 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 2699345164 { -1595622132 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1860456940 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1860456416 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1089753100 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2699344640 { -1595622656 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1089880575 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2249523199 { -2045444097 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 2249395724 { -2045571572 } : BV:32
=input.src.llvm-%arrayidx1
1 : 1089753100 : BV:32
=input.src.llvm-%arrayidx
1 : 2699345164 { -1595622132 } : BV:32
=input.src.llvm-%arrayidx4
1 : 1860456940 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 2249395724 { -2045571572 } : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1089752576 : BV:32
=memlabel-mem-esp_begin
1 : 2814660608 { -1480306688 } : BV:32
=memlabel-mem-esp_end
1 : 4291088383 { -3878913 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2249395200 { -2045572096 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1189537821
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 109
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1181220860 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4286321680 { -8645616 } : BV:32
=symbol.4
1 : 1996358528 : BV:32
=symbol.1
1 : 4294838960 { -128336 } : BV:32
=symbol.2
1 : 4286450160 { -8517136 } : BV:32
=dst_symbol_addr.1
1 : 4294838960 { -128336 } : BV:32
=dst_symbol_addr.2
1 : 4286450160 { -8517136 } : BV:32
=dst_symbol_addr.3
1 : 4286321680 { -8645616 } : BV:32
=dst_symbol_addr.4
1 : 1996358528 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1181220860 : BV:32
=input.src.llvm-mem
1 : (( 4286322716 ) -> 1, ( 4294839996 ) -> 1, ( 4294839992 ) -> 1, ( 4294839988 ) -> 1, ( 4286322708 ) -> 1, ( 4286322712 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1996486527 : BV:32
=input.dst.esp.L0%1%1
1 : 1181220860 : BV:32
=stack.size
1 : 346030080 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966959 { -337 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=input.dst.mem
1 : (( 4286322716 ) -> 1, ( 4294839996 ) -> 1, ( 4294839992 ) -> 1, ( 4294839988 ) -> 1, ( 4286322708 ) -> 1, ( 4286322712 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1996358528 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838960 { -128336 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4286578159 { -8389137 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4286449679 { -8517617 } : BV:32
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286450160 { -8517136 } : BV:32
=memlabel-mem-esp_begin
1 : 835190784 : BV:32
=memlabel-mem-esp_end
1 : 1181220863 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4286321680 { -8645616 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4286322716 ) -> 1, ( 4294839996 ) -> 1, ( 4294839992 ) -> 1, ( 4294839988 ) -> 1, ( 4286322708 ) -> 1, ( 4286322712 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 1 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1630638306
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 109 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1181220860 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79228162532711081671548469248 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4286321680 { -8645616 } : BV:32
=symbol.4
1 : 1996358528 : BV:32
=symbol.1
1 : 4294838960 { -128336 } : BV:32
=symbol.2
1 : 4286450160 { -8517136 } : BV:32
=dst_symbol_addr.1
1 : 4294838960 { -128336 } : BV:32
=dst_symbol_addr.2
1 : 4286450160 { -8517136 } : BV:32
=dst_symbol_addr.3
1 : 4286321680 { -8645616 } : BV:32
=dst_symbol_addr.4
1 : 1996358528 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1181220860 : BV:32
=input.src.llvm-mem
1 : (( 4286322716 ) -> 1, ( 1996359560 ) -> 1, ( 4294839996 ) -> 1, ( 4294839992 ) -> 1, ( 1996359564 ) -> 1, ( 4294839988 ) -> 1, ( 4286322708 ) -> 1, ( 4286322712 ) -> 1, ( 1996359556 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1996486527 : BV:32
=input.dst.esp.L0%1%1
1 : 1181220860 : BV:32
=stack.size
1 : 346030080 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966959 { -337 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294839996 { -127300 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.dst.mem
1 : (( 4286322716 ) -> 1, ( 1996359560 ) -> 1, ( 4294839996 ) -> 1, ( 4294839992 ) -> 1, ( 1996359564 ) -> 1, ( 4294839988 ) -> 1, ( 4286322708 ) -> 1, ( 4286322712 ) -> 1, ( 1996359556 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 1 : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1996359564 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1996358528 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 4286451196 { -8516100 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838960 { -128336 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4286578159 { -8389137 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4286449679 { -8517617 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 4286322716 { -8644580 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4286451196 { -8516100 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294839996 { -127300 } : BV:32
=input.src.llvm-%arrayidx4
1 : 1996359564 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 1 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%0
1 : 1 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 4286322716 { -8644580 } : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4286450160 { -8517136 } : BV:32
=memlabel-mem-esp_begin
1 : 835190784 : BV:32
=memlabel-mem-esp_end
1 : 1181220863 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4286321680 { -8645616 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4286322716 ) -> 1, ( 4294839996 ) -> 1, ( 4294839992 ) -> 1, ( 4294839988 ) -> 1, ( 4286322708 ) -> 1, ( 4286322712 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 1 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1630638306
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 110
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 738377724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147465200 : BV:32
=symbol.4
1 : 1602160640 : BV:32
=symbol.1
1 : 4294703088 { -264208 } : BV:32
=symbol.2
1 : 4294574192 { -393104 } : BV:32
=dst_symbol_addr.1
1 : 4294703088 { -264208 } : BV:32
=dst_symbol_addr.2
1 : 4294574192 { -393104 } : BV:32
=dst_symbol_addr.3
1 : 2147465200 : BV:32
=dst_symbol_addr.4
1 : 1602160640 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 738377724 : BV:32
=input.src.llvm-mem
1 : (( 2147467260 ) -> 1, ( 4294705148 ) -> 1, ( 2147467256 ) -> 1, ( 2147467252 ) -> 1, ( 4294705144 ) -> 1, ( 4294576248 ) -> 1, ( 4294576244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1602288639 : BV:32
=input.dst.esp.L0%1%1
1 : 738377724 : BV:32
=stack.size
1 : 201523200 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294831087 { -136209 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=input.dst.mem
1 : (( 2147467260 ) -> 1, ( 4294705148 ) -> 1, ( 2147467256 ) -> 1, ( 2147467252 ) -> 1, ( 4294705144 ) -> 1, ( 4294576248 ) -> 1, ( 4294576244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 1602160640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294703088 { -264208 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294702191 { -265105 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147593199 { -2147374097 } : BV:32
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294574192 { -393104 } : BV:32
=memlabel-mem-esp_begin
1 : 536854528 : BV:32
=memlabel-mem-esp_end
1 : 738377727 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147465200 : BV:32
=commonMEM.nonstack.mem
1 : (( 2147467260 ) -> 1, ( 4294705148 ) -> 1, ( 2147467256 ) -> 1, ( 2147467252 ) -> 1, ( 4294705144 ) -> 1, ( 4294576248 ) -> 1, ( 4294576244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 1 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 1 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
985740179
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 110 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 738377724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79228162588051313892677124096 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147465200 : BV:32
=symbol.4
1 : 1602160640 : BV:32
=symbol.1
1 : 4294703088 { -264208 } : BV:32
=symbol.2
1 : 4294574192 { -393104 } : BV:32
=dst_symbol_addr.1
1 : 4294703088 { -264208 } : BV:32
=dst_symbol_addr.2
1 : 4294574192 { -393104 } : BV:32
=dst_symbol_addr.3
1 : 2147465200 : BV:32
=dst_symbol_addr.4
1 : 1602160640 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 738377724 : BV:32
=input.src.llvm-mem
1 : (( 2147467260 ) -> 1, ( 4294705148 ) -> 1, ( 2147467256 ) -> 1, ( 1602162696 ) -> 4, ( 2147467252 ) -> 1, ( 1602162700 ) -> 1, ( 1602162692 ) -> 1, ( 4294705144 ) -> 1, ( 4294576248 ) -> 1, ( 4294576244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 1602288639 : BV:32
=input.dst.esp.L0%1%1
1 : 738377724 : BV:32
=stack.size
1 : 201523200 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294831087 { -136209 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.dst.mem
1 : (( 2147467260 ) -> 1, ( 4294705148 ) -> 1, ( 2147467256 ) -> 1, ( 1602162696 ) -> 4, ( 2147467252 ) -> 1, ( 1602162700 ) -> 1, ( 1602162692 ) -> 1, ( 4294705144 ) -> 1, ( 4294576248 ) -> 1, ( 4294576244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 1 : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 1602162700 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 1602160640 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 4294576252 { -391044 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294703088 { -264208 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294702191 { -265105 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147593199 { -2147374097 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 2147467260 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294576252 { -391044 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-%arrayidx4
1 : 1602162700 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 1 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%0
1 : 1 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 2147467260 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294574192 { -393104 } : BV:32
=memlabel-mem-esp_begin
1 : 536854528 : BV:32
=memlabel-mem-esp_end
1 : 738377727 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147465200 : BV:32
=commonMEM.nonstack.mem
1 : (( 2147467260 ) -> 1, ( 4294705148 ) -> 1, ( 2147467256 ) -> 1, ( 2147467252 ) -> 1, ( 4294705144 ) -> 1, ( 4294576248 ) -> 1, ( 4294576244 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 1 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 1 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
985740179
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 111
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 896532476 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2113826800 : BV:32
=symbol.4
1 : 2147443696 : BV:32
=symbol.1
1 : 4294838256 { -129040 } : BV:32
=symbol.2
1 : 4160620528 { -134346768 } : BV:32
=dst_symbol_addr.1
1 : 4294838256 { -129040 } : BV:32
=dst_symbol_addr.2
1 : 4160620528 { -134346768 } : BV:32
=dst_symbol_addr.3
1 : 2113826800 : BV:32
=dst_symbol_addr.4
1 : 2147443696 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 896532476 : BV:32
=input.src.llvm-mem
1 : (( 2113830904 ) -> 1, ( 2113830908 ) -> 1, ( 4294842360 ) -> 1, ( 4160624628 ) -> 1, ( 2113830900 ) -> 1, ( 4294842356 ) -> 1, ( 4160624636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147571695 { -2147395601 } : BV:32
=input.dst.esp.L0%1%1
1 : 896532476 : BV:32
=stack.size
1 : 896532480 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966255 { -1041 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=input.dst.mem
1 : (( 2113830904 ) -> 1, ( 2113830908 ) -> 1, ( 4294842360 ) -> 1, ( 4160624628 ) -> 1, ( 2113830900 ) -> 1, ( 4294842356 ) -> 1, ( 4160624636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147443696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838256 { -129040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4160748527 { -134218769 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2113954799 : BV:32
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4160620528 { -134346768 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 896532479 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2113826800 : BV:32
=commonMEM.nonstack.mem
1 : (( 2113830904 ) -> 1, ( 2113830908 ) -> 1, ( 4294842360 ) -> 1, ( 4160624628 ) -> 1, ( 2113830900 ) -> 1, ( 4294842356 ) -> 1, ( 4160624636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 1 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
331158676
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 111 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 896532476 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79228162532711081684433371136 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2113826800 : BV:32
=symbol.4
1 : 2147443696 : BV:32
=symbol.1
1 : 4294838256 { -129040 } : BV:32
=symbol.2
1 : 4160620528 { -134346768 } : BV:32
=dst_symbol_addr.1
1 : 4294838256 { -129040 } : BV:32
=dst_symbol_addr.2
1 : 4160620528 { -134346768 } : BV:32
=dst_symbol_addr.3
1 : 2113826800 : BV:32
=dst_symbol_addr.4
1 : 2147443696 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 896532476 : BV:32
=input.src.llvm-mem
1 : (( 2147447804 ) -> 1, ( 2147447796 ) -> 4, ( 2113830904 ) -> 1, ( 2113830908 ) -> 1, ( 4294842360 ) -> 1, ( 4160624628 ) -> 1, ( 2113830900 ) -> 1, ( 4294842356 ) -> 1, ( 4160624636 ) -> 1, ( 2147447800 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147571695 { -2147395601 } : BV:32
=input.dst.esp.L0%1%1
1 : 896532476 : BV:32
=stack.size
1 : 896532480 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 1 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966255 { -1041 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294842364 { -124932 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.dst.mem
1 : (( 2147447804 ) -> 1, ( 2147447796 ) -> 4, ( 2113830904 ) -> 1, ( 2113830908 ) -> 1, ( 4294842360 ) -> 1, ( 4160624628 ) -> 1, ( 2113830900 ) -> 1, ( 4294842356 ) -> 1, ( 4160624636 ) -> 1, ( 2147447800 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 1 : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 2147447804 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 2147443696 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 4160624636 { -134342660 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838256 { -129040 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4160748527 { -134218769 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2113954799 : BV:32
=input.src.llvm-%mul
1 : 1 : BV:32
=input.src.llvm-%arrayidx2
1 : 2113830908 : BV:32
=input.src.llvm-%arrayidx1
1 : 4160624636 { -134342660 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294842364 { -124932 } : BV:32
=input.src.llvm-%arrayidx4
1 : 2147447804 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 1 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 2113830908 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4160620528 { -134346768 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 896532479 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2113826800 : BV:32
=commonMEM.nonstack.mem
1 : (( 2113830904 ) -> 1, ( 2113830908 ) -> 1, ( 4294842360 ) -> 1, ( 4160624628 ) -> 1, ( 2113830900 ) -> 1, ( 4294842356 ) -> 1, ( 4160624636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 1 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
331158676
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 112
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1657020412 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1678611456 : BV:32
=symbol.4
1 : 3314046384 { -980920912 } : BV:32
=symbol.1
1 : 2147481440 : BV:32
=symbol.2
1 : 1879046896 : BV:32
=dst_symbol_addr.1
1 : 2147481440 : BV:32
=dst_symbol_addr.2
1 : 1879046896 : BV:32
=dst_symbol_addr.3
1 : 1678611456 : BV:32
=dst_symbol_addr.4
1 : 3314046384 { -980920912 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1657020412 : BV:32
=input.src.llvm-mem
1 : (( 1879055089 ) -> 0, ( 1678619649 ) -> 0, ( 1678619658 ) -> 0, ( 1678619655 ) -> 0, ( 2147489632 ) -> 0, ( 1879055092 ) -> 0, ( 1678619657 ) -> 0, ( 1879055098 ) -> 0, ( 1879055100 ) -> 0, ( 1879055093 ) -> 0, ( 1879055096 ) -> 0, ( 1678619652 ) -> 0, ( 1678619648 ) -> 0, ( 1879055094 ) -> 0, ( 1879055097 ) -> 0, ( 1678619659 ) -> 0, ( 1678619653 ) -> 0, ( 1879055095 ) -> 0, ( 1879055099 ) -> 0, ( 1678619656 ) -> 0, ( 1678619660 ) -> 0, ( 1678619654 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3314174383 { -980792913 } : BV:32
=input.dst.esp.L0%1%1
1 : 1657020412 : BV:32
=stack.size
1 : 1521520640 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147609439 { -2147357857 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=input.dst.mem
1 : (( 1879055089 ) -> 0, ( 1678619649 ) -> 0, ( 1678619658 ) -> 0, ( 1678619655 ) -> 0, ( 2147489632 ) -> 0, ( 1879055092 ) -> 0, ( 1678619657 ) -> 0, ( 1879055098 ) -> 0, ( 1879055100 ) -> 0, ( 1879055093 ) -> 0, ( 1879055096 ) -> 0, ( 1678619652 ) -> 0, ( 1678619648 ) -> 0, ( 1879055094 ) -> 0, ( 1879055097 ) -> 0, ( 1678619659 ) -> 0, ( 1678619653 ) -> 0, ( 1879055095 ) -> 0, ( 1879055099 ) -> 0, ( 1678619656 ) -> 0, ( 1678619660 ) -> 0, ( 1678619654 ) -> 0, [ 135499776; 1657020415 ] -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 3314046384 { -980920912 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147481440 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1879174895 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1678739455 : BV:32
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1879046896 : BV:32
=memlabel-mem-esp_begin
1 : 135499776 : BV:32
=memlabel-mem-esp_end
1 : 1657020415 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1678611456 : BV:32
=commonMEM.nonstack.mem
1 : (( 1879055089 ) -> 0, ( 1678619649 ) -> 0, ( 1678619658 ) -> 0, ( 1678619655 ) -> 0, ( 2147489632 ) -> 0, ( 1879055092 ) -> 0, ( 1678619657 ) -> 0, ( 1879055098 ) -> 0, ( 1879055100 ) -> 0, ( 1879055093 ) -> 0, ( 1879055096 ) -> 0, ( 1678619652 ) -> 0, ( 1678619648 ) -> 0, ( 1879055094 ) -> 0, ( 1879055097 ) -> 0, ( 1678619659 ) -> 0, ( 1678619653 ) -> 0, ( 1879055095 ) -> 0, ( 1879055099 ) -> 0, ( 1678619656 ) -> 0, ( 1678619660 ) -> 0, ( 1678619654 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294901760 { -65536 } : BV:32
=unaliased_memslot.2
1 : 4294902015 { -65281 } : BV:32
=unaliased_memslot.7
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.10
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.8
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.9
1 : 4294967040 { -256 } : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1536267976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 112 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1657020412 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 340271982406449556340828628114919718912 { -10384514488907122545979316848492544 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1678611456 : BV:32
=symbol.4
1 : 3314046384 { -980920912 } : BV:32
=symbol.1
1 : 2147481440 : BV:32
=symbol.2
1 : 1879046896 : BV:32
=dst_symbol_addr.1
1 : 2147481440 : BV:32
=dst_symbol_addr.2
1 : 1879046896 : BV:32
=dst_symbol_addr.3
1 : 1678611456 : BV:32
=dst_symbol_addr.4
1 : 3314046384 { -980920912 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1657020412 : BV:32
=input.src.llvm-mem
1 : (( 1879055089 ) -> 0, ( 3314054582 ) -> 0, ( 3314054586 ) -> 0, ( 1678619649 ) -> 0, ( 3314054580 ) -> 1, ( 3314054579 ) -> 254, ( 1678619658 ) -> 0, ( 3314054583 ) -> 0, ( 1678619655 ) -> 0, ( 2147489632 ) -> 0, ( 1879055092 ) -> 0, ( 1678619657 ) -> 0, ( 1879055098 ) -> 0, ( 1879055100 ) -> 0, ( 3314054581 ) -> 0, ( 1879055093 ) -> 0, ( 1879055096 ) -> 0, ( 1678619652 ) -> 0, ( 1678619648 ) -> 0, ( 3314054578 ) -> 1, ( 1879055094 ) -> 0, ( 3314054588 ) -> 1, ( 3314054585 ) -> 0, ( 1879055097 ) -> 0, ( 1678619659 ) -> 0, ( 1678619653 ) -> 0, ( 3314054589 ) -> 0, ( 3314054590 ) -> 254, ( 3314054577 ) -> 0, ( 3314054587 ) -> 0, ( 1879055095 ) -> 0, ( 1879055099 ) -> 0, ( 1678619656 ) -> 0, ( 1678619660 ) -> 0, ( 1678619654 ) -> 0, ( 3314054584 ) -> 1, ( 3314054576 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 3314174383 { -980792913 } : BV:32
=input.dst.esp.L0%1%1
1 : 1657020412 : BV:32
=stack.size
1 : 1521520640 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 4294967040 { -256 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147609439 { -2147357857 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 2147489644 { -2147477652 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.dst.mem
1 : (( 1879055089 ) -> 0, ( 3314054582 ) -> 0, ( 3314054586 ) -> 0, ( 1678619649 ) -> 0, ( 3314054580 ) -> 1, ( 3314054579 ) -> 254, ( 1678619658 ) -> 0, ( 3314054583 ) -> 0, ( 1678619655 ) -> 0, ( 2147489632 ) -> 0, ( 1879055092 ) -> 0, ( 1678619657 ) -> 0, ( 1879055098 ) -> 0, ( 1879055100 ) -> 0, ( 3314054581 ) -> 0, ( 1879055093 ) -> 0, ( 1879055096 ) -> 0, ( 1678619652 ) -> 0, ( 1678619648 ) -> 0, ( 3314054578 ) -> 1, ( 1879055094 ) -> 0, ( 3314054588 ) -> 1, ( 3314054585 ) -> 0, ( 1879055097 ) -> 0, ( 1678619659 ) -> 0, ( 1678619653 ) -> 0, ( 3314054589 ) -> 0, ( 3314054590 ) -> 254, ( 3314054577 ) -> 0, ( 3314054587 ) -> 0, ( 1879055095 ) -> 0, ( 1879055099 ) -> 0, ( 1678619656 ) -> 0, ( 1678619660 ) -> 0, ( 1678619654 ) -> 0, ( 3314054584 ) -> 1, ( 3314054576 ) -> 0, [ 135499776; 1657020415 ] -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 4294836225 { -131071 } : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 3314054588 { -980912708 } : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 3314046384 { -980920912 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1879055100 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147481440 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1879174895 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1678739455 : BV:32
=input.src.llvm-%mul
1 : 65536 : BV:32
=input.src.llvm-%arrayidx2
1 : 1678619660 : BV:32
=input.src.llvm-%arrayidx1
1 : 1879055100 : BV:32
=input.src.llvm-%arrayidx
1 : 2147489644 { -2147477652 } : BV:32
=input.src.llvm-%arrayidx4
1 : 3314054588 { -980912708 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 4294967040 { -256 } : BV:32
=input.src.llvm-%add
1 : 65535 : BV:32
=input.src.llvm-%0
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 1678619660 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1879046896 : BV:32
=memlabel-mem-esp_begin
1 : 135499776 : BV:32
=memlabel-mem-esp_end
1 : 1657020415 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1678611456 : BV:32
=commonMEM.nonstack.mem
1 : (( 1879055089 ) -> 0, ( 1678619649 ) -> 0, ( 1678619658 ) -> 0, ( 1678619655 ) -> 0, ( 2147489632 ) -> 0, ( 1879055092 ) -> 0, ( 1678619657 ) -> 0, ( 1879055098 ) -> 0, ( 1879055100 ) -> 0, ( 1879055093 ) -> 0, ( 1879055096 ) -> 0, ( 1678619652 ) -> 0, ( 1678619648 ) -> 0, ( 1879055094 ) -> 0, ( 1879055097 ) -> 0, ( 1678619659 ) -> 0, ( 1678619653 ) -> 0, ( 1879055095 ) -> 0, ( 1879055099 ) -> 0, ( 1678619656 ) -> 0, ( 1678619660 ) -> 0, ( 1678619654 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 4294901760 { -65536 } : BV:32
=unaliased_memslot.2
1 : 4294902015 { -65281 } : BV:32
=unaliased_memslot.7
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.10
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.8
1 : 4294967040 { -256 } : BV:32
=unaliased_memslot.9
1 : 4294967040 { -256 } : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1536267976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 113
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2208305148 { -2086662148 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4293810688 { -1156608 } : BV:32
=symbol.4
1 : 100677632 : BV:32
=symbol.1
1 : 2940239872 { -1354727424 } : BV:32
=symbol.2
1 : 2684336480 { -1610630816 } : BV:32
=dst_symbol_addr.1
1 : 2940239872 { -1354727424 } : BV:32
=dst_symbol_addr.2
1 : 2684336480 { -1610630816 } : BV:32
=dst_symbol_addr.3
1 : 4293810688 { -1156608 } : BV:32
=dst_symbol_addr.4
1 : 100677632 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2208305148 { -2086662148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 100805631 : BV:32
=input.dst.esp.L0%1%1
1 : 2208305148 { -2086662148 } : BV:32
=stack.size
1 : 1134567424 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2940367871 { -1354599425 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 100677632 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2940239872 { -1354727424 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684464479 { -1610502817 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4293938687 { -1028609 } : BV:32
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684336480 { -1610630816 } : BV:32
=memlabel-mem-esp_begin
1 : 1073737728 : BV:32
=memlabel-mem-esp_end
1 : 2208305151 { -2086662145 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4293810688 { -1156608 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
871022776
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 113 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2208305148 { -2086662148 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4293810688 { -1156608 } : BV:32
=symbol.4
1 : 100677632 : BV:32
=symbol.1
1 : 2940239872 { -1354727424 } : BV:32
=symbol.2
1 : 2684336480 { -1610630816 } : BV:32
=dst_symbol_addr.1
1 : 2940239872 { -1354727424 } : BV:32
=dst_symbol_addr.2
1 : 2684336480 { -1610630816 } : BV:32
=dst_symbol_addr.3
1 : 4293810688 { -1156608 } : BV:32
=dst_symbol_addr.4
1 : 100677632 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2208305148 { -2086662148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 100805631 : BV:32
=input.dst.esp.L0%1%1
1 : 2208305148 { -2086662148 } : BV:32
=stack.size
1 : 1134567424 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2940367871 { -1354599425 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 2940256268 { -1354711028 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 100694028 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 100677632 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2684352876 { -1610614420 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2940239872 { -1354727424 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684464479 { -1610502817 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4293938687 { -1028609 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 4293827084 { -1140212 } : BV:32
=input.src.llvm-%arrayidx1
1 : 2684352876 { -1610614420 } : BV:32
=input.src.llvm-%arrayidx
1 : 2940256268 { -1354711028 } : BV:32
=input.src.llvm-%arrayidx4
1 : 100694028 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 4293827084 { -1140212 } : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684336480 { -1610630816 } : BV:32
=memlabel-mem-esp_begin
1 : 1073737728 : BV:32
=memlabel-mem-esp_end
1 : 2208305151 { -2086662145 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4293810688 { -1156608 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
871022776
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 114
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073741820 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147385328 : BV:32
=symbol.4
1 : 2147232768 : BV:32
=symbol.1
1 : 4294839296 { -128000 } : BV:32
=symbol.2
1 : 4294577152 { -390144 } : BV:32
=dst_symbol_addr.1
1 : 4294839296 { -128000 } : BV:32
=dst_symbol_addr.2
1 : 4294577152 { -390144 } : BV:32
=dst_symbol_addr.3
1 : 2147385328 : BV:32
=dst_symbol_addr.4
1 : 2147232768 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073741820 : BV:32
=input.src.llvm-mem
1 : (( 2147418108 ) -> 1, ( 4294609924 ) -> 1, ( 4294609928 ) -> 1, ( 4294609932 ) -> 1, ( 2147418100 ) -> 1, ( 2147418104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147360767 : BV:32
=input.dst.esp.L0%1%1
1 : 1073741820 : BV:32
=stack.size
1 : 188416 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=input.dst.mem
1 : (( 2147418108 ) -> 1, ( 4294609924 ) -> 1, ( 4294609928 ) -> 1, ( 4294609932 ) -> 1, ( 2147418100 ) -> 1, ( 2147418104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2147232768 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839296 { -128000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294705151 { -262145 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147513327 { -2147453969 } : BV:32
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294577152 { -390144 } : BV:32
=memlabel-mem-esp_begin
1 : 1073553408 : BV:32
=memlabel-mem-esp_end
1 : 1073741823 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147385328 : BV:32
=commonMEM.nonstack.mem
1 : (( 2147418108 ) -> 1, ( 4294609924 ) -> 1, ( 4294609928 ) -> 1, ( 4294609932 ) -> 1, ( 2147418100 ) -> 1, ( 2147418104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 1 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1843964413
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 114 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073741820 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 79228162532711081671548469248 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147385328 : BV:32
=symbol.4
1 : 2147232768 : BV:32
=symbol.1
1 : 4294839296 { -128000 } : BV:32
=symbol.2
1 : 4294577152 { -390144 } : BV:32
=dst_symbol_addr.1
1 : 4294839296 { -128000 } : BV:32
=dst_symbol_addr.2
1 : 4294577152 { -390144 } : BV:32
=dst_symbol_addr.3
1 : 2147385328 : BV:32
=dst_symbol_addr.4
1 : 2147232768 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073741820 : BV:32
=input.src.llvm-mem
1 : (( 2147418108 ) -> 1, ( 4294609924 ) -> 1, ( 4294609928 ) -> 1, ( 4294609932 ) -> 1, ( 2147265540 ) -> 1, ( 2147265548 ) -> 1, ( 2147265544 ) -> 1, ( 2147418100 ) -> 1, ( 2147418104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2147360767 : BV:32
=input.dst.esp.L0%1%1
1 : 1073741820 : BV:32
=stack.size
1 : 188416 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 1 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294872076 { -95220 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.dst.mem
1 : (( 2147418108 ) -> 1, ( 4294609924 ) -> 1, ( 4294609928 ) -> 1, ( 4294609932 ) -> 1, ( 2147265540 ) -> 1, ( 2147265548 ) -> 1, ( 2147265544 ) -> 1, ( 2147418100 ) -> 1, ( 2147418104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 1 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 2147265548 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 2147232768 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 4294609932 { -357364 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839296 { -128000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294705151 { -262145 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147513327 { -2147453969 } : BV:32
=input.src.llvm-%mul
1 : 1 : BV:32
=input.src.llvm-%arrayidx2
1 : 2147418108 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294609932 { -357364 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294872076 { -95220 } : BV:32
=input.src.llvm-%arrayidx4
1 : 2147265548 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 1 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 2147418108 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294577152 { -390144 } : BV:32
=memlabel-mem-esp_begin
1 : 1073553408 : BV:32
=memlabel-mem-esp_end
1 : 1073741823 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147385328 : BV:32
=commonMEM.nonstack.mem
1 : (( 2147418108 ) -> 1, ( 4294609924 ) -> 1, ( 4294609928 ) -> 1, ( 4294609932 ) -> 1, ( 2147418100 ) -> 1, ( 2147418104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.10
1 : 0 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 1 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1843964413
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 115
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1862008828 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2130315248 : BV:32
=symbol.4
1 : 2146860032 : BV:32
=symbol.1
1 : 4294839296 { -128000 } : BV:32
=symbol.2
1 : 2147449856 : BV:32
=dst_symbol_addr.1
1 : 4294839296 { -128000 } : BV:32
=dst_symbol_addr.2
1 : 2147449856 : BV:32
=dst_symbol_addr.3
1 : 2130315248 : BV:32
=dst_symbol_addr.4
1 : 2146860032 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1862008828 : BV:32
=input.src.llvm-mem
1 : (( 2130380792 ) -> 1, ( 2147515404 ) -> 1, ( 4294904836 ) -> 1, ( 2130380788 ) -> 1, ( 2130380796 ) -> 1, ( 4294904844 ) -> 1, ( 4294904840 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2146988031 : BV:32
=input.dst.esp.L0%1%1
1 : 1862008828 : BV:32
=stack.size
1 : 805437440 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=input.dst.mem
1 : (( 2130380792 ) -> 1, ( 2147515404 ) -> 1, ( 4294904836 ) -> 1, ( 2130380788 ) -> 1, ( 2130380796 ) -> 1, ( 4294904844 ) -> 1, ( 4294904840 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 2146860032 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839296 { -128000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147577855 { -2147389441 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2130443247 : BV:32
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147449856 : BV:32
=memlabel-mem-esp_begin
1 : 1056571392 : BV:32
=memlabel-mem-esp_end
1 : 1862008831 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2130315248 : BV:32
=commonMEM.nonstack.mem
1 : (( 2130380792 ) -> 1, ( 2147515404 ) -> 1, ( 4294904836 ) -> 1, ( 2130380788 ) -> 1, ( 2130380796 ) -> 1, ( 4294904844 ) -> 1, ( 4294904840 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 1 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
874521679
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 115 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1862008828 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 316912650075504094452180320256 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2130315248 : BV:32
=symbol.4
1 : 2146860032 : BV:32
=symbol.1
1 : 4294839296 { -128000 } : BV:32
=symbol.2
1 : 2147449856 : BV:32
=dst_symbol_addr.1
1 : 4294839296 { -128000 } : BV:32
=dst_symbol_addr.2
1 : 2147449856 : BV:32
=dst_symbol_addr.3
1 : 2130315248 : BV:32
=dst_symbol_addr.4
1 : 2146860032 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1862008828 : BV:32
=input.src.llvm-mem
1 : (( 2130380792 ) -> 1, ( 2146925576 ) -> 1, ( 2146925580 ) -> 4, ( 2147515404 ) -> 1, ( 4294904836 ) -> 1, ( 2130380788 ) -> 1, ( 2130380796 ) -> 1, ( 4294904844 ) -> 1, ( 4294904840 ) -> 1, ( 2146925572 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 2146988031 : BV:32
=input.dst.esp.L0%1%1
1 : 1862008828 : BV:32
=stack.size
1 : 805437440 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 1 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294904844 { -62452 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.dst.mem
1 : (( 2130380792 ) -> 1, ( 2146925576 ) -> 1, ( 2146925580 ) -> 4, ( 2147515404 ) -> 1, ( 4294904836 ) -> 1, ( 2130380788 ) -> 1, ( 2130380796 ) -> 1, ( 4294904844 ) -> 1, ( 4294904840 ) -> 1, ( 2146925572 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 4 : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 2146925580 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 2146860032 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 2147515404 { -2147451892 } : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839296 { -128000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147577855 { -2147389441 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2130443247 : BV:32
=input.src.llvm-%mul
1 : 1 : BV:32
=input.src.llvm-%arrayidx2
1 : 2130380796 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147515404 { -2147451892 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294904844 { -62452 } : BV:32
=input.src.llvm-%arrayidx4
1 : 2146925580 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 1 : BV:32
=input.src.llvm-%add
1 : 2 : BV:32
=input.src.llvm-%0
1 : 1 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 2130380796 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147449856 : BV:32
=memlabel-mem-esp_begin
1 : 1056571392 : BV:32
=memlabel-mem-esp_end
1 : 1862008831 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2130315248 : BV:32
=commonMEM.nonstack.mem
1 : (( 2130380792 ) -> 1, ( 2147515404 ) -> 1, ( 4294904836 ) -> 1, ( 2130380788 ) -> 1, ( 2130380796 ) -> 1, ( 4294904844 ) -> 1, ( 4294904840 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.6
1 : 1 : BV:32
=unaliased_memslot.10
1 : 1 : BV:32
=unaliased_memslot.8
1 : 1 : BV:32
=unaliased_memslot.9
1 : 1 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 0 : BV:32
=unaliased_memslot.12
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
874521679
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 116
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1342214140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147418496 : BV:32
=symbol.4
1 : 152962160 : BV:32
=symbol.1
1 : 1745097040 : BV:32
=symbol.2
1 : 1610486032 : BV:32
=dst_symbol_addr.1
1 : 1745097040 : BV:32
=dst_symbol_addr.2
1 : 1610486032 : BV:32
=dst_symbol_addr.3
1 : 2147418496 : BV:32
=dst_symbol_addr.4
1 : 152962160 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1342214140 : BV:32
=input.src.llvm-mem
1 : (( 1745225013 ) -> 255, ( 2147546464 ) -> 255, ( 1610614011 ) -> 255, ( 1745225012 ) -> 255, ( 1610614010 ) -> 255, ( 1745225020 ) -> 255, ( 1745225014 ) -> 255, ( 1745225017 ) -> 255, ( 1610614007 ) -> 255, ( 1745225016 ) -> 255, ( 2147546465 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 153090159 : BV:32
=input.dst.esp.L0%1%1
1 : 1342214140 : BV:32
=stack.size
1 : 64131072 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1745225039 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=input.dst.mem
1 : (( 1745225013 ) -> 255, ( 2147546464 ) -> 255, ( 1610614011 ) -> 255, ( 1745225012 ) -> 255, ( 1610614010 ) -> 255, ( 1745225020 ) -> 255, ( 1745225014 ) -> 255, ( 1745225017 ) -> 255, ( 1610614007 ) -> 255, ( 1745225016 ) -> 255, ( 2147546465 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_begin
1 : 152962160 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1745097040 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1610614031 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147546495 { -2147420801 } : BV:32
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1610486032 : BV:32
=memlabel-mem-esp_begin
1 : 1278083072 : BV:32
=memlabel-mem-esp_end
1 : 1342214143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147418496 : BV:32
=commonMEM.nonstack.mem
1 : (( 1745225013 ) -> 255, ( 2147546464 ) -> 255, ( 1610614011 ) -> 255, ( 1745225012 ) -> 255, ( 1610614010 ) -> 255, ( 1745225020 ) -> 255, ( 1745225014 ) -> 255, ( 1745225017 ) -> 255, ( 1610614007 ) -> 255, ( 1745225016 ) -> 255, ( 2147546465 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 65535 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 255 : BV:32
=unaliased_memslot.4
1 : 4278190080 { -16777216 } : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 16777215 : BV:32
=unaliased_memslot.10
1 : 65535 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 4294901760 { -65536 } : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
971241731
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.3 : MEMLABEL
3 : symbol.4 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s251.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s251.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : bvadd(20, 11) : BV:32
22 : select(1, 19, 21, 16, 17) : BV:32
23 : mlvar.llvm.s251.2 : MEMLABEL
24 : symbol.3 : BV:32
25 : bvadd(24, 11) : BV:32
26 : select(1, 23, 25, 16, 17) : BV:32
27 : bvmul(22, 26) : BV:32
28 : bvadd(18, 27) : BV:32
29 : bvmul(28, 28) : BV:32
30 : store(1, 2, 12, 29, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx4
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : symbol.4 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.2 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s251.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.s251.2 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 13, 14) : BV:32
24 : bvmul(19, 23) : BV:32
25 : bvadd(15, 24) : BV:32
26 : bvmul(25, 25) : BV:32
=src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s251.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.12
1 : 1 : BOOL
2 : symbol.4 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.13
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.14
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.15
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*(((  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @c, i32 0, i32 %i.0, !dbg !22))*((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*(  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23*  %arrayidx2 = getelementptr inbounds [32000 x i32], [32000 x i32]* @d, i32 0, i32 %i.0, !dbg !23))))*((((((  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23*  %2 = load i32, i32* %arrayidx2, align 4, !dbg !23)*  %mul = mul nsw i32 %1, %2, !dbg !24)*(  %add = add nsw i32 %0, %mul, !dbg !25*  %mul3 = mul nsw i32 %add, %add, !dbg !28))*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*(  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29*  %arrayidx4 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !29)))*((((  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !30*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*  br label %for.inc, !dbg !31)*(((  %inc = add nsw i32 %i.0, 1, !dbg !32*  br label %for.cond, !dbg !33, !llvm.loop !34)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !33, !llvm.loop !34))*(  br label %for.cond, !dbg !33, !llvm.loop !34*  br label %for.cond, !dbg !33, !llvm.loop !34)))))
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L8%1%1)*(L8%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L8%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.4 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvmul(30, 14) : BV:32
32 : bvadd(31, 17) : BV:32
33 : bvadd(11, 32) : BV:32
34 : select(1, 29, 33, 23, 24) : BV:128
35 : bvextract(34, 26, 27) : BV:32
36 : bvmul(28, 35) : BV:32
37 : 95 : INT
38 : 64 : INT
39 : bvextract(25, 37, 38) : BV:32
40 : bvextract(34, 37, 38) : BV:32
41 : bvmul(39, 40) : BV:32
42 : bvconcat(36, 41) : BV:64
43 : 63 : INT
44 : 32 : INT
45 : bvextract(25, 43, 44) : BV:32
46 : bvextract(34, 43, 44) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvextract(25, 9, 10) : BV:32
49 : bvextract(34, 9, 10) : BV:32
50 : bvmul(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvconcat(42, 51) : BV:128
53 : bvextract(52, 26, 27) : BV:32
54 : mlvar.dst.2 : MEMLABEL
55 : dst_symbol_addr.1 : BV:32
56 : bvmul(55, 14) : BV:32
57 : bvadd(56, 17) : BV:32
58 : bvadd(11, 57) : BV:32
59 : select(1, 54, 58, 23, 24) : BV:128
60 : bvextract(59, 26, 27) : BV:32
61 : bvadd(53, 60) : BV:32
62 : bvextract(52, 37, 38) : BV:32
63 : bvextract(59, 37, 38) : BV:32
64 : bvadd(62, 63) : BV:32
65 : bvconcat(61, 64) : BV:64
66 : bvextract(52, 43, 44) : BV:32
67 : bvextract(59, 43, 44) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvextract(52, 9, 10) : BV:32
70 : bvextract(59, 9, 10) : BV:32
71 : bvadd(69, 70) : BV:32
72 : bvconcat(68, 71) : BV:64
73 : bvconcat(65, 72) : BV:128
74 : bvextract(73, 26, 27) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(73, 37, 38) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvextract(73, 43, 44) : BV:32
80 : bvmul(79, 79) : BV:32
81 : bvextract(73, 9, 10) : BV:32
82 : bvmul(81, 81) : BV:32
83 : bvconcat(80, 82) : BV:64
84 : bvconcat(78, 83) : BV:128
85 : store(1, 2, 19, 84, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 9, 10) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : dst_symbol_addr.1 : BV:32
51 : bvmul(50, 23) : BV:32
52 : bvadd(51, 26) : BV:32
53 : bvadd(20, 52) : BV:32
54 : select(1, 49, 53, 6, 7) : BV:128
55 : bvextract(54, 9, 10) : BV:32
56 : bvadd(48, 55) : BV:32
57 : bvextract(47, 32, 33) : BV:32
58 : bvextract(54, 32, 33) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvconcat(56, 59) : BV:64
61 : bvextract(47, 38, 39) : BV:32
62 : bvextract(54, 38, 39) : BV:32
63 : bvadd(61, 62) : BV:32
64 : bvextract(47, 18, 19) : BV:32
65 : bvextract(54, 18, 19) : BV:32
66 : bvadd(64, 65) : BV:32
67 : bvconcat(63, 66) : BV:64
68 : bvconcat(60, 67) : BV:128
69 : bvextract(68, 9, 10) : BV:32
70 : bvmul(69, 69) : BV:32
71 : bvextract(68, 32, 33) : BV:32
72 : bvmul(71, 71) : BV:32
73 : bvconcat(70, 72) : BV:64
74 : bvextract(68, 38, 39) : BV:32
75 : bvmul(74, 74) : BV:32
76 : bvextract(68, 18, 19) : BV:32
77 : bvmul(76, 76) : BV:32
78 : bvconcat(75, 77) : BV:64
79 : bvconcat(73, 78) : BV:128
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 116 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1342214140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 5151890493234737926501494203351040 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147418496 : BV:32
=symbol.4
1 : 152962160 : BV:32
=symbol.1
1 : 1745097040 : BV:32
=symbol.2
1 : 1610486032 : BV:32
=dst_symbol_addr.1
1 : 1745097040 : BV:32
=dst_symbol_addr.2
1 : 1610486032 : BV:32
=dst_symbol_addr.3
1 : 2147418496 : BV:32
=dst_symbol_addr.4
1 : 152962160 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1342214140 : BV:32
=input.src.llvm-mem
1 : (( 153090135 ) -> 254, ( 1745225013 ) -> 255, ( 2147546464 ) -> 255, ( 1610614011 ) -> 255, ( 1745225012 ) -> 255, ( 1610614010 ) -> 255, ( 153090132 ) -> 1, ( 153090136 ) -> 1, ( 1745225020 ) -> 255, ( 1745225014 ) -> 255, ( 1745225017 ) -> 255, ( 153090140 ) -> 1, ( 153090139 ) -> 255, ( 153090138 ) -> 254, ( 153090141 ) -> 254, ( 1610614007 ) -> 255, ( 1745225016 ) -> 255, ( 2147546465 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.4.0_end
1 : 153090159 : BV:32
=input.dst.esp.L0%1%1
1 : 1342214140 : BV:32
=stack.size
1 : 64131072 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1745225039 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1745225020 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.dst.mem
1 : (( 153090135 ) -> 254, ( 1745225013 ) -> 255, ( 2147546464 ) -> 255, ( 1610614011 ) -> 255, ( 1745225012 ) -> 255, ( 1610614010 ) -> 255, ( 153090132 ) -> 1, ( 153090136 ) -> 1, ( 1745225020 ) -> 255, ( 1745225014 ) -> 255, ( 1745225017 ) -> 255, ( 153090140 ) -> 1, ( 153090139 ) -> 255, ( 153090138 ) -> 254, ( 153090141 ) -> 254, ( 1610614007 ) -> 255, ( 1745225016 ) -> 255, ( 2147546465 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul3
1 : 65025 : BV:32
=input.src.llvm-%inc
1 : 31996 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.3.total_offset
1 : 153090140 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-symbol.4.0_begin
1 : 152962160 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.3.total_offset
1 : 1610614012 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1745097040 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1610614031 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%b77e9cdcb31bdcf1bb8dd3ccd76ae393.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147546495 { -2147420801 } : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%arrayidx2
1 : 2147546476 { -2147420820 } : BV:32
=input.src.llvm-%arrayidx1
1 : 1610614012 : BV:32
=input.src.llvm-%arrayidx
1 : 1745225020 : BV:32
=input.src.llvm-%arrayidx4
1 : 153090140 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%511dd9793ff35f4dba4b96f6d03b50.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%add
1 : 255 : BV:32
=input.src.llvm-%0
1 : 255 : BV:32
=input.src.llvm-%d37de1b9499286cc38f734f5f01e1e.gepoffset.3.total_offset
1 : 2147546476 { -2147420820 } : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1610486032 : BV:32
=memlabel-mem-esp_begin
1 : 1278083072 : BV:32
=memlabel-mem-esp_end
1 : 1342214143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147418496 : BV:32
=commonMEM.nonstack.mem
1 : (( 1745225013 ) -> 255, ( 2147546464 ) -> 255, ( 1610614011 ) -> 255, ( 1745225012 ) -> 255, ( 1610614010 ) -> 255, ( 1745225020 ) -> 255, ( 1745225014 ) -> 255, ( 1745225017 ) -> 255, ( 1610614007 ) -> 255, ( 1745225016 ) -> 255, ( 2147546465 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.3
1 : 65535 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.7
1 : 255 : BV:32
=unaliased_memslot.4
1 : 4278190080 { -16777216 } : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 16777215 : BV:32
=unaliased_memslot.10
1 : 65535 : BV:32
=unaliased_memslot.8
1 : 0 : BV:32
=unaliased_memslot.9
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.11
1 : 4294901760 { -65536 } : BV:32
=unaliased_memslot.12
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
971241731
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L1%1%0:
=pc Lfor.body%1%1_L1%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-symbol.4.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.2 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 2
1 : symbol.3 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 3
1 : symbol.4 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 4
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvmul(10, 14) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : memlabel-mem-symbol.3.0 : MEMLABEL
16 : symbol.3 : BV:32
17 : bvadd(16, 6) : BV:32
18 : select(1, 15, 17, 8, 9) : BV:32
19 : bvmul(14, 18) : BV:32
20 : bvadd(10, 19) : BV:32
21 : bvmul(20, 20) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 4, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvmul(10, 14) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 4, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : memlabel-mem-symbol.3.0 : MEMLABEL
16 : symbol.3 : BV:32
17 : bvadd(16, 4, 6) : BV:32
18 : select(1, 15, 17, 8, 9) : BV:32
19 : bvmul(14, 18) : BV:32
20 : bvadd(10, 19) : BV:32
21 : bvmul(20, 20) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.src.llvm-%i.0 : BV:32
2 : 3 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 24
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.3.0 : MEMLABEL
13 : symbol.3 : BV:32
14 : bvadd(13, 6, 7) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6, 7) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : memlabel-mem-symbol.3.0 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 6, 7) : BV:32
19 : select(1, 16, 18, 9, 10) : BV:32
20 : bvmul(15, 19) : BV:32
21 : bvadd(11, 20) : BV:32
22 : bvmul(21, 21) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 28
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 29
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.3.0 : MEMLABEL
13 : symbol.3 : BV:32
14 : bvadd(13, 6, 7) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 30
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6, 7) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : memlabel-mem-symbol.3.0 : MEMLABEL
17 : symbol.3 : BV:32
18 : bvadd(17, 6, 7) : BV:32
19 : select(1, 16, 18, 9, 10) : BV:32
20 : bvmul(15, 19) : BV:32
21 : bvadd(11, 20) : BV:32
22 : bvmul(21, 21) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 31
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 32
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 33
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 34
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 35
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 36
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 37
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 38
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 39
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.38
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear14-12-free_var_idx.37
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4092 { -4 } : BV:12
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.3.0 : MEMLABEL
4 : symbol.3 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(2, 3, 8, 9, 10) : BV:32
12 : 11 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:12
15 : memlabel-mem-symbol.2.0 : MEMLABEL
16 : symbol.2 : BV:32
17 : bvadd(16, 7) : BV:32
18 : select(2, 15, 17, 9, 10) : BV:32
19 : bvextract(18, 12, 13) : BV:12
20 : bvmul(14, 19) : BV:12
21 : memlabel-mem-symbol.1.0 : MEMLABEL
22 : symbol.1 : BV:32
23 : bvadd(22, 7) : BV:32
24 : select(2, 21, 23, 9, 10) : BV:32
25 : bvextract(24, 12, 13) : BV:12
26 : bvadd(20, 25) : BV:12
27 : 2048 { -2048 } : BV:12
28 : bvmul(26, 26, 27) : BV:12
29 : bvextract(16, 12, 13) : BV:12
30 : 2560 { -1536 } : BV:12
31 : bvmul(29, 30) : BV:12
32 : bvextract(5, 12, 13) : BV:12
33 : 3072 { -1024 } : BV:12
34 : bvmul(32, 33) : BV:12
35 : bvmul(14, 19, 27) : BV:12
36 : 2816 { -1280 } : BV:12
37 : bvextract(4, 12, 13) : BV:12
38 : bvmul(36, 37) : BV:12
39 : 8 : BV:32
40 : bvadd(22, 7, 39) : BV:32
41 : select(2, 21, 40, 9, 10) : BV:32
42 : bvextract(41, 12, 13) : BV:12
43 : bvadd(16, 7, 39) : BV:32
44 : select(2, 15, 43, 9, 10) : BV:32
45 : bvextract(44, 12, 13) : BV:12
46 : bvadd(4, 7, 39) : BV:32
47 : select(2, 3, 46, 9, 10) : BV:32
48 : bvextract(47, 12, 13) : BV:12
49 : bvmul(45, 48) : BV:12
50 : bvadd(42, 49) : BV:12
51 : bvmul(50, 50, 27) : BV:12
52 : bvmul(27, 25) : BV:12
53 : bvmul(27, 42) : BV:12
54 : bvmul(45, 48, 27) : BV:12
55 : bvadd(22, 6, 7) : BV:32
56 : select(2, 21, 55, 9, 10) : BV:32
57 : bvextract(56, 12, 13) : BV:12
58 : bvmul(27, 57) : BV:12
59 : bvadd(16, 6, 7) : BV:32
60 : select(2, 15, 59, 9, 10) : BV:32
61 : bvextract(60, 12, 13) : BV:12
62 : bvadd(4, 6, 7) : BV:32
63 : select(2, 3, 62, 9, 10) : BV:32
64 : bvextract(63, 12, 13) : BV:12
65 : bvmul(61, 64, 27) : BV:12
66 : bvmul(61, 64) : BV:12
67 : bvadd(57, 66) : BV:12
68 : bvmul(67, 67, 27) : BV:12
69 : bvextract(22, 12, 13) : BV:12
70 : bvmul(36, 69) : BV:12
71 : bvadd(1, 28, 31, 34, 35, 38, 51, 52, 53, 54, 58, 65, 68, 70) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear6-1-free_var_idx.17
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : 0 : INT
12 : bvextract(10, 11, 11) : BV:1
13 : memlabel-mem-symbol.3.0 : MEMLABEL
14 : symbol.3 : BV:32
15 : bvadd(14, 4, 6) : BV:32
16 : select(1, 13, 15, 8, 9) : BV:32
17 : bvextract(16, 11, 11) : BV:1
18 : bvmul(12, 17) : BV:1
19 : memlabel-mem-symbol.1.0 : MEMLABEL
20 : symbol.1 : BV:32
21 : bvadd(20, 4, 6) : BV:32
22 : select(1, 19, 21, 8, 9) : BV:32
23 : bvextract(22, 11, 11) : BV:1
24 : bvadd(18, 23) : BV:1
25 : bvmul(24, 24) : BV:1
26 : 12 : BV:32
27 : bvadd(20, 6, 26) : BV:32
28 : select(1, 19, 27, 8, 9) : BV:32
29 : bvextract(28, 11, 11) : BV:1
30 : bvadd(3, 6, 26) : BV:32
31 : select(1, 2, 30, 8, 9) : BV:32
32 : bvextract(31, 11, 11) : BV:1
33 : bvadd(14, 6, 26) : BV:32
34 : select(1, 13, 33, 8, 9) : BV:32
35 : bvextract(34, 11, 11) : BV:1
36 : bvmul(32, 35) : BV:1
37 : bvadd(29, 36) : BV:1
38 : bvmul(37, 37) : BV:1
39 : bvadd(18, 23, 25, 29, 36, 38) : BV:1
=RhsExpr
1 : 0 : BV:1
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear11-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : 3 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:4
14 : memlabel-mem-symbol.2.0 : MEMLABEL
15 : symbol.2 : BV:32
16 : bvadd(15, 6) : BV:32
17 : select(1, 14, 16, 8, 9) : BV:32
18 : bvextract(17, 11, 12) : BV:4
19 : memlabel-mem-symbol.3.0 : MEMLABEL
20 : symbol.3 : BV:32
21 : bvadd(20, 6) : BV:32
22 : select(1, 19, 21, 8, 9) : BV:32
23 : bvextract(22, 11, 12) : BV:4
24 : bvmul(18, 23) : BV:4
25 : bvadd(13, 24) : BV:4
26 : 8 { -8 } : BV:4
27 : bvmul(25, 25, 26) : BV:4
28 : bvadd(3, 5, 6) : BV:32
29 : select(1, 2, 28, 8, 9) : BV:32
30 : bvextract(29, 11, 12) : BV:4
31 : bvmul(30, 26) : BV:4
32 : bvmul(13, 26) : BV:4
33 : bvmul(18, 23, 26) : BV:4
34 : bvextract(3, 11, 12) : BV:4
35 : bvneg(34) : BV:4
36 : 12 { -4 } : BV:4
37 : bvextract(4, 11, 12) : BV:4
38 : bvmul(36, 37) : BV:4
39 : bvadd(15, 5, 6) : BV:32
40 : select(1, 14, 39, 8, 9) : BV:32
41 : bvextract(40, 11, 12) : BV:4
42 : bvadd(20, 5, 6) : BV:32
43 : select(1, 19, 42, 8, 9) : BV:32
44 : bvextract(43, 11, 12) : BV:4
45 : bvmul(41, 44) : BV:4
46 : bvadd(45, 30) : BV:4
47 : bvmul(46, 46, 26) : BV:4
48 : bvmul(41, 44, 26) : BV:4
49 : 12 : BV:32
50 : bvadd(3, 6, 49) : BV:32
51 : select(1, 2, 50, 8, 9) : BV:32
52 : bvextract(51, 11, 12) : BV:4
53 : bvmul(26, 52) : BV:4
54 : bvadd(15, 6, 49) : BV:32
55 : select(1, 14, 54, 8, 9) : BV:32
56 : bvextract(55, 11, 12) : BV:4
57 : bvadd(20, 6, 49) : BV:32
58 : select(1, 19, 57, 8, 9) : BV:32
59 : bvextract(58, 11, 12) : BV:4
60 : bvmul(56, 59, 26) : BV:4
61 : bvmul(56, 59) : BV:4
62 : bvadd(61, 52) : BV:4
63 : bvmul(62, 62, 26) : BV:4
64 : bvadd(27, 31, 32, 33, 35, 38, 47, 48, 53, 60, 63) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear8-4-free_var_idx.2
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : 3 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:4
14 : 8 { -8 } : BV:4
15 : bvmul(13, 14) : BV:4
16 : 8 : BV:32
17 : bvadd(3, 6, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvextract(18, 11, 12) : BV:4
20 : bvmul(14, 19) : BV:4
21 : symbol.3 : BV:32
22 : bvextract(21, 11, 12) : BV:4
23 : bvneg(22) : BV:4
24 : memlabel-mem-symbol.2.0 : MEMLABEL
25 : symbol.2 : BV:32
26 : bvadd(25, 4, 6) : BV:32
27 : select(1, 24, 26, 8, 9) : BV:32
28 : bvextract(27, 11, 12) : BV:4
29 : memlabel-mem-symbol.3.0 : MEMLABEL
30 : bvadd(21, 4, 6) : BV:32
31 : select(1, 29, 30, 8, 9) : BV:32
32 : bvextract(31, 11, 12) : BV:4
33 : bvmul(28, 32) : BV:4
34 : bvadd(33, 13) : BV:4
35 : bvmul(34, 34, 14) : BV:4
36 : 9 { -7 } : BV:4
37 : symbol.4 : BV:32
38 : bvextract(37, 11, 12) : BV:4
39 : bvmul(36, 38) : BV:4
40 : bvmul(28, 32, 14) : BV:4
41 : bvadd(25, 6, 16) : BV:32
42 : select(1, 24, 41, 8, 9) : BV:32
43 : bvextract(42, 11, 12) : BV:4
44 : bvadd(21, 6, 16) : BV:32
45 : select(1, 29, 44, 8, 9) : BV:32
46 : bvextract(45, 11, 12) : BV:4
47 : bvmul(43, 46, 14) : BV:4
48 : bvmul(43, 46) : BV:4
49 : bvadd(48, 19) : BV:4
50 : bvmul(49, 49, 14) : BV:4
51 : bvadd(15, 20, 23, 35, 39, 40, 47, 50) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-32-free_var_idx.39
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear6-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : 12 { -4 } : BV:4
7 : symbol.1 : BV:32
8 : bvextract(7, 2, 3) : BV:4
9 : bvmul(6, 8) : BV:4
10 : 6 : BV:4
11 : symbol.4 : BV:32
12 : bvextract(11, 2, 3) : BV:4
13 : bvmul(10, 12) : BV:4
14 : 8 { -8 } : BV:4
15 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
16 : memlabel-mem-symbol.1.0 : MEMLABEL
17 : input.src.llvm-%i.0 : BV:32
18 : 4 : BV:32
19 : bvmul(17, 18) : BV:32
20 : 12 : BV:32
21 : bvadd(7, 19, 20) : BV:32
22 : 4 : INT
23 : 0 : BOOL
24 : select(15, 16, 21, 22, 23) : BV:32
25 : bvextract(24, 2, 3) : BV:4
26 : bvmul(14, 25) : BV:4
27 : memlabel-mem-symbol.2.0 : MEMLABEL
28 : bvadd(1, 19, 20) : BV:32
29 : select(15, 27, 28, 22, 23) : BV:32
30 : bvextract(29, 2, 3) : BV:4
31 : memlabel-mem-symbol.3.0 : MEMLABEL
32 : symbol.3 : BV:32
33 : bvadd(32, 19, 20) : BV:32
34 : select(15, 31, 33, 22, 23) : BV:32
35 : bvextract(34, 2, 3) : BV:4
36 : bvmul(30, 35, 14) : BV:4
37 : bvmul(30, 35) : BV:4
38 : bvadd(37, 25) : BV:4
39 : bvmul(38, 38, 14) : BV:4
40 : bvadd(5, 9, 13, 26, 36, 39) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear8-32-free_var_idx.32
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-symbol.1.0 : MEMLABEL
6 : symbol.1 : BV:32
7 : bvadd(6, 2, 3) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(4, 5, 7, 8, 9) : BV:32
11 : 2147483648 { -2147483648 } : BV:32
12 : bvmul(10, 11) : BV:32
13 : 8 : BV:32
14 : bvadd(6, 3, 13) : BV:32
15 : select(4, 5, 14, 8, 9) : BV:32
16 : bvmul(15, 11) : BV:32
17 : memlabel-mem-symbol.2.0 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 3, 13) : BV:32
20 : select(4, 17, 19, 8, 9) : BV:32
21 : memlabel-mem-symbol.3.0 : MEMLABEL
22 : symbol.3 : BV:32
23 : bvadd(22, 3, 13) : BV:32
24 : select(4, 21, 23, 8, 9) : BV:32
25 : bvmul(20, 24, 11) : BV:32
26 : bvmul(20, 24) : BV:32
27 : bvadd(15, 26) : BV:32
28 : bvmul(27, 27, 11) : BV:32
29 : bvadd(18, 2, 3) : BV:32
30 : select(4, 17, 29, 8, 9) : BV:32
31 : bvadd(22, 2, 3) : BV:32
32 : select(4, 21, 31, 8, 9) : BV:32
33 : bvmul(30, 32, 11) : BV:32
34 : bvmul(30, 32) : BV:32
35 : bvadd(10, 34) : BV:32
36 : bvmul(35, 35, 11) : BV:32
37 : bvadd(3, 12, 16, 25, 28, 33, 36) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear3-1-free_var_idx.12
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : 0 : INT
12 : bvextract(10, 11, 11) : BV:1
13 : memlabel-mem-symbol.2.0 : MEMLABEL
14 : symbol.2 : BV:32
15 : bvadd(14, 6) : BV:32
16 : select(1, 13, 15, 8, 9) : BV:32
17 : bvextract(16, 11, 11) : BV:1
18 : memlabel-mem-symbol.3.0 : MEMLABEL
19 : symbol.3 : BV:32
20 : bvadd(19, 6) : BV:32
21 : select(1, 18, 20, 8, 9) : BV:32
22 : bvextract(21, 11, 11) : BV:1
23 : bvmul(17, 22) : BV:1
24 : bvadd(12, 23) : BV:1
25 : bvmul(24, 24) : BV:1
26 : bvadd(12, 23, 25) : BV:1
=RhsExpr
1 : 0 : BV:1
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear3-1-free_var_idx.18
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : 0 : INT
12 : bvextract(10, 11, 11) : BV:1
13 : memlabel-mem-symbol.3.0 : MEMLABEL
14 : symbol.3 : BV:32
15 : bvadd(14, 4, 6) : BV:32
16 : select(1, 13, 15, 8, 9) : BV:32
17 : bvextract(16, 11, 11) : BV:1
18 : bvmul(12, 17) : BV:1
19 : memlabel-mem-symbol.1.0 : MEMLABEL
20 : symbol.1 : BV:32
21 : bvadd(20, 4, 6) : BV:32
22 : select(1, 19, 21, 8, 9) : BV:32
23 : bvextract(22, 11, 11) : BV:1
24 : bvadd(18, 23) : BV:1
25 : bvmul(24, 24) : BV:1
26 : bvadd(18, 23, 25) : BV:1
=RhsExpr
1 : 0 : BV:1
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear7-4-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : 3 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:4
14 : 8 { -8 } : BV:4
15 : bvmul(13, 14) : BV:4
16 : 8 : BV:32
17 : bvadd(3, 6, 16) : BV:32
18 : select(1, 2, 17, 8, 9) : BV:32
19 : bvextract(18, 11, 12) : BV:4
20 : bvmul(14, 19) : BV:4
21 : symbol.4 : BV:32
22 : bvextract(21, 11, 12) : BV:4
23 : bvneg(22) : BV:4
24 : memlabel-mem-symbol.2.0 : MEMLABEL
25 : symbol.2 : BV:32
26 : bvadd(25, 4, 6) : BV:32
27 : select(1, 24, 26, 8, 9) : BV:32
28 : bvextract(27, 11, 12) : BV:4
29 : memlabel-mem-symbol.3.0 : MEMLABEL
30 : symbol.3 : BV:32
31 : bvadd(30, 4, 6) : BV:32
32 : select(1, 29, 31, 8, 9) : BV:32
33 : bvextract(32, 11, 12) : BV:4
34 : bvmul(28, 33) : BV:4
35 : bvadd(34, 13) : BV:4
36 : bvmul(35, 35, 14) : BV:4
37 : bvmul(28, 33, 14) : BV:4
38 : bvadd(25, 6, 16) : BV:32
39 : select(1, 24, 38, 8, 9) : BV:32
40 : bvextract(39, 11, 12) : BV:4
41 : bvadd(30, 6, 16) : BV:32
42 : select(1, 29, 41, 8, 9) : BV:32
43 : bvextract(42, 11, 12) : BV:4
44 : bvmul(40, 43, 14) : BV:4
45 : bvmul(40, 43) : BV:4
46 : bvadd(45, 19) : BV:4
47 : bvmul(46, 46, 14) : BV:4
48 : bvadd(15, 20, 23, 36, 37, 44, 47) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear2-32-free_var_idx.7
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear1-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 13
=Comment
linear2-32-free_var_idx.21
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 3 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 14
=Comment
linear6-1-free_var_idx.18
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : 0 : INT
12 : bvextract(10, 11, 11) : BV:1
13 : memlabel-mem-symbol.3.0 : MEMLABEL
14 : symbol.3 : BV:32
15 : bvadd(14, 4, 6) : BV:32
16 : select(1, 13, 15, 8, 9) : BV:32
17 : bvextract(16, 11, 11) : BV:1
18 : bvmul(12, 17) : BV:1
19 : memlabel-mem-symbol.1.0 : MEMLABEL
20 : symbol.1 : BV:32
21 : bvadd(20, 4, 6) : BV:32
22 : select(1, 19, 21, 8, 9) : BV:32
23 : bvextract(22, 11, 11) : BV:1
24 : bvadd(18, 23) : BV:1
25 : bvmul(24, 24) : BV:1
26 : 8 : BV:32
27 : bvadd(20, 6, 26) : BV:32
28 : select(1, 19, 27, 8, 9) : BV:32
29 : bvextract(28, 11, 11) : BV:1
30 : bvadd(3, 6, 26) : BV:32
31 : select(1, 2, 30, 8, 9) : BV:32
32 : bvextract(31, 11, 11) : BV:1
33 : bvadd(14, 6, 26) : BV:32
34 : select(1, 13, 33, 8, 9) : BV:32
35 : bvextract(34, 11, 11) : BV:1
36 : bvmul(32, 35) : BV:1
37 : bvadd(29, 36) : BV:1
38 : bvmul(37, 37) : BV:1
39 : bvadd(18, 23, 25, 29, 36, 38) : BV:1
=RhsExpr
1 : 0 : BV:1
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 15
=Comment
linear10-2-free_var_idx.6
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 2 { -2 } : BV:2
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : 8 : BV:32
9 : bvadd(4, 7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(2, 3, 9, 10, 11) : BV:32
13 : 1 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:2
16 : bvmul(1, 15) : BV:2
17 : memlabel-mem-symbol.3.0 : MEMLABEL
18 : symbol.3 : BV:32
19 : bvadd(18, 7, 8) : BV:32
20 : select(2, 17, 19, 10, 11) : BV:32
21 : bvextract(20, 13, 14) : BV:2
22 : memlabel-mem-symbol.2.0 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 7, 8) : BV:32
25 : select(2, 22, 24, 10, 11) : BV:32
26 : bvextract(25, 13, 14) : BV:2
27 : bvmul(21, 26, 1) : BV:2
28 : 12 : BV:32
29 : bvadd(4, 7, 28) : BV:32
30 : select(2, 3, 29, 10, 11) : BV:32
31 : bvextract(30, 13, 14) : BV:2
32 : bvmul(1, 31) : BV:2
33 : bvadd(23, 7, 28) : BV:32
34 : select(2, 22, 33, 10, 11) : BV:32
35 : bvextract(34, 13, 14) : BV:2
36 : bvadd(18, 7, 28) : BV:32
37 : select(2, 17, 36, 10, 11) : BV:32
38 : bvextract(37, 13, 14) : BV:2
39 : bvmul(35, 38) : BV:2
40 : bvadd(31, 39) : BV:2
41 : bvmul(40, 40, 1) : BV:2
42 : bvextract(5, 13, 14) : BV:2
43 : bvneg(42) : BV:2
44 : bvadd(4, 6, 7) : BV:32
45 : select(2, 3, 44, 10, 11) : BV:32
46 : bvextract(45, 13, 14) : BV:2
47 : bvmul(1, 46) : BV:2
48 : bvadd(23, 6, 7) : BV:32
49 : select(2, 22, 48, 10, 11) : BV:32
50 : bvextract(49, 13, 14) : BV:2
51 : bvadd(18, 6, 7) : BV:32
52 : select(2, 17, 51, 10, 11) : BV:32
53 : bvextract(52, 13, 14) : BV:2
54 : bvmul(50, 53, 1) : BV:2
55 : bvmul(35, 38, 1) : BV:2
56 : bvmul(50, 53) : BV:2
57 : bvadd(46, 56) : BV:2
58 : bvmul(57, 57, 1) : BV:2
59 : bvmul(21, 26) : BV:2
60 : bvadd(15, 59) : BV:2
61 : bvmul(60, 60, 1) : BV:2
62 : bvadd(16, 27, 32, 41, 43, 47, 54, 55, 58, 61) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 16
=Comment
linear2-32-free_var_idx.14
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 17
=Comment
linear2-32-free_var_idx.20
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 2 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 6
1 : symbol.3 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 7
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 8
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 9
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 10
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 11
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 12
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 6
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 7
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 8
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 9
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 10
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 11
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 12
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
